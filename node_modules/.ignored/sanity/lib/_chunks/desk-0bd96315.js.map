{"version":3,"file":"desk-0bd96315.js","sources":["../../src/desk/components/Delay.tsx","../../src/desk/components/DocTitle.tsx","../../src/desk/components/TimeAgo.tsx","../../src/desk/components/confirmDeleteDialog/useReferringDocuments.ts","../../src/desk/components/PublishedStatus.tsx","../../src/desk/components/DraftStatus.tsx","../../src/desk/components/paneItem/PaneItemPreview.tsx","../../src/desk/components/paneRouter/PaneRouterContext.tsx","../../src/desk/components/paneRouter/BackLink.tsx","../../src/desk/components/paneRouter/ChildLink.tsx","../../src/desk/components/paneRouter/ReferenceChildLink.tsx","../../src/desk/components/paneRouter/ParameterizedLink.tsx","../../src/desk/components/paneRouter/usePaneRouter.ts","../../src/desk/components/confirmDeleteDialog/ReferencePreviewLink.tsx","../../src/desk/components/confirmDeleteDialog/ConfirmDeleteDialogBody.styles.tsx","../../src/desk/components/confirmDeleteDialog/ConfirmDeleteDialogBody.tsx","../../src/desk/components/confirmDeleteDialog/ConfirmDeleteDialog.tsx","../../src/desk/components/confirmDeleteDialog/index.tsx","../../src/desk/components/pane/PaneMenuButtonItem.tsx","../../src/desk/components/pane/PaneContextMenuButton.tsx","../../src/desk/components/pane/constants.ts","../../src/desk/components/pane/PaneContext.ts","../../src/desk/components/pane/PaneLayoutContext.ts","../../src/desk/components/pane/usePaneLayout.ts","../../src/desk/components/pane/PaneDivider.tsx","../../src/desk/components/pane/Pane.tsx","../../src/desk/components/pane/usePane.ts","../../src/desk/components/pane/PaneContent.styles.tsx","../../src/desk/components/pane/PaneContent.tsx","../../src/desk/components/pane/PaneFooter.styles.tsx","../../src/desk/components/pane/PaneFooter.tsx","../../src/desk/components/pane/PaneHeader.styles.tsx","../../src/desk/components/pane/PaneHeader.tsx","../../src/desk/components/pane/PaneHeaderActionButton.tsx","../../src/desk/components/pane/PaneLayout.styles.tsx","../../src/desk/menuNodes.ts","../../src/desk/components/IntentButton.tsx","../../src/desk/components/paneHeaderActions/InsufficientPermissionsMessageTooltip.tsx","../../src/desk/components/paneHeaderActions/PaneHeaderCreateButton.tsx","../../src/desk/components/paneHeaderActions/PaneHeaderActions.tsx","../../src/desk/documentActions/DeleteAction.tsx","../../src/desk/documentActions/DiscardChangesAction.tsx","../../src/desk/documentActions/DuplicateAction.tsx","../../src/desk/documentActions/HistoryRestoreAction.tsx","../../src/desk/panes/document/DocumentPaneContext.ts","../../src/desk/panes/document/useDocumentPane.tsx","../../src/desk/documentActions/PublishAction.tsx","../../src/desk/documentActions/UnpublishAction.tsx","../../src/desk/documentBadges/LiveEditBadge.ts","../../src/desk/constants.ts","../../src/desk/getIntentState.ts","../../src/desk/router.ts","../../src/desk/panes/document/constants.ts","../../src/desk/panes/document/documentInspector/DocumentInspectorHeader.tsx","../../src/desk/DeskToolContext.ts","../../src/desk/useDeskTool.ts","../../src/desk/panes/document/documentInspector/Resizer.tsx","../../src/desk/panes/document/documentInspector/Resizable.tsx","../../src/desk/panes/document/inspectors/validation/getPathTypes.ts","../../src/desk/panes/document/inspectors/validation/ValidationInspector.tsx","../../src/desk/panes/document/inspectors/validation/index.ts","../../src/desk/panes/document/timeline/constants.ts","../../src/desk/panes/document/timeline/helpers.ts","../../src/desk/panes/document/timeline/userAvatarStack.tsx","../../src/desk/panes/document/timeline/timelineItem.styled.tsx","../../src/desk/panes/document/timeline/timelineItem.tsx","../../src/desk/panes/document/timeline/timeline.styled.tsx","../../src/desk/panes/document/timeline/timeline.tsx","../../src/desk/panes/document/timeline/TimelineError.tsx","../../src/desk/panes/document/timeline/timelineMenu.tsx","../../src/desk/panes/document/inspectors/changes/LoadingContent.tsx","../../src/desk/panes/document/inspectors/changes/helpers.ts","../../src/desk/panes/document/inspectors/changes/ChangesInspector.tsx","../../src/desk/panes/document/inspectors/changes/index.ts","../../src/desk/deskTool.ts","../../src/desk/panes/document/menuItems.ts","../../src/desk/panes/document/usePreviewUrl.ts","../../src/desk/panes/document/getInitialValueTemplateOpts.ts","../../src/desk/panes/document/DocumentInspectorMenuItemsResolver.tsx","../../src/desk/panes/document/DocumentPaneProvider.tsx","../../src/desk/structureBuilder/SerializeError.ts","../../src/desk/structureBuilder/util/getExtendedProjection.ts","../../src/desk/structureBuilder/Sort.ts","../../src/desk/structureBuilder/MenuItem.ts","../../src/desk/structureBuilder/MenuItemGroup.ts","../../src/desk/structureBuilder/util/validateId.ts","../../src/desk/structureBuilder/util/getStructureNodeId.ts","../../src/desk/structureBuilder/Component.ts","../../src/desk/structureBuilder/util/resolveTypeForDocument.ts","../../src/desk/structureBuilder/views/View.ts","../../src/desk/structureBuilder/views/ComponentView.ts","../../src/desk/structureBuilder/views/FormView.ts","../../src/desk/structureBuilder/views/index.ts","../../src/desk/structureBuilder/Document.ts","../../src/desk/structureBuilder/Layout.ts","../../src/desk/structureBuilder/Intent.ts","../../src/desk/structureBuilder/InitialValueTemplateItem.ts","../../src/desk/structureBuilder/GenericList.ts","../../src/desk/structureBuilder/DocumentList.ts","../../src/desk/structureBuilder/List.ts","../../src/desk/structureBuilder/ListItem.ts","../../src/desk/structureBuilder/DocumentListItem.ts","../../src/desk/structureBuilder/DocumentTypeList.ts","../../src/desk/structureBuilder/documentTypeListItems.ts","../../src/desk/structureBuilder/createStructureBuilder.ts","../../src/desk/DeskToolProvider.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\n\nexport function Delay({\n  children,\n  ms = 0,\n}: {\n  children?: React.ReactElement | (() => React.ReactElement)\n  ms?: number\n}): React.ReactElement {\n  const [ready, setReady] = useState(ms <= 0)\n\n  useEffect(() => {\n    if (ms <= 0) {\n      return undefined\n    }\n\n    const timeoutId = setTimeout(() => setReady(true), ms)\n\n    return () => {\n      clearTimeout(timeoutId)\n    }\n  }, [ms])\n\n  if (!ready || !children) {\n    return <></>\n  }\n\n  return typeof children === 'function' ? children() : children\n}\n","import {SanityDocumentLike} from '@sanity/types'\nimport React from 'react'\nimport {useSchema, unstable_useValuePreview as useValuePreview} from 'sanity'\n\nexport interface DocTitleProps {\n  document: SanityDocumentLike\n}\n\nexport function DocTitle(props: DocTitleProps) {\n  const {document: documentValue} = props\n  const schema = useSchema()\n  const schemaType = schema.get(documentValue._type)\n\n  const {error, value} = useValuePreview({\n    schemaType: schemaType!,\n    value: documentValue,\n  })\n\n  if (!schemaType) {\n    return <code>Unknown schema type: {documentValue._type}</code>\n  }\n\n  if (error) {\n    return <>Error: {error.message}</>\n  }\n\n  return <>{value?.title || <span style={{color: 'var(--card-muted-fg-color)'}}>Untitled</span>}</>\n}\n","import React from 'react'\nimport {useTimeAgo} from 'sanity'\n\nexport interface TimeAgoProps {\n  time: string | Date\n}\n\nexport function TimeAgo({time}: TimeAgoProps) {\n  const timeAgo = useTimeAgo(time)\n\n  return <span title={timeAgo}>{timeAgo} ago</span>\n}\n","import {useMemo} from 'react'\nimport {ClientError, SanityClient} from '@sanity/client'\nimport {Observable, timer, fromEvent, EMPTY, of} from 'rxjs'\nimport {\n  map,\n  startWith,\n  distinctUntilChanged,\n  switchMap,\n  shareReplay,\n  catchError,\n} from 'rxjs/operators'\nimport {\n  AvailabilityResponse,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  DocumentStore,\n  useDocumentStore,\n  createHookFromObservableFactory,\n  getDraftId,\n  getPublishedId,\n  useClient,\n} from 'sanity'\n\n// this is used in place of `instanceof` so the matching can be more robust and\n// won't have any issues with dual packages etc\n// https://nodejs.org/api/packages.html#dual-package-hazard\nfunction isClientError(e: unknown): e is ClientError {\n  if (typeof e !== 'object') return false\n  if (!e) return false\n  return 'statusCode' in e && 'response' in e\n}\n\nconst POLL_INTERVAL = 5000\n\n// only fetches when the document is visible\nlet visiblePoll$: Observable<number>\nconst getVisiblePoll$ = () => {\n  if (!visiblePoll$) {\n    visiblePoll$ = fromEvent(document, 'visibilitychange').pipe(\n      // add empty emission to have this fire on creation\n      startWith(null),\n      map(() => document.visibilityState === 'visible'),\n      distinctUntilChanged(),\n      switchMap((visible) =>\n        visible\n          ? // using timer instead of interval since timer will emit on creation\n            timer(0, POLL_INTERVAL)\n          : EMPTY\n      ),\n      shareReplay({refCount: true, bufferSize: 1})\n    )\n  }\n  return visiblePoll$\n}\n\nexport type ReferringDocuments = {\n  isLoading: boolean\n  totalCount: number\n  projectIds: string[]\n  datasetNames: string[]\n  hasUnknownDatasetNames: boolean\n  internalReferences?: {\n    totalCount: number\n    references: Array<{_id: string; _type: string}>\n  }\n  crossDatasetReferences?: {\n    totalCount: number\n    references: Array<{\n      /**\n       * The project ID of the document that is currently referencing the subject\n       * document. Unlike `documentId` and `datasetName`, this should always be\n       * defined.\n       */\n      projectId: string\n      /**\n       * The ID of the document that is currently referencing the subject\n       * document. This will be omitted if there is no access to the current\n       * project and dataset pair (e.g. if no `sanity-project-token` were\n       * configured)\n       */\n      documentId?: string\n      /**\n       * The dataset name that is currently referencing the subject document.\n       * This will be omitted if there is no access to the current project and\n       * dataset pair (e.g. if no `sanity-project-token` were configured)\n       */\n      datasetName?: string\n    }>\n  }\n}\n\nfunction getDocumentExistence(\n  documentId: string,\n  {versionedClient}: {versionedClient: SanityClient}\n): Observable<string | undefined> {\n  const draftId = getDraftId(documentId)\n  const publishedId = getPublishedId(documentId)\n  const requestOptions = {\n    uri: versionedClient.getDataUrl('doc', `${draftId},${publishedId}`),\n    json: true,\n    query: {excludeContent: 'true'},\n    tag: 'use-referring-documents.document-existence',\n  }\n  return versionedClient.observable.request<AvailabilityResponse>(requestOptions).pipe(\n    map(({omitted}) => {\n      const nonExistant = omitted.filter((doc) => doc.reason === 'existence')\n      if (nonExistant.length === 2) {\n        // None of the documents exist\n        return undefined\n      }\n\n      if (nonExistant.length === 0) {\n        // Both exist, so use the published one\n        return publishedId\n      }\n\n      // If the draft does not exist, use the published ID, and vice versa\n      return nonExistant.some((doc) => doc.id === draftId) ? publishedId : draftId\n    })\n  )\n}\n\n/**\n * fetches the cross-dataset references using the client observable.request\n * method (for that requests can be automatically cancelled)\n */\nfunction fetchCrossDatasetReferences(\n  documentId: string,\n  context: {versionedClient: SanityClient}\n): Observable<ReferringDocuments['crossDatasetReferences']> {\n  const {versionedClient} = context\n\n  return getVisiblePoll$().pipe(\n    switchMap(() => getDocumentExistence(documentId, context)),\n    switchMap((checkDocumentId) => {\n      if (!checkDocumentId) {\n        return of({totalCount: 0, references: []})\n      }\n\n      const currentDataset = versionedClient.config().dataset\n\n      return versionedClient.observable\n        .request({\n          url: `/data/references/${currentDataset}/documents/${checkDocumentId}/to?excludeInternalReferences=true&excludePaths=true`,\n          tag: 'use-referring-documents.external',\n        })\n        .pipe(\n          catchError((e) => {\n            // it's possible that referencing document doesn't exist yet so the\n            // API will return a 404. In those cases, we want to catch and return\n            // a response with no references\n            if (isClientError(e) && e.statusCode === 404) {\n              return of({totalCount: 0, references: []})\n            }\n\n            throw e\n          })\n        )\n    })\n  )\n}\n\nconst useInternalReferences = createHookFromObservableFactory(\n  ([documentId, documentStore]: [string, DocumentStore]) => {\n    const referencesClause = '*[references($documentId)][0...100]{_id,_type}'\n    const totalClause = 'count(*[references($documentId)])'\n    const fetchQuery = `{\"references\":${referencesClause},\"totalCount\":${totalClause}}`\n    const listenQuery = '*[references($documentId)]'\n\n    return documentStore.listenQuery(\n      {fetch: fetchQuery, listen: listenQuery},\n      {documentId},\n      {tag: 'use-referring-documents', transitions: ['appear', 'disappear'], throttleTime: 5000}\n    ) as Observable<ReferringDocuments['internalReferences']>\n  }\n)\n\nconst useCrossDatasetReferences = createHookFromObservableFactory(\n  ([documentId, versionedClient]: [string, SanityClient]) => {\n    // (documentId: string, versionedClient: SanityClient) => {\n    return getVisiblePoll$().pipe(\n      switchMap(() =>\n        fetchCrossDatasetReferences(documentId, {\n          versionedClient,\n        })\n      )\n    )\n  }\n)\n\nexport function useReferringDocuments(documentId: string): ReferringDocuments {\n  const versionedClient = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  const documentStore = useDocumentStore()\n  const publishedId = getPublishedId(documentId)\n\n  const [internalReferences, isInternalReferencesLoading] = useInternalReferences(\n    useMemo(() => [publishedId, documentStore], [documentStore, publishedId])\n  )\n\n  const [crossDatasetReferences, isCrossDatasetReferencesLoading] = useCrossDatasetReferences(\n    useMemo(() => [publishedId, versionedClient], [publishedId, versionedClient])\n  )\n\n  const projectIds = useMemo(() => {\n    return Array.from(\n      new Set(\n        crossDatasetReferences?.references\n          .map((crossDatasetReference) => crossDatasetReference.projectId)\n          .filter(Boolean)\n      )\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const datasetNames = useMemo(() => {\n    return Array.from(\n      new Set<string>(\n        crossDatasetReferences?.references\n          // .filter((name) => typeof name === 'string')\n          .map((crossDatasetReference) => crossDatasetReference?.datasetName || '')\n          .filter((datasetName) => Boolean(datasetName) && datasetName !== '')\n      )\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const hasUnknownDatasetNames = useMemo(() => {\n    return Boolean(\n      crossDatasetReferences?.references.some(\n        (crossDatasetReference) => typeof crossDatasetReference.datasetName !== 'string'\n      )\n    )\n  }, [crossDatasetReferences?.references])\n\n  return {\n    totalCount: (internalReferences?.totalCount || 0) + (crossDatasetReferences?.totalCount || 0),\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n    internalReferences,\n    crossDatasetReferences,\n    isLoading: isInternalReferencesLoading || isCrossDatasetReferencesLoading,\n  }\n}\n","import React from 'react'\nimport {PublishIcon} from '@sanity/icons'\nimport {PreviewValue, SanityDocument} from '@sanity/types'\nimport {Box, Text, Tooltip} from '@sanity/ui'\nimport {TimeAgo} from './TimeAgo'\nimport {TextWithTone} from 'sanity'\n\nexport function PublishedStatus(props: {document?: PreviewValue | Partial<SanityDocument> | null}) {\n  const {document} = props\n  const updatedAt = document && '_updatedAt' in document && document._updatedAt\n  const statusLabel = document ? 'Published' : 'Not published'\n\n  return (\n    <Tooltip\n      portal\n      content={\n        <Box padding={2}>\n          <Text size={1}>\n            {document ? (\n              <>Published {updatedAt && <TimeAgo time={updatedAt} />}</>\n            ) : (\n              <>Not published</>\n            )}\n          </Text>\n        </Box>\n      }\n    >\n      <TextWithTone tone=\"positive\" dimmed={!document} muted={!document} size={1}>\n        <PublishIcon aria-label={statusLabel} />\n      </TextWithTone>\n    </Tooltip>\n  )\n}\n","import React from 'react'\nimport {EditIcon} from '@sanity/icons'\nimport {PreviewValue, SanityDocument} from '@sanity/types'\nimport {Box, Text, Tooltip} from '@sanity/ui'\nimport {TimeAgo} from './TimeAgo'\nimport {TextWithTone} from 'sanity'\n\nexport function DraftStatus(props: {document?: PreviewValue | Partial<SanityDocument> | null}) {\n  const {document} = props\n  const updatedAt = document && '_updatedAt' in document && document._updatedAt\n\n  return (\n    <Tooltip\n      portal\n      content={\n        <Box padding={2}>\n          <Text size={1}>\n            {document ? (\n              <>Edited {updatedAt && <TimeAgo time={updatedAt} />}</>\n            ) : (\n              <>No unpublished edits</>\n            )}\n          </Text>\n        </Box>\n      }\n    >\n      <TextWithTone tone=\"caution\" dimmed={!document} muted={!document} size={1}>\n        <EditIcon />\n      </TextWithTone>\n    </Tooltip>\n  )\n}\n","import type {SanityDocument, SchemaType} from '@sanity/types'\nimport React, {isValidElement} from 'react'\nimport {isNumber, isString} from 'lodash'\nimport {Inline} from '@sanity/ui'\nimport {useMemoObservable} from 'react-rx'\nimport {PublishedStatus} from '../PublishedStatus'\nimport {DraftStatus} from '../DraftStatus'\nimport type {PaneItemPreviewState} from './types'\nimport {\n  DocumentPresence,\n  DocumentPreviewPresence,\n  DocumentPreviewStore,\n  GeneralPreviewLayoutKey,\n  getPreviewStateObservable,\n  getPreviewValueWithFallback,\n  SanityDefaultPreview,\n  isRecord,\n} from 'sanity'\n\nexport interface PaneItemPreviewProps {\n  documentPreviewStore: DocumentPreviewStore\n  icon: React.ComponentType | false\n  layout: GeneralPreviewLayoutKey\n  presence?: DocumentPresence[]\n  schemaType: SchemaType\n  value: SanityDocument\n}\n\nexport function PaneItemPreview(props: PaneItemPreviewProps) {\n  const {icon, layout, presence, schemaType, value} = props\n  const title =\n    (isRecord(value.title) && isValidElement(value.title)) ||\n    isString(value.title) ||\n    isNumber(value.title)\n      ? value.title\n      : null\n\n  // NOTE: this emits sync so can never be null\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const {draft, published, isLoading} = useMemoObservable<PaneItemPreviewState>(\n    () => getPreviewStateObservable(props.documentPreviewStore, schemaType, value._id, title),\n    [props.documentPreviewStore, schemaType, value._id, title]\n  )!\n\n  const status = isLoading ? null : (\n    <Inline space={4}>\n      {presence && presence.length > 0 && <DocumentPreviewPresence presence={presence} />}\n      <PublishedStatus document={published} />\n      <DraftStatus document={draft} />\n    </Inline>\n  )\n\n  return (\n    <SanityDefaultPreview\n      {...getPreviewValueWithFallback({value, draft, published})}\n      isPlaceholder={isLoading}\n      icon={icon}\n      layout={layout}\n      status={status}\n    />\n  )\n}\n","import {createContext} from 'react'\nimport {PaneRouterContextValue} from './types'\n\nfunction missingContext<T = unknown>(): T {\n  throw new Error('Pane is missing router context')\n}\n\n/**\n *\n * @hidden\n * @beta\n */\nexport const PaneRouterContext = createContext<PaneRouterContextValue>({\n  index: 0,\n  groupIndex: 0,\n  siblingIndex: 0,\n  payload: undefined,\n  params: {},\n  hasGroupSiblings: false,\n  groupLength: 0,\n  routerPanesState: [],\n  BackLink: () => missingContext(),\n  ChildLink: () => missingContext(),\n  ReferenceChildLink: () => missingContext(),\n  handleEditReference: () => missingContext(),\n  ParameterizedLink: () => missingContext(),\n  replaceCurrent: () => missingContext(),\n  closeCurrent: () => missingContext(),\n  duplicateCurrent: () => missingContext(),\n  setView: () => missingContext(),\n  setParams: () => missingContext(),\n  setPayload: () => missingContext(),\n  navigateIntent: () => missingContext(),\n})\n","import React, {forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {BackLinkProps} from './types'\nimport {StateLink} from 'sanity/router'\n\n/**\n * @internal\n */\nexport const BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n  const panes = useMemo(() => routerPanesState.slice(0, groupIndex), [groupIndex, routerPanesState])\n  const state = useMemo(() => ({panes}), [panes])\n\n  return <StateLink {...props} ref={ref} state={state} />\n}) as React.ComponentType<BackLinkProps>\n","import React, {forwardRef, useContext} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {ChildLinkProps} from './types'\nimport {StateLink} from 'sanity/router'\n\n/**\n * @internal\n */\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {childId, childPayload, childParameters, ...rest} = props\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        panes: [\n          ...routerPanesState.slice(0, groupIndex + 1),\n          [{id: childId, params: childParameters, payload: childPayload}],\n        ],\n      }}\n    />\n  )\n})\n","import React, {forwardRef} from 'react'\nimport {toString as pathToString} from '@sanity/util/paths'\nimport {ChildLink} from './ChildLink'\nimport {ReferenceChildLinkProps} from './types'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  {documentId, documentType, parentRefPath, children, template, ...rest}: ReferenceChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childPayload={template?.params}\n      childParameters={{\n        type: documentType,\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n    >\n      {children}\n    </ChildLink>\n  )\n})\n","import React, {forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {useUnique} from 'sanity'\nimport {StateLink} from 'sanity/router'\n\ninterface ParameterizedLinkProps {\n  params?: Record<string, string>\n  payload?: unknown\n  children?: React.ReactNode\n}\n\n/**\n * @internal\n */\nexport const ParameterizedLink = forwardRef(function ParameterizedLink(\n  props: ParameterizedLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {routerPanesState: currentPanes, groupIndex, siblingIndex} = useContext(PaneRouterContext)\n  const {params, payload, ...rest} = props\n  const nextParams = useUnique(params)\n  const nextPayload = useUnique(payload)\n\n  const nextState = useMemo(() => {\n    const currentGroup = currentPanes[groupIndex]\n    const currentSibling = currentGroup[siblingIndex]\n\n    const nextSibling = {\n      ...currentSibling,\n      params: nextParams ?? currentSibling.params,\n      payload: nextPayload ?? currentSibling.payload,\n    }\n\n    const nextGroup = [\n      ...currentGroup.slice(0, siblingIndex),\n      nextSibling,\n      ...currentGroup.slice(siblingIndex + 1),\n    ]\n\n    const nextPanes = [\n      ...currentPanes.slice(0, groupIndex),\n      nextGroup,\n      ...currentPanes.slice(groupIndex + 1),\n    ]\n\n    return {panes: nextPanes}\n  }, [currentPanes, groupIndex, nextParams, nextPayload, siblingIndex])\n\n  return <StateLink ref={ref} {...rest} state={nextState} />\n})\n","import {useContext} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {PaneRouterContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport function usePaneRouter(): PaneRouterContextValue {\n  return useContext(PaneRouterContext)\n}\n","import React, {useCallback} from 'react'\nimport type {SanityDocument, SchemaType} from '@sanity/types'\nimport {PaneItemPreview} from '../paneItem/PaneItemPreview'\nimport {usePaneRouter} from '../paneRouter'\nimport {\n  FIXME,\n  PreviewCard,\n  getPublishedId,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n} from 'sanity'\n\nconst EMPTY_ARRAY: [] = []\n\ninterface ReferencePreviewLinkProps {\n  onClick?: () => void\n  type: SchemaType & {icon?: any}\n  value: SanityDocument\n}\n\nexport function ReferencePreviewLink(props: ReferencePreviewLinkProps) {\n  const {onClick, type, value} = props\n  const publishedId = getPublishedId(value?._id)\n  const documentPresence = useDocumentPresence(publishedId)\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ReferenceChildLink} = usePaneRouter()\n\n  const Link = useCallback(\n    function LinkComponent(linkProps: {children: React.ReactNode}) {\n      return (\n        <ReferenceChildLink\n          documentId={value?._id}\n          documentType={type?.name}\n          parentRefPath={EMPTY_ARRAY}\n          {...linkProps}\n        />\n      )\n    },\n    [ReferenceChildLink, type?.name, value?._id]\n  )\n\n  return (\n    <PreviewCard\n      __unstable_focusRing\n      as={Link as FIXME}\n      data-as=\"a\"\n      onClick={onClick}\n      padding={2}\n      radius={2}\n    >\n      <PaneItemPreview\n        documentPreviewStore={documentPreviewStore}\n        icon={type?.icon}\n        layout=\"default\"\n        presence={documentPresence?.length > 0 ? documentPresence : EMPTY_ARRAY}\n        schemaType={type}\n        value={value}\n      />\n    </PreviewCard>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport {rem, Flex, Text, Box, Tooltip, Container, Inline} from '@sanity/ui'\nimport {InfoOutlineIcon} from '@sanity/icons'\n\nexport const ChevronWrapper = styled(Box)`\n  margin-left: auto;\n`\n\nexport const CrossDatasetReferencesDetails = styled.details`\n  flex: none;\n\n  &[open] ${ChevronWrapper} {\n    transform: rotate(180deg);\n  }\n`\n\nexport const CrossDatasetReferencesSummary = styled.summary`\n  list-style: none;\n\n  &::-webkit-details-marker {\n    display: none;\n  }\n`\n\nexport const Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 0 ${({theme}) => rem(theme.sanity.space[2])};\n  border-collapse: collapse;\n\n  th {\n    padding: ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  td {\n    padding: 0 ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  tr > *:last-child {\n    text-align: right;\n  }\n`\n\nexport const DocumentIdFlex = styled(Flex)`\n  min-height: 35px;\n`\n\nexport const OtherReferenceCount = (props: {totalCount: number; references: unknown[]}) => {\n  const difference = props.totalCount - props.references.length\n\n  if (!difference) return null\n\n  return (\n    <Inline space={2}>\n      <Text size={1} muted>\n        {difference} other reference{difference === 1 ? '' : 's'} not shown{' '}\n      </Text>\n\n      <Tooltip\n        portal\n        placement=\"top\"\n        content={\n          <Container width={0}>\n            <Box padding={2}>\n              <Text size={1}>\n                We can't show metadata about these references because no token with access to the\n                datasets they are in was found.\n              </Text>\n            </Box>\n          </Container>\n        }\n      >\n        <Text size={1} muted>\n          <InfoOutlineIcon />\n        </Text>\n      </Tooltip>\n    </Inline>\n  )\n}\n","import React, {useCallback} from 'react'\nimport {\n  WarningOutlineIcon,\n  DocumentsIcon,\n  ClipboardIcon,\n  UnknownIcon,\n  ChevronDownIcon,\n} from '@sanity/icons'\nimport {useToast, Text, Box, Button, Flex, Label, Card, Stack} from '@sanity/ui'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport {ReferencePreviewLink} from './ReferencePreviewLink'\nimport {ReferringDocuments} from './useReferringDocuments'\nimport {\n  OtherReferenceCount,\n  CrossDatasetReferencesDetails,\n  CrossDatasetReferencesSummary,\n  Table,\n  ChevronWrapper,\n  DocumentIdFlex,\n} from './ConfirmDeleteDialogBody.styles'\nimport {SanityDefaultPreview, useSchema} from 'sanity'\n\ntype DeletionConfirmationDialogBodyProps = Required<ReferringDocuments> & {\n  documentTitle: React.ReactNode\n  action: string\n  onReferenceLinkClick?: () => void\n}\n\n/**\n * The inner part of the `ConfirmDeleteDialog`. This is ran when both the\n * `crossDatasetReferences` and `internalReferences` are loaded.\n */\nexport function ConfirmDeleteDialogBody({\n  crossDatasetReferences,\n  internalReferences,\n  documentTitle,\n  totalCount,\n  action,\n  datasetNames,\n  hasUnknownDatasetNames,\n  onReferenceLinkClick,\n}: DeletionConfirmationDialogBodyProps) {\n  const schema = useSchema()\n  const toast = useToast()\n\n  const renderPreviewItem = useCallback(\n    (item: any) => {\n      const type = schema.get(item._type)\n      if (type) {\n        return <ReferencePreviewLink type={type} value={item} onClick={onReferenceLinkClick} />\n      }\n\n      return (\n        // Padding added to match the ReferencePreviewLink styling\n        <Box padding={2}>\n          <SanityDefaultPreview\n            icon={UnknownIcon}\n            title=\"Preview Unavailable\"\n            subtitle={`ID: ${item._id}`}\n            layout=\"default\"\n          />\n        </Box>\n      )\n    },\n    [schema, onReferenceLinkClick]\n  )\n\n  if (internalReferences?.totalCount === 0 && crossDatasetReferences?.totalCount === 0) {\n    return (\n      <Text as=\"p\">\n        Are you sure you want to {action} <strong>“{documentTitle}”</strong>?\n      </Text>\n    )\n  }\n\n  const documentCount =\n    crossDatasetReferences.totalCount === 1\n      ? '1 document'\n      : `${crossDatasetReferences.totalCount.toLocaleString()} documents`\n\n  // We do some extra checks to handle cases where you have unavailable dataset\n  // name(s) due to permissions, both alone and in combination with known datasets\n\n  // This normalizes one or more undefined dataset names to the catch-all `unavailable`\n  const normalizedDatasetNames = [\n    ...datasetNames,\n    ...(hasUnknownDatasetNames ? ['unavailable'] : []),\n  ]\n  const datasetsCount =\n    normalizedDatasetNames.length === 1\n      ? 'another dataset'\n      : `${normalizedDatasetNames.length} datasets`\n\n  let datasetNameList = `Dataset${\n    normalizedDatasetNames.length === 1 ? '' : 's'\n  }: ${normalizedDatasetNames.join(', ')}`\n\n  // We only have one dataset, and it is unavailable due to permissions\n  if (hasUnknownDatasetNames && normalizedDatasetNames.length === 1) {\n    datasetNameList = 'Unavailable dataset'\n  }\n\n  return (\n    <Card>\n      <Card padding={3} radius={2} tone=\"caution\" marginBottom={4} flex=\"none\">\n        <Flex>\n          <Text aria-hidden=\"true\" size={1}>\n            <WarningOutlineIcon />\n          </Text>\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              {totalCount === 1 ? (\n                <>1 document refers to “{documentTitle}”</>\n              ) : (\n                <>\n                  {totalCount.toLocaleString()} documents refer to “{documentTitle}”\n                </>\n              )}\n            </Text>\n          </Box>\n        </Flex>\n      </Card>\n\n      <Box flex=\"none\" marginBottom={4}>\n        <Text>\n          You may not be able to {action} “{documentTitle}” because the following documents refer to\n          it:\n        </Text>\n      </Box>\n\n      <Card radius={2} shadow={1} marginBottom={4} flex=\"auto\">\n        <Flex direction=\"column\">\n          {internalReferences.totalCount > 0 && (\n            <Stack as=\"ul\" padding={2} space={3} data-testid=\"internal-references\">\n              {internalReferences?.references.map((item) => (\n                <Box as=\"li\" key={item._id}>\n                  {renderPreviewItem(item)}\n                </Box>\n              ))}\n\n              {internalReferences.totalCount > internalReferences.references.length && (\n                <Box as=\"li\" padding={3}>\n                  <OtherReferenceCount {...internalReferences} />\n                </Box>\n              )}\n            </Stack>\n          )}\n\n          {crossDatasetReferences.totalCount > 0 && (\n            <CrossDatasetReferencesDetails\n              data-testid=\"cross-dataset-references\"\n              style={{\n                // only add the border if needed\n                borderTop:\n                  internalReferences.totalCount > 0\n                    ? '1px solid var(--card-shadow-outline-color)'\n                    : undefined,\n              }}\n            >\n              <CrossDatasetReferencesSummary>\n                <Card as=\"a\" margin={2} radius={2} shadow={1} paddingY={1}>\n                  <Flex align=\"center\" margin={2}>\n                    <Box marginLeft={3} marginRight={4}>\n                      <Text size={3}>\n                        <DocumentsIcon />\n                      </Text>\n                    </Box>\n                    <Flex marginRight={4} direction=\"column\">\n                      <Box marginBottom={2}>\n                        <Text>\n                          {documentCount} in {datasetsCount}\n                        </Text>\n                      </Box>\n                      <Box>\n                        <Text title={datasetNameList} textOverflow=\"ellipsis\" size={1} muted>\n                          {datasetNameList}\n                        </Text>\n                      </Box>\n                    </Flex>\n                    <ChevronWrapper>\n                      <Text muted>\n                        <ChevronDownIcon />\n                      </Text>\n                    </ChevronWrapper>\n                  </Flex>\n                </Card>\n              </CrossDatasetReferencesSummary>\n\n              <Box overflow=\"auto\" paddingBottom={2} paddingX={2}>\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>\n                        <Label muted size={0} style={{minWidth: '5rem'}}>\n                          Project ID\n                        </Label>\n                      </th>\n                      <th>\n                        <Label muted size={0}>\n                          Dataset\n                        </Label>\n                      </th>\n                      <th>\n                        <Label muted size={0}>\n                          Document ID\n                        </Label>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {crossDatasetReferences.references\n                      .filter((reference): reference is Required<typeof reference> => {\n                        return 'projectId' in reference\n                      })\n                      .map(({projectId, datasetName, documentId}, index) => (\n                        // eslint-disable-next-line react/no-array-index-key\n                        <tr key={`${documentId}-${index}`}>\n                          <td>\n                            <Text size={1}>{projectId}</Text>\n                          </td>\n                          <td>\n                            <Text size={1}>{datasetName || 'unavailable'}</Text>\n                          </td>\n                          <td>\n                            <DocumentIdFlex align=\"center\" gap={2} justify=\"flex-end\">\n                              <Text textOverflow=\"ellipsis\" size={1}>\n                                {documentId || 'unavailable'}\n                              </Text>\n                              {documentId && (\n                                <CopyToClipboard\n                                  text={documentId}\n                                  // eslint-disable-next-line react/jsx-no-bind\n                                  onCopy={() => {\n                                    // TODO: this isn't visible with the dialog open\n                                    toast.push({\n                                      title: 'Copied document ID to clipboard!',\n                                      status: 'success',\n                                    })\n                                  }}\n                                >\n                                  <Button\n                                    title=\"Copy ID to clipboard\"\n                                    mode=\"bleed\"\n                                    icon={ClipboardIcon}\n                                    fontSize={0}\n                                  />\n                                </CopyToClipboard>\n                              )}\n                            </DocumentIdFlex>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </Table>\n\n                <Box padding={2}>\n                  <OtherReferenceCount {...crossDatasetReferences} />\n                </Box>\n              </Box>\n            </CrossDatasetReferencesDetails>\n          )}\n        </Flex>\n      </Card>\n\n      <Box flex=\"none\">\n        <Text>\n          If you {action} this document, documents that refer to it will no longer be able to access\n          it.\n        </Text>\n      </Box>\n    </Card>\n  )\n}\n","import React, {useMemo, useId} from 'react'\nimport styled from 'styled-components'\nimport {Box, Dialog, Button, Text, Spinner, Grid, Flex} from '@sanity/ui'\nimport {DocTitle} from '../DocTitle'\nimport {useReferringDocuments} from './useReferringDocuments'\nimport {ConfirmDeleteDialogBody} from './ConfirmDeleteDialogBody'\n\n/** @internal */\nexport const DialogBody = styled(Box).attrs({\n  padding: 4,\n})`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 300px;\n`\n\n/** @internal */\nexport interface ConfirmDeleteDialogProps {\n  /**\n   * Incoming document ID used to find other referencing documents. This\n   * field respects draft IDs (e.g. if you pass in a published ID when one\n   * doesn't exist the document title may not show up).\n   */\n  id: string\n  /**\n   * The schema typename of the incoming document\n   */\n  type: string\n  /**\n   * The name of the action being done. (e.g. the `'unpublish'` action requires\n   * the same document deletion confirmation).\n   */\n  action?: string\n  onCancel: () => void\n  onConfirm: () => void\n}\n\n/**\n * A confirmation dialog used to prevent unwanted document deletes. Loads all\n * the referencing internal and cross-data references prior to showing the\n * delete button.\n *\n * @internal\n */\nexport function ConfirmDeleteDialog({\n  id,\n  type,\n  action = 'delete',\n  onCancel,\n  onConfirm,\n}: ConfirmDeleteDialogProps) {\n  const dialogId = `deletion-confirmation-${useId()}`\n  const {\n    internalReferences,\n    crossDatasetReferences,\n    isLoading,\n    totalCount,\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n  } = useReferringDocuments(id)\n  const capitalizedAction = `${action.substring(0, 1).toUpperCase()}${action.substring(1)}`\n\n  const documentTitle = <DocTitle document={useMemo(() => ({_id: id, _type: type}), [id, type])} />\n  const showConfirmButton = !isLoading\n\n  return (\n    <Dialog\n      width={1}\n      id={dialogId}\n      header={`${capitalizedAction} document?`}\n      footer={\n        <Grid columns={showConfirmButton ? 2 : 1} gap={2} paddingX={4} paddingY={3}>\n          <Button mode=\"ghost\" onClick={onCancel} text=\"Cancel\" />\n\n          {showConfirmButton && (\n            <Button\n              data-testid=\"confirm-delete-button\"\n              text={totalCount > 0 ? `${capitalizedAction} anyway` : `${capitalizedAction} now`}\n              tone=\"critical\"\n              onClick={onConfirm}\n            />\n          )}\n        </Grid>\n      }\n      onClose={onCancel}\n      onClickOutside={onCancel}\n    >\n      <DialogBody>\n        {crossDatasetReferences && internalReferences && !isLoading ? (\n          <ConfirmDeleteDialogBody\n            crossDatasetReferences={crossDatasetReferences}\n            internalReferences={internalReferences}\n            documentTitle={documentTitle}\n            isLoading={isLoading}\n            totalCount={totalCount}\n            action={action}\n            projectIds={projectIds}\n            datasetNames={datasetNames}\n            hasUnknownDatasetNames={hasUnknownDatasetNames}\n            onReferenceLinkClick={onCancel}\n          />\n        ) : (\n          <LoadingContainer data-testid=\"loading-container\">\n            <Spinner muted />\n            <Box marginTop={3}>\n              <Text align=\"center\" muted size={1}>\n                Looking for referring documents…\n              </Text>\n            </Box>\n          </LoadingContainer>\n        )}\n      </DialogBody>\n    </Dialog>\n  )\n}\n","import React, {useCallback, useState, useId} from 'react'\nimport {Box, Flex, Button, Dialog, Text, ErrorBoundary} from '@sanity/ui'\nimport {ConfirmDeleteDialog, ConfirmDeleteDialogProps} from './ConfirmDeleteDialog'\n\nexport type {ConfirmDeleteDialogProps}\n\ntype ArgType<T> = T extends (arg: infer U) => unknown ? U : never\ntype ErrorInfo = ArgType<React.ComponentProps<typeof ErrorBoundary>['onCatch']>\n\n/** @internal */\nfunction ConfirmDeleteDialogContainer(props: ConfirmDeleteDialogProps) {\n  const id = useId()\n  const [error, setError] = useState<ErrorInfo | null>(null)\n  const handleRetry = useCallback(() => setError(null), [])\n\n  return error ? (\n    <Dialog\n      id={`dialog-error-${id}`}\n      data-testid=\"confirm-delete-error-dialog\"\n      header=\"Error\"\n      footer={\n        <Flex paddingX={4} paddingY={3} direction=\"column\">\n          <Button mode=\"ghost\" text=\"Retry\" onClick={handleRetry} />\n        </Flex>\n      }\n      onClose={props.onCancel}\n    >\n      <Box padding={4}>\n        <Text>An error occurred while loading referencing documents.</Text>\n      </Box>\n    </Dialog>\n  ) : (\n    <ErrorBoundary onCatch={setError}>\n      <ConfirmDeleteDialog {...props} />\n    </ErrorBoundary>\n  )\n}\n\nexport {ConfirmDeleteDialogContainer as ConfirmDeleteDialog}\n","import {CheckmarkIcon} from '@sanity/icons'\nimport {Box, Label, MenuDivider, MenuGroup, MenuItem, PopoverProps, Text} from '@sanity/ui'\nimport React, {useCallback, MouseEvent} from 'react'\nimport {Intent} from '../../structureBuilder'\nimport {_PaneMenuItem, _PaneMenuNode} from './types'\nimport {TooltipOfDisabled} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nconst MENU_GROUP_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'left-start',\n  portal: true,\n}\n\nexport function PaneMenuButtonItem(props: {\n  disabled?: boolean\n  isAfterGroup: boolean\n  node: _PaneMenuNode\n}) {\n  const {disabled, isAfterGroup, node} = props\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  if (node.type === 'group') {\n    if (node.children.length === 0) {\n      return null\n    }\n\n    if (node.expanded) {\n      return (\n        <>\n          {isAfterGroup && <MenuDivider />}\n          {node.title && (\n            <Box padding={2} paddingBottom={1}>\n              <Label muted size={0}>\n                {node.title}\n              </Label>\n            </Box>\n          )}\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              key={child.key}\n              node={child}\n            />\n          ))}\n        </>\n      )\n    }\n\n    return (\n      <>\n        {isAfterGroup && <MenuDivider />}\n        <MenuGroup\n          disabled={disabled}\n          icon={node.icon}\n          popover={MENU_GROUP_POPOVER_PROPS}\n          text={node.title}\n        >\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              key={child.key}\n              node={child}\n            />\n          ))}\n        </MenuGroup>\n      </>\n    )\n  }\n\n  return (\n    <>\n      {isAfterGroup && <MenuDivider />}\n      <PaneContextMenuItemResolver disabled={disabled} node={node} />\n    </>\n  )\n}\n\nfunction PaneContextMenuItemResolver(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {node} = props\n\n  if (node.intent) {\n    return <PaneContextIntentMenuItem {...props} intent={node.intent} />\n  }\n\n  return <PaneContextMenuItem {...props} />\n}\n\nfunction PaneContextMenuItem(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {disabled, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        icon={node.icon}\n        iconRight={node.iconRight || (node.selected && CheckmarkIcon)}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClick={node.onAction}\n        pressed={node.selected}\n        text={node.title}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n\nfunction PaneContextIntentMenuItem(props: {\n  disabled?: boolean\n  intent: Intent\n  node: _PaneMenuItem\n}) {\n  const {disabled, intent, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLDivElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node]\n  )\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        as=\"a\"\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        href={intentLink.href}\n        icon={node.icon}\n        iconRight={node.selected ? CheckmarkIcon : undefined}\n        onClick={handleClick}\n        pressed={node.selected}\n        text={node.title}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n","import {EllipsisVerticalIcon} from '@sanity/icons'\nimport {Menu, MenuButton, PopoverProps} from '@sanity/ui'\nimport React, {useId} from 'react'\nimport {_PaneMenuItem, _PaneMenuNode} from './types'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {StatusButton} from 'sanity'\n\ninterface PaneContextMenuButtonProps {\n  nodes: _PaneMenuNode[]\n}\n\nconst CONTEXT_MENU_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nfunction nodesHasTone(nodes: _PaneMenuNode[], tone: NonNullable<_PaneMenuItem['tone']>): boolean {\n  return nodes.some((node) => {\n    return (\n      (node.type === 'item' && node.tone === tone) ||\n      (node.type === 'group' && nodesHasTone(node.children, tone))\n    )\n  })\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneContextMenuButton(props: PaneContextMenuButtonProps) {\n  const {nodes} = props\n  const id = useId()\n\n  const hasCritical = nodesHasTone(nodes, 'critical')\n  const hasCaution = nodesHasTone(nodes, 'caution')\n\n  return (\n    <MenuButton\n      button={\n        <StatusButton\n          icon={EllipsisVerticalIcon}\n          mode=\"bleed\"\n          title=\"Show menu\"\n          // eslint-disable-next-line no-nested-ternary\n          tone={hasCritical ? 'critical' : hasCaution ? 'caution' : undefined}\n        />\n      }\n      id={id}\n      menu={\n        <Menu>\n          {nodes.map((node, nodeIndex) => {\n            const isAfterGroup = nodes[nodeIndex - 1]?.type === 'group'\n\n            return <PaneMenuButtonItem isAfterGroup={isAfterGroup} key={node.key} node={node} />\n          })}\n        </Menu>\n      }\n      popover={CONTEXT_MENU_POPOVER_PROPS}\n    />\n  )\n}\n","/**\n * @internal\n */\nexport const PANE_DEBUG = false\n\n/**\n * @internal\n */\nexport const PANE_COLLAPSED_WIDTH = 51\n\n/**\n * @internal\n */\nexport const PANE_DEFAULT_MIN_WIDTH = PANE_COLLAPSED_WIDTH * 4\n","import {createContext} from 'react'\nimport {PaneContextValue} from './types'\n\n/**\n * @internal\n */\nexport const PaneContext = createContext<PaneContextValue | null>(null)\n","import {createContext} from 'react'\nimport {PaneLayoutContextValue} from './types'\n\n/**\n * @internal\n */\nexport const PaneLayoutContext = createContext<PaneLayoutContextValue | null>(null)\n","import {useContext} from 'react'\nimport {PaneLayoutContext} from './PaneLayoutContext'\nimport {PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePaneLayout(): PaneLayoutContextValue {\n  const pane = useContext(PaneLayoutContext)\n\n  if (!pane) {\n    throw new Error('PaneLayout: missing context value')\n  }\n\n  return pane\n}\n","import {Layer} from '@sanity/ui'\nimport React, {useCallback, useState} from 'react'\nimport styled from 'styled-components'\nimport {usePaneLayout} from './usePaneLayout'\n\nconst Root = styled(Layer)`\n  position: relative;\n  width: 1px;\n  min-width: 1px;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 1px;\n    background-color: var(--card-border-color);\n  }\n\n  &:not([data-disabled]) {\n    cursor: ew-resize;\n    width: 9px;\n    min-width: 9px;\n    margin: 0 -4px;\n\n    &:before {\n      left: 4px;\n    }\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    &[data-dragging]:after,\n    &:hover:after {\n      opacity: 0.2;\n    }\n  }\n`\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneDivider({\n  disabled,\n  element,\n}: {\n  disabled?: boolean\n  element: HTMLElement | null\n}) {\n  const {resize} = usePaneLayout()\n  const [dragging, setDragging] = useState(false)\n\n  const handleMouseDown = useCallback(\n    (event: any) => {\n      if (!element) return\n\n      setDragging(true)\n\n      event.preventDefault()\n\n      const startX = event.pageX\n\n      resize('start', element, 0)\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n\n        const deltaX = e.pageX - startX\n\n        resize('move', element, deltaX)\n      }\n\n      const handleMouseUp = (e: MouseEvent) => {\n        e.preventDefault()\n\n        setDragging(false)\n\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n\n        resize('end', element, 0)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [element, resize]\n  )\n\n  return (\n    <Root\n      data-disabled={disabled ? '' : undefined}\n      data-dragging={dragging ? '' : undefined}\n      onMouseDown={handleMouseDown}\n    />\n  )\n}\n","import {BoundaryElementProvider, Card, CardProps, Code, Flex, useForwardedRef} from '@sanity/ui'\nimport React, {forwardRef, useMemo, useState, useCallback, useEffect} from 'react'\nimport styled from 'styled-components'\nimport {PANE_COLLAPSED_WIDTH, PANE_DEBUG, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {PaneContext} from './PaneContext'\nimport {PaneDivider} from './PaneDivider'\nimport {usePaneLayout} from './usePaneLayout'\nimport {LegacyLayerProvider} from 'sanity'\n\ninterface PaneProps {\n  children?: React.ReactNode\n  currentMinWidth?: number\n  currentMaxWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  selected?: boolean\n}\n\nconst Root = styled(Card)`\n  outline: none;\n\n  // NOTE: This will render a border to the right side of each pane\n  // without taking up physical space.\n  box-shadow: 1px 0 0 var(--card-border-color);\n`\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\n// eslint-disable-next-line complexity\nexport const Pane = forwardRef(function Pane(\n  props: PaneProps &\n    Omit<CardProps, 'as' | 'overflow'> &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'hidden' | 'id' | 'style'>,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {\n    children,\n    currentMinWidth: currentMinWidthProp,\n    currentMaxWidth: currentMaxWidthProp,\n    flex: flexProp = 1,\n    id,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    selected = false,\n    ...restProps\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const {\n    collapse,\n    collapsed: layoutCollapsed,\n    expand,\n    expandedElement,\n    mount,\n    panes,\n  } = usePaneLayout()\n  const pane = panes.find((p) => p.element === rootElement)\n  const paneIndex = pane && panes.indexOf(pane)\n  const nextPane = typeof paneIndex === 'number' ? panes[paneIndex + 1] : undefined\n  const isLast = paneIndex === panes.length - 1\n  const expanded = expandedElement === rootElement\n  const collapsed = layoutCollapsed ? false : pane?.collapsed || false\n  const nextCollapsed = nextPane?.collapsed || false\n  const forwardedRef = useForwardedRef(ref)\n  const flex = pane?.flex ?? flexProp\n  const currentMinWidth = pane?.currentMinWidth ?? currentMinWidthProp\n  const currentMaxWidth = pane?.currentMaxWidth ?? currentMaxWidthProp\n\n  const setRef = useCallback(\n    (refValue: HTMLDivElement | null) => {\n      setRootElement(refValue)\n      forwardedRef.current = refValue\n    },\n    [forwardedRef]\n  )\n\n  useEffect(() => {\n    if (!rootElement) return undefined\n    return mount(rootElement, {\n      currentMinWidth: currentMinWidthProp,\n      currentMaxWidth: currentMaxWidthProp,\n      flex: flexProp,\n      id,\n      minWidth: minWidthProp,\n      maxWidth: maxWidthProp,\n    })\n  }, [\n    currentMinWidthProp,\n    currentMaxWidthProp,\n    flexProp,\n    id,\n    minWidthProp,\n    maxWidthProp,\n    mount,\n    rootElement,\n  ])\n\n  const handleCollapse = useCallback(() => {\n    if (!rootElement) return\n    collapse(rootElement)\n  }, [collapse, rootElement])\n\n  const handleExpand = useCallback(() => {\n    if (!rootElement) return\n    expand(rootElement)\n  }, [expand, rootElement])\n\n  const contextValue = useMemo(\n    () => ({\n      collapse: handleCollapse,\n      collapsed: layoutCollapsed ? false : collapsed,\n      expand: handleExpand,\n      index: paneIndex,\n      isLast,\n      rootElement,\n    }),\n    [collapsed, handleCollapse, handleExpand, isLast, layoutCollapsed, paneIndex, rootElement]\n  )\n\n  const minWidth = useMemo(() => {\n    if (layoutCollapsed) {\n      return undefined\n    }\n\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (currentMinWidth === 0) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    if (isLast) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    return currentMinWidth || minWidthProp || PANE_DEFAULT_MIN_WIDTH\n  }, [collapsed, currentMinWidth, isLast, layoutCollapsed, minWidthProp])\n\n  const maxWidth = useMemo(() => {\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (layoutCollapsed && isLast) {\n      return undefined\n    }\n\n    if (isLast) {\n      if (maxWidthProp) {\n        return currentMaxWidth ?? maxWidthProp\n      }\n\n      return undefined\n    }\n\n    return currentMaxWidth ?? maxWidthProp\n  }, [collapsed, currentMaxWidth, isLast, layoutCollapsed, maxWidthProp])\n\n  const hidden = layoutCollapsed && !isLast\n\n  const divider = useMemo(\n    () =>\n      !isLast &&\n      !layoutCollapsed && (\n        <LegacyLayerProvider zOffset=\"paneResizer\">\n          <PaneDivider disabled={collapsed || nextCollapsed} element={rootElement} />\n        </LegacyLayerProvider>\n      ),\n    [collapsed, isLast, layoutCollapsed, nextCollapsed, rootElement]\n  )\n\n  const style = useMemo(\n    () => ({\n      flex,\n      minWidth,\n      maxWidth: maxWidth === Infinity ? undefined : maxWidth,\n    }),\n    [flex, minWidth, maxWidth]\n  )\n\n  return (\n    <>\n      <LegacyLayerProvider zOffset=\"pane\">\n        <PaneContext.Provider value={contextValue}>\n          <Root\n            data-testid=\"pane\"\n            data-ui=\"Pane\"\n            tone=\"inherit\"\n            hidden={hidden}\n            id={id}\n            overflow={layoutCollapsed ? undefined : 'hidden'}\n            {...restProps}\n            data-pane-collapsed={collapsed ? '' : undefined}\n            data-pane-index={paneIndex}\n            data-pane-selected={selected ? '' : undefined}\n            ref={setRef}\n            style={style}\n          >\n            {PANE_DEBUG && (\n              <Card padding={4} tone={expanded ? 'primary' : 'caution'}>\n                <Code size={1}>\n                  {[\n                    `#${paneIndex}`,\n                    `collapsed=${collapsed}`,\n                    `currentMinWidth=${currentMinWidth}`,\n                    `currentMaxWidth=${currentMaxWidth}`,\n                    `flex=${flex}`,\n                    `minWidth=${minWidth}`,\n                    `maxWidth=${maxWidth}`,\n                  ].join('\\n')}\n                </Code>\n              </Card>\n            )}\n\n            <BoundaryElementProvider element={rootElement}>\n              {!hidden && (\n                <Flex direction=\"column\" height=\"fill\">\n                  {children}\n                </Flex>\n              )}\n            </BoundaryElementProvider>\n          </Root>\n        </PaneContext.Provider>\n      </LegacyLayerProvider>\n\n      {divider}\n    </>\n  )\n})\n","import {useContext} from 'react'\nimport {PaneContext} from './PaneContext'\nimport {PaneContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePane(): PaneContextValue {\n  const pane = useContext(PaneContext)\n\n  if (!pane) {\n    throw new Error('Pane: missing context value')\n  }\n\n  return pane\n}\n","import {Card} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Card)`\n  position: relative;\n  outline: none;\n`\n\nRoot.displayName = 'PaneContent__root'\n","import {BoxOverflow} from '@sanity/ui'\nimport React, {forwardRef} from 'react'\nimport {usePane} from './usePane'\nimport {usePaneLayout} from './usePaneLayout'\nimport {Root} from './PaneContent.styles'\n\ninterface PaneContentProps {\n  as?: React.ElementType | keyof JSX.IntrinsicElements\n  overflow?: BoxOverflow\n  padding?: number | number[]\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneContent = forwardRef(function PaneContent(\n  props: PaneContentProps & Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {as, children, overflow, padding, ...restProps} = props\n  const {collapsed} = usePane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  return (\n    <Root\n      data-testid=\"pane-content\"\n      forwardedAs={as}\n      {...restProps}\n      flex={1}\n      hidden={collapsed}\n      overflow={layoutCollapsed ? undefined : overflow}\n      padding={padding}\n      ref={ref}\n      tone=\"inherit\"\n    >\n      {children}\n    </Root>\n  )\n})\n","import {Card, Layer} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Layer)`\n  position: sticky;\n  bottom: 0;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: -1px;\n    border-bottom: 1px solid var(--card-shadow-outline-color);\n  }\n`\n\nexport const RootCard = styled(Card)`\n  padding-bottom: env(safe-area-inset-bottom);\n`\n","import {Box} from '@sanity/ui'\nimport React, {forwardRef} from 'react'\nimport {usePane} from './usePane'\nimport {Root, RootCard} from './PaneFooter.styles'\nimport {LegacyLayerProvider} from 'sanity'\n\ninterface PaneFooterProps {\n  children?: React.ReactNode\n  padding?: number | number[]\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneFooter = forwardRef(function PaneFooter(\n  props: PaneFooterProps,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {children, padding} = props\n  const {collapsed} = usePane()\n\n  return (\n    <LegacyLayerProvider zOffset=\"paneFooter\">\n      <Root data-testid=\"pane-footer\" hidden={collapsed} ref={ref}>\n        <RootCard tone=\"inherit\">\n          <Box padding={padding}>{children}</Box>\n        </RootCard>\n      </Root>\n    </LegacyLayerProvider>\n  )\n})\n","import {Box, Flex, Layer, rgba, TextSkeleton, Text, Theme, Card} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const Root = styled(Layer)`\n  line-height: 0;\n  position: sticky;\n  top: 0;\n\n  &:not([data-collapsed]):after {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: -1px;\n    border-bottom: 1px solid var(--card-shadow-outline-color);\n  }\n`\n\nexport const Layout = styled(Flex)`\n  transform-origin: calc(51px / 2);\n\n  [data-collapsed] > div > & {\n    transform: rotate(90deg);\n  }\n`\n\nexport const TitleCard = styled(Card)(({theme}: {theme: Theme}) => {\n  const {fg, bg} = theme.sanity.color.card.enabled\n\n  // Disable color updates on hover\n  return css`\n    background-color: ${bg};\n\n    [data-ui='Text'] {\n      color: ${fg};\n    }\n  `\n})\n\nexport const TitleTextSkeleton = styled(TextSkeleton)`\n  width: 66%;\n  max-width: 175px;\n`\n\nexport const TitleText = styled(Text)`\n  cursor: default;\n  outline: none;\n`\n\nexport const TabsBox = styled(Box)(({theme}: {theme: Theme}) => {\n  const {color, space} = theme.sanity\n\n  return css`\n    overflow: hidden;\n    overflow: clip;\n    position: relative;\n\n    & > div {\n      white-space: nowrap;\n      overflow: auto;\n      /* Hide scrollbars */\n      scrollbar-width: none;\n      &::-webkit-scrollbar {\n        width: 0;\n        height: 0;\n      }\n    }\n\n    /* right padding */\n    & > div:after {\n      content: '';\n      display: inline-block;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      width: ${space[3]}px;\n      height: 1px;\n    }\n\n    /* Gradient that makes it look like tabs disappear into nothing (looks nicer) */\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      background: linear-gradient(to right, ${rgba(color.base.bg, 0)}, var(--card-bg-color));\n      width: ${space[3]}px;\n      pointer-events: none;\n    }\n  `\n})\n","import {useElementRect, Box, Card, Flex, LayerProvider} from '@sanity/ui'\nimport React, {useMemo, useCallback, forwardRef} from 'react'\nimport {usePane} from './usePane'\nimport {Layout, Root, TabsBox, TitleCard, TitleTextSkeleton, TitleText} from './PaneHeader.styles'\nimport {LegacyLayerProvider} from 'sanity'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneHeaderProps {\n  actions?: React.ReactNode\n  backButton?: React.ReactNode\n  contentAfter?: React.ReactNode\n  loading?: boolean\n  subActions?: React.ReactNode\n  tabIndex?: number\n  tabs?: React.ReactNode\n  title: React.ReactNode\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneHeader = forwardRef(function PaneHeader(\n  props: PaneHeaderProps,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {actions, backButton, contentAfter, loading, subActions, tabs, tabIndex, title} = props\n  const {collapse, collapsed, expand, rootElement: paneElement} = usePane()\n  const paneRect = useElementRect(paneElement || null)\n\n  const layoutStyle = useMemo(\n    () => ({\n      width: collapsed ? paneRect?.height || window.innerHeight : undefined,\n    }),\n    [collapsed, paneRect]\n  )\n\n  const handleTitleClick = useCallback(() => {\n    if (collapsed) return\n    collapse()\n  }, [collapse, collapsed])\n\n  const handleLayoutClick = useCallback(() => {\n    if (!collapsed) return\n    expand()\n  }, [collapsed, expand])\n\n  const showTabsOrSubActions = Boolean(!collapsed && (tabs || subActions))\n\n  return (\n    <LayerProvider zOffset={100}>\n      <Root data-collapsed={collapsed ? '' : undefined} data-testid=\"pane-header\" ref={ref}>\n        <LegacyLayerProvider zOffset=\"paneHeader\">\n          <Card data-collapsed={collapsed ? '' : undefined} tone=\"inherit\">\n            <Layout onClick={handleLayoutClick} padding={2} sizing=\"border\" style={layoutStyle}>\n              {backButton && (\n                <Box flex=\"none\" padding={1}>\n                  {backButton}\n                </Box>\n              )}\n\n              <TitleCard\n                __unstable_focusRing\n                flex={1}\n                forwardedAs=\"button\"\n                marginRight={actions ? 1 : 0}\n                onClick={handleTitleClick}\n                paddingLeft={backButton ? 1 : 3}\n                paddingY={3}\n                tabIndex={tabIndex}\n              >\n                {loading && <TitleTextSkeleton animated radius={1} />}\n                {!loading && (\n                  <TitleText textOverflow=\"ellipsis\" weight=\"semibold\">\n                    {title}\n                  </TitleText>\n                )}\n              </TitleCard>\n\n              {actions && (\n                <Box flex=\"none\" hidden={collapsed}>\n                  <LegacyLayerProvider zOffset=\"paneHeader\">{actions}</LegacyLayerProvider>\n                </Box>\n              )}\n            </Layout>\n\n            {showTabsOrSubActions && (\n              <Flex\n                align=\"center\"\n                hidden={collapsed}\n                overflow=\"auto\"\n                paddingBottom={3}\n                paddingX={3}\n                paddingTop={1}\n              >\n                <TabsBox flex={1} marginRight={subActions ? 3 : 0}>\n                  {tabs}\n                </TabsBox>\n\n                {subActions && subActions}\n              </Flex>\n            )}\n\n            {!collapsed && contentAfter && contentAfter}\n          </Card>\n        </LegacyLayerProvider>\n      </Root>\n    </LayerProvider>\n  )\n})\n","import React, {MouseEvent, useCallback, useId} from 'react'\nimport {ButtonProps, Menu, MenuButton, Text} from '@sanity/ui'\nimport {UnknownIcon} from '@sanity/icons'\nimport {Intent} from '../../structureBuilder'\nimport {_PaneMenuGroup, _PaneMenuItem} from './types'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {TooltipOfDisabled, StatusButton} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nexport interface PaneHeaderActionButtonProps {\n  node: _PaneMenuItem | _PaneMenuGroup\n  padding?: ButtonProps['padding']\n}\n\nexport function PaneHeaderActionButton(props: PaneHeaderActionButtonProps) {\n  const {node, padding} = props\n\n  if (node.type === 'item') {\n    return <PaneHeaderMenuItemActionButton node={node} padding={padding} />\n  }\n\n  if (node.type === 'group') {\n    return <PaneHeaderMenuGroupActionButton node={node} padding={padding} />\n  }\n\n  console.warn('unknown menu node (expected `type: \"item\" | \"group\"`):', node)\n\n  return null\n}\n\nexport interface PaneHeaderMenuItemActionButtonProps {\n  node: _PaneMenuItem\n  padding?: ButtonProps['padding']\n}\n\nexport function PaneHeaderMenuItemActionButton(props: PaneHeaderMenuItemActionButtonProps) {\n  const {node, padding} = props\n\n  if (node.intent) {\n    return <PaneHeaderActionIntentButton {...props} intent={node.intent} />\n  }\n\n  const disabledTooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n\n  return (\n    <TooltipOfDisabled content={disabledTooltipContent} placement=\"bottom\">\n      <StatusButton\n        disabled={Boolean(node.disabled)}\n        hotkey={node.hotkey?.split('+')}\n        icon={node.icon}\n        label={disabledTooltipContent ? undefined : node.title}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClick={node.onAction}\n        padding={padding}\n        selected={node.selected}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n\nfunction PaneHeaderActionIntentButton(props: {\n  intent: Intent\n  node: _PaneMenuItem\n  padding?: ButtonProps['padding']\n}) {\n  const {intent, node, padding} = props\n  const disabledTooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node]\n  )\n\n  return (\n    <TooltipOfDisabled content={disabledTooltipContent} placement=\"bottom\">\n      <StatusButton\n        as=\"a\"\n        disabled={Boolean(node.disabled)}\n        hotkey={node.hotkey?.split('+')}\n        href={intentLink.href}\n        icon={node.icon}\n        label={disabledTooltipContent ? undefined : node.title}\n        onClick={handleClick}\n        padding={padding}\n        selected={node.selected}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n\nexport interface PaneHeaderMenuGroupActionButtonProps {\n  node: _PaneMenuGroup\n  padding?: ButtonProps['padding']\n}\n\nfunction PaneHeaderMenuGroupActionButton(props: PaneHeaderMenuGroupActionButtonProps) {\n  const {node, padding} = props\n\n  return (\n    <MenuButton\n      button={\n        <StatusButton\n          disabled={node.disabled}\n          icon={node.icon ?? UnknownIcon}\n          label={node.title}\n          padding={padding}\n        />\n      }\n      id={useId()}\n      menu={\n        <Menu>\n          {node.children.map((child, idx) => {\n            return (\n              <PaneMenuButtonItem\n                disabled={Boolean(node.disabled)}\n                isAfterGroup={node.children[idx - 1]?.type === 'group'}\n                key={child.key}\n                node={child}\n              />\n            )\n          })}\n        </Menu>\n      }\n    />\n  )\n}\n","import {Card} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Card)`\n  transition: opacity 200ms;\n  position: relative;\n  z-index: 1;\n  padding-left: env(safe-area-inset-left);\n  padding-right: env(safe-area-inset-right);\n  opacity: 0;\n\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  &:not([data-collapsed]) {\n    overflow: auto;\n  }\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n\n  &[data-resizing] {\n    pointer-events: none;\n  }\n`\n","/* eslint-disable camelcase */\n\nimport {negate} from 'lodash'\nimport {_PaneMenuGroup, _PaneMenuItem, _PaneMenuNode} from './components/pane/types'\nimport {PaneMenuItem, PaneMenuItemGroup} from './types'\nimport {DocumentFieldActionNode} from 'sanity'\n\nexport function isMenuNodeButton(node: _PaneMenuNode): node is _PaneMenuItem | _PaneMenuGroup {\n  return (node.type === 'item' || node.type === 'group') && node.renderAsButton\n}\n\nexport const isNotMenuNodeButton = negate(isMenuNodeButton)\n\nexport function resolveMenuNodes(params: {\n  actionHandler: (item: PaneMenuItem) => void\n  fieldActions?: DocumentFieldActionNode[]\n  menuItems: PaneMenuItem[]\n  menuItemGroups: PaneMenuItemGroup[]\n}): _PaneMenuNode[] {\n  const {fieldActions = [], menuItems, menuItemGroups} = params\n\n  const nodes: _PaneMenuNode[] = []\n\n  let keyOffset = 0\n\n  for (let i = 0; i < fieldActions.length; i += 1) {\n    const a = fieldActions[i]\n\n    nodes.push(mapFieldActionToPaneMenuNode(a, `${i}-${a.type}`))\n  }\n\n  keyOffset += nodes.length\n\n  const groups: _PaneMenuGroup[] = []\n\n  for (const itemGroup of menuItemGroups) {\n    const group = groups.find((g) => g.key === itemGroup.id)\n\n    if (!group) {\n      groups.push({\n        type: 'group',\n        key: itemGroup.id,\n\n        children: [],\n        expanded: true,\n        renderAsButton: false,\n        title: itemGroup.title,\n      })\n    }\n  }\n\n  const ungroupedItems: _PaneMenuItem[] = []\n\n  for (let i = 0; i < menuItems.length; i += 1) {\n    const item = menuItems[i]\n\n    let group = item.group && groups.find((g) => g.key === item.group)\n\n    if (item.group && !group) {\n      group = {\n        type: 'group',\n        key: item.group,\n\n        expanded: true,\n        icon: item.icon,\n        title: item.group,\n        children: [],\n        renderAsButton: false,\n      }\n      groups.push(group)\n    }\n\n    if (group) {\n      group.children.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        tone: item.tone,\n      })\n    } else {\n      ungroupedItems.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        tone: item.tone,\n      })\n    }\n  }\n\n  return [...ungroupedItems, ...groups, ...nodes]\n}\n\nfunction mapFieldActionToPaneMenuNode(a: DocumentFieldActionNode, key: string): _PaneMenuNode {\n  if (a.type === 'divider') {\n    return {\n      type: 'divider',\n      key,\n    }\n  }\n\n  if (a.type === 'group') {\n    return {\n      type: 'group',\n      key,\n\n      children: a.children.map((child, childIdx) =>\n        mapFieldActionToPaneMenuNode(child, `${key}-${childIdx}-${child.type}`)\n      ),\n      disabled: a.disabled,\n      expanded: a.expanded ?? true,\n      icon: a.icon,\n      title: a.title,\n      renderAsButton: a.renderAsButton ?? false,\n    }\n  }\n\n  return {\n    type: 'item',\n    key,\n\n    disabled: a.disabled,\n    icon: a.icon,\n    iconRight: a.iconRight,\n    onAction: a.onAction,\n    renderAsButton: a.renderAsButton ?? false,\n    selected: a.selected,\n    title: a.title,\n    tone: a.tone,\n  }\n}\n","import {Button} from '@sanity/ui'\nimport React, {forwardRef, useMemo} from 'react'\nimport {PaneMenuItem} from '../types'\nimport {IntentLink} from 'sanity/router'\n\ntype RouterIntent = NonNullable<PaneMenuItem['intent']>\n\nexport const IntentButton = forwardRef(function IntentButton(\n  props: {intent: RouterIntent} & Omit<React.ComponentProps<typeof Button>, 'as' | 'href' | 'type'>,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {intent, ...restProps} = props\n\n  const Link = useMemo(\n    () =>\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      forwardRef(function Link(\n        linkProps: {children: React.ReactNode},\n        linkRef: React.ForwardedRef<HTMLAnchorElement>\n      ) {\n        return (\n          <IntentLink {...linkProps} intent={intent.type} params={intent.params} ref={linkRef} />\n        )\n      }),\n    [intent]\n  )\n\n  return props.disabled ? (\n    <Button {...props} as=\"a\" role=\"link\" aria-disabled=\"true\" />\n  ) : (\n    <Button\n      {...restProps}\n      as={Link}\n      data-as=\"a\"\n      ref={ref as React.ForwardedRef<HTMLButtonElement>}\n    />\n  )\n})\n","import {Tooltip, Text, Box} from '@sanity/ui'\nimport React from 'react'\nimport {useCurrentUser, InsufficientPermissionsMessage} from 'sanity'\n\ninterface InsufficientPermissionsMessageTooltipProps {\n  reveal: boolean\n  loading: boolean\n  children: React.ReactNode\n}\n\nexport function InsufficientPermissionsMessageTooltip({\n  reveal,\n  loading,\n  children,\n}: InsufficientPermissionsMessageTooltipProps) {\n  const currentUser = useCurrentUser()\n\n  if (!reveal) {\n    return <>{children}</>\n  }\n\n  return (\n    <Tooltip\n      content={\n        loading ? (\n          <Box padding={2}>\n            <Text>Loading…</Text>\n          </Box>\n        ) : (\n          <InsufficientPermissionsMessage currentUser={currentUser} />\n        )\n      }\n      portal\n    >\n      {/* this wrapping div is to allow mouse events */}\n      {/* while the child element is disabled */}\n      <div>{children}</div>\n    </Tooltip>\n  )\n}\n","import {ComposeIcon} from '@sanity/icons'\nimport React, {useMemo, forwardRef} from 'react'\nimport {Box, Button, Label, Menu, MenuButton, MenuItem, PopoverProps} from '@sanity/ui'\nimport {Schema} from '@sanity/types'\nimport {IntentButton} from '../IntentButton'\nimport {InsufficientPermissionsMessageTooltip} from './InsufficientPermissionsMessageTooltip'\nimport {IntentLink} from 'sanity/router'\nimport {\n  useTemplatePermissions,\n  TemplatePermissionsResult,\n  Template,\n  InitialValueTemplateItem,\n  useSchema,\n  useTemplates,\n} from 'sanity'\n\nexport type PaneHeaderIntentProps = React.ComponentProps<typeof IntentButton>['intent']\n\nconst POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nconst getIntent = (\n  schema: Schema,\n  templates: Template[],\n  item: InitialValueTemplateItem\n): PaneHeaderIntentProps | null => {\n  const typeName = templates.find((t) => t.id === item.templateId)?.schemaType\n  if (!typeName) return null\n\n  const baseParams = {\n    template: item.templateId,\n    type: typeName,\n    id: item.initialDocumentId,\n  }\n\n  return {\n    type: 'create',\n    params: item.parameters ? [baseParams, item.parameters] : baseParams,\n  }\n}\n\ninterface PaneHeaderCreateButtonProps {\n  templateItems: InitialValueTemplateItem[]\n}\n\nexport function PaneHeaderCreateButton({templateItems}: PaneHeaderCreateButtonProps) {\n  const schema = useSchema()\n  const templates = useTemplates()\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n\n  const nothingGranted = useMemo(() => {\n    return (\n      !isTemplatePermissionsLoading &&\n      templatePermissions?.every((permission) => !permission.granted)\n    )\n  }, [isTemplatePermissionsLoading, templatePermissions])\n\n  const permissionsById = useMemo(() => {\n    if (!templatePermissions) return {}\n    return templatePermissions.reduce<Record<string, TemplatePermissionsResult | undefined>>(\n      (acc, permission) => {\n        acc[permission.id] = permission\n        return acc\n      },\n      {}\n    )\n  }, [templatePermissions])\n\n  if (nothingGranted) {\n    return (\n      <InsufficientPermissionsMessageTooltip reveal loading={isTemplatePermissionsLoading}>\n        <Button\n          aria-label=\"Insufficient permissions\"\n          icon={ComposeIcon}\n          mode=\"bleed\"\n          disabled\n          data-testid=\"action-intent-button\"\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  if (templateItems.length === 1) {\n    const firstItem = templateItems[0]\n    const permissions = permissionsById[firstItem.id]\n    const disabled = !permissions?.granted\n    const intent = getIntent(schema, templates, firstItem)\n    if (!intent) return null\n\n    return (\n      <InsufficientPermissionsMessageTooltip\n        reveal={disabled}\n        loading={isTemplatePermissionsLoading}\n      >\n        <IntentButton\n          aria-label={firstItem.title}\n          icon={firstItem.icon || ComposeIcon}\n          intent={intent}\n          mode=\"bleed\"\n          disabled={disabled}\n          data-testid=\"action-intent-button\"\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  return (\n    <MenuButton\n      button={<Button icon={ComposeIcon} mode=\"bleed\" data-testid=\"multi-action-intent-button\" />}\n      id=\"create-menu\"\n      menu={\n        <Menu>\n          <Box paddingX={3} paddingTop={3} paddingBottom={2}>\n            <Label muted>Create</Label>\n          </Box>\n\n          {templateItems.map((item, itemIndex) => {\n            const permissions = permissionsById[item.id]\n            const disabled = !permissions?.granted\n            const intent = getIntent(schema, templates, item)\n            const template = templates.find((t) => t.id === item.templateId)\n            if (!template || !intent) return null\n\n            const Link = forwardRef((linkProps, linkRef: React.ForwardedRef<never>) =>\n              disabled ? (\n                <button type=\"button\" disabled {...linkProps} ref={linkRef} />\n              ) : (\n                <IntentLink\n                  {...linkProps}\n                  intent={intent.type}\n                  params={intent.params}\n                  ref={linkRef}\n                />\n              )\n            )\n\n            Link.displayName = 'Link'\n\n            return (\n              <InsufficientPermissionsMessageTooltip\n                key={item.id}\n                reveal={disabled}\n                loading={isTemplatePermissionsLoading}\n              >\n                <MenuItem\n                  as={Link}\n                  data-as={disabled ? 'button' : 'a'}\n                  text={item.title || template.title}\n                  aria-label={disabled ? 'Insufficient permissions' : item.title || template.title}\n                  disabled={disabled}\n                  data-testid={`action-intent-button-${itemIndex}`}\n                />\n              </InsufficientPermissionsMessageTooltip>\n            )\n          })}\n        </Menu>\n      }\n      popover={POPOVER_PROPS}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {uniqBy} from 'lodash'\nimport React, {memo, useCallback, useMemo} from 'react'\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../menuNodes'\nimport {DeskToolPaneActionHandler, PaneMenuItem, PaneMenuItemGroup} from '../../types'\nimport {PaneContextMenuButton} from '../pane/PaneContextMenuButton'\nimport {PaneHeaderActionButton} from '../pane/PaneHeaderActionButton'\nimport {PaneHeaderCreateButton} from './PaneHeaderCreateButton'\nimport {useTemplates, InitialValueTemplateItem, EMPTY_ARRAY, EMPTY_OBJECT} from 'sanity'\n\nfunction isNonNullable<T>(value: T): value is NonNullable<T> {\n  return value !== null && value !== undefined\n}\n\n/**\n * hashes an object to a string where the order of the keys don't matter\n */\nconst hashObject = (value: unknown) => {\n  const sortObject = (v: unknown): unknown => {\n    if (typeof v !== 'object' || !v) return v\n    if (Array.isArray(v)) return v.map(sortObject)\n    return Object.entries(v).sort(([keyA], [keyB]) => keyA.localeCompare(keyB, 'en'))\n  }\n\n  const normalize = (v: unknown) => JSON.parse(JSON.stringify(v))\n\n  return JSON.stringify(sortObject(normalize(value)))\n}\n\ninterface PaneHeaderActionsProps {\n  initialValueTemplateItems?: InitialValueTemplateItem[]\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  actionHandlers?: Record<string, DeskToolPaneActionHandler>\n}\n\nexport const PaneHeaderActions = memo(function PaneHeaderActions(props: PaneHeaderActionsProps) {\n  const {\n    initialValueTemplateItems: initialValueTemplateItemsFromStructure = EMPTY_ARRAY,\n    menuItems = EMPTY_ARRAY,\n    menuItemGroups = EMPTY_ARRAY,\n    actionHandlers = EMPTY_OBJECT as Record<string, DeskToolPaneActionHandler>,\n  } = props\n\n  const templates = useTemplates()\n\n  const handleAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (typeof item.action === 'string' && !(item.action in actionHandlers)) {\n        console.warn('No handler for action:', item.action)\n        return false\n      }\n\n      const handler =\n        // eslint-disable-next-line no-nested-ternary\n        typeof item.action === 'function'\n          ? item.action\n          : typeof item.action === 'string'\n          ? actionHandlers[item.action]\n          : null\n\n      if (handler) {\n        handler(item.params as Record<string, string>)\n        return true\n      }\n\n      return false\n    },\n    [actionHandlers]\n  )\n\n  const menuNodes = useMemo(\n    () =>\n      resolveMenuNodes({\n        actionHandler: handleAction,\n        menuItemGroups,\n        menuItems: menuItems\n          // remove items with `create` intents because those will get combined\n          // into one action button (see `initialValueTemplateItemFromMenuItems`)\n          .filter((item) => item.intent?.type !== 'create'),\n      }),\n    [handleAction, menuItemGroups, menuItems]\n  )\n\n  const actionNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n  const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n\n  const initialValueTemplateItemFromMenuItems = useMemo(() => {\n    return menuItems\n      .map((item, menuItemIndex) => {\n        if (item.intent?.type !== 'create') return null\n\n        const {params} = item.intent\n        if (!params) return null\n\n        const intentParams = Array.isArray(params) ? params[0] : params\n        const templateParams = Array.isArray(params) ? params[1] : undefined\n\n        // fallback to the schema type name as the template ID.\n        // by default, the initial template values are populated from every\n        // document type in the schema\n        const templateId = intentParams.template || intentParams.type\n        if (!templateId) return null\n\n        // eslint-disable-next-line max-nested-callbacks\n        const template = templates.find((t) => t.id === templateId)\n        // the template doesn't exist then the action might be disabled\n        if (!template) return null\n\n        const initialDocumentId = intentParams.id\n\n        return {\n          item,\n          template,\n          templateParams,\n          menuItemIndex,\n          initialDocumentId,\n        }\n      })\n      .filter(isNonNullable)\n      .map(({initialDocumentId, item, template, menuItemIndex, templateParams}) => {\n        const initialValueTemplateItem: InitialValueTemplateItem = {\n          id: `menuItem${menuItemIndex}`,\n          initialDocumentId,\n          templateId: template.id,\n          type: 'initialValueTemplateItem',\n          title: item.title || template.title,\n          icon: item.icon as InitialValueTemplateItem['icon'],\n          description: template.description,\n          parameters: templateParams,\n          schemaType: template.schemaType,\n        }\n\n        return initialValueTemplateItem\n      })\n  }, [menuItems, templates])\n\n  const combinedInitialValueTemplates = useMemo(() => {\n    // this de-dupes create actions\n    return uniqBy(\n      [...initialValueTemplateItemFromMenuItems, ...initialValueTemplateItemsFromStructure],\n      (item) => hashObject([item.initialDocumentId, item.templateId, item.parameters])\n    )\n  }, [initialValueTemplateItemFromMenuItems, initialValueTemplateItemsFromStructure])\n\n  return (\n    <Flex gap={1}>\n      {combinedInitialValueTemplates.length > 0 && (\n        <PaneHeaderCreateButton templateItems={combinedInitialValueTemplates} />\n      )}\n\n      {actionNodes.map((node) => (\n        <PaneHeaderActionButton key={node.key} node={node} />\n      ))}\n\n      {contextMenuNodes.length > 0 && <PaneContextMenuButton nodes={contextMenuNodes} />}\n    </Flex>\n  )\n})\n","/* eslint-disable import/no-extraneous-dependencies */\n\nimport {TrashIcon} from '@sanity/icons'\nimport React, {useCallback, useState} from 'react'\nimport {ConfirmDeleteDialog} from '../components'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NOTHING_TO_DELETE: 'This document doesn’t yet exist or is already deleted',\n}\n\n/** @internal */\nexport const DeleteAction: DocumentActionComponent = ({id, type, draft, onComplete}) => {\n  const {delete: deleteOp} = useDocumentOperation(id, type)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setIsDeleting(true)\n    setConfirmDialogOpen(false)\n    deleteOp.execute()\n    onComplete()\n  }, [deleteOp, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'delete',\n  })\n\n  const currentUser = useCurrentUser()\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: TrashIcon,\n      disabled: true,\n      label: 'Delete',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"delete this document\"\n          currentUser={currentUser}\n        />\n      ),\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: TrashIcon,\n    disabled: isDeleting || Boolean(deleteOp.disabled) || isPermissionsLoading,\n    title:\n      (deleteOp.disabled &&\n        DISABLED_REASON_TITLE[deleteOp.disabled as keyof typeof DISABLED_REASON_TITLE]) ||\n      '',\n    label: isDeleting ? 'Deleting…' : 'Delete',\n    shortcut: 'Ctrl+Alt+D',\n    onHandle: handle,\n    dialog: isConfirmDialogOpen && {\n      type: 'custom',\n      component: (\n        <ConfirmDeleteDialog\n          action=\"delete\"\n          id={draft?._id || id}\n          type={type}\n          onCancel={handleCancel}\n          onConfirm={handleConfirm}\n        />\n      ),\n    },\n  }\n}\n\nDeleteAction.action = 'delete'\n","/* eslint-disable import/no-extraneous-dependencies */\n\nimport {ResetIcon} from '@sanity/icons'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {\n  DocumentActionComponent,\n  DocumentActionDialogProps,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NO_CHANGES: 'This document has no unpublished changes',\n  NOT_PUBLISHED: 'This document is not published',\n}\n\n/** @internal */\nexport const DiscardChangesAction: DocumentActionComponent = ({\n  id,\n  type,\n  published,\n  liveEdit,\n  onComplete,\n}) => {\n  const {discardChanges} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'discardDraft',\n  })\n  const currentUser = useCurrentUser()\n\n  const handleConfirm = useCallback(() => {\n    discardChanges.execute()\n    onComplete()\n  }, [discardChanges, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | false = useMemo(\n    () =>\n      isConfirmDialogOpen && {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: <>Are you sure you want to discard all changes since last published?</>,\n      },\n    [handleConfirm, isConfirmDialogOpen, onComplete]\n  )\n\n  if (!published || liveEdit) {\n    return null\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: ResetIcon,\n      disabled: true,\n      label: 'Discard changes',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"discard changes in this document\"\n          currentUser={currentUser}\n        />\n      ),\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: ResetIcon,\n    disabled: Boolean(discardChanges.disabled) || isPermissionsLoading,\n    title:\n      (discardChanges.disabled &&\n        DISABLED_REASON_TITLE[discardChanges.disabled as keyof typeof DISABLED_REASON_TITLE]) ||\n      '',\n    label: 'Discard changes',\n    onHandle: handle,\n    dialog,\n  }\n}\n\nDiscardChangesAction.action = 'discardChanges'\n","import {CopyIcon} from '@sanity/icons'\nimport {uuid} from '@sanity/uuid'\nimport React, {useCallback, useState} from 'react'\nimport {useRouter} from 'sanity/router'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useDocumentPairPermissions,\n  useDocumentOperation,\n  useCurrentUser,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NOTHING_TO_DUPLICATE: 'This document doesn’t yet exist so there‘s nothing to duplicate',\n}\n\n/** @internal */\nexport const DuplicateAction: DocumentActionComponent = ({id, type, onComplete}) => {\n  const {duplicate} = useDocumentOperation(id, type)\n  const {navigateIntent} = useRouter()\n  const [isDuplicating, setDuplicating] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'duplicate',\n  })\n\n  const currentUser = useCurrentUser()\n\n  const handle = useCallback(() => {\n    const dupeId = uuid()\n\n    setDuplicating(true)\n    duplicate.execute(dupeId)\n    navigateIntent('edit', {id: dupeId, type})\n    onComplete()\n  }, [duplicate, navigateIntent, onComplete, type])\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      icon: CopyIcon,\n      disabled: true,\n      label: 'Duplicate',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"duplicate this document\"\n          currentUser={currentUser}\n        />\n      ),\n    }\n  }\n\n  return {\n    icon: CopyIcon,\n    disabled: isDuplicating || Boolean(duplicate.disabled) || isPermissionsLoading,\n    label: isDuplicating ? 'Duplicating…' : 'Duplicate',\n    title:\n      (duplicate.disabled &&\n        DISABLED_REASON_TITLE[duplicate.disabled as keyof typeof DISABLED_REASON_TITLE]) ||\n      '',\n    onHandle: handle,\n  }\n}\n\nDuplicateAction.action = 'duplicate'\n","import {RestoreIcon} from '@sanity/icons'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {DocumentActionComponent, DocumentActionDialogProps, useDocumentOperation} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\n/** @internal */\nexport const HistoryRestoreAction: DocumentActionComponent = ({id, type, revision, onComplete}) => {\n  const {restore} = useDocumentOperation(id, type)\n  const {navigateIntent} = useRouter()\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const handleConfirm = useCallback(() => {\n    restore.execute(revision!)\n    onComplete()\n    // wrapping in setTimeout gives the onComplete time to finish before navigating\n    setTimeout(() => navigateIntent('edit', {id, type}), 0)\n  }, [restore, revision, navigateIntent, id, type, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: <>Are you sure you want to restore this document?</>,\n      }\n    }\n\n    return null\n  }, [handleConfirm, isConfirmDialogOpen, onComplete])\n\n  const isRevisionInitialVersion = revision === '@initial'\n  const isRevisionLatestVersion = revision === undefined // undefined means latest version\n\n  if (isRevisionLatestVersion) {\n    return null\n  }\n\n  return {\n    label: 'Restore',\n    color: 'primary',\n    onHandle: handle,\n    title: isRevisionInitialVersion\n      ? \"You can't restore to the initial version\"\n      : 'Restore to this version',\n    icon: RestoreIcon,\n    dialog,\n    disabled: isRevisionInitialVersion,\n  }\n}\n\nHistoryRestoreAction.action = 'restore'\n","import {\n  ValidationMarker,\n  Path,\n  SanityDocument,\n  ObjectSchemaType,\n  SanityDocumentLike,\n} from '@sanity/types'\nimport {createContext} from 'react'\nimport {View} from '../../structureBuilder'\nimport {PaneMenuItem, PaneMenuItemGroup} from '../../types'\nimport {TimelineMode} from './types'\nimport {\n  DocumentActionComponent,\n  DocumentBadgeComponent,\n  DocumentFieldAction,\n  DocumentFormNode,\n  DocumentInspector,\n  DocumentLanguageFilterComponent,\n  DocumentPermission,\n  EditStateFor,\n  PatchEvent,\n  PermissionCheckResult,\n  StateTree,\n  TimelineStore,\n} from 'sanity'\n\n/** @internal */\nexport interface DocumentPaneContextValue {\n  actions: DocumentActionComponent[] | null\n  activeViewId: string | null\n  badges: DocumentBadgeComponent[] | null\n  changesOpen: boolean\n  closeInspector: (inspectorName?: string) => void\n  collapsedFieldSets: StateTree<boolean> | undefined\n  collapsedPaths: StateTree<boolean> | undefined\n  compareValue: Partial<SanityDocument> | null\n  connectionState: 'connecting' | 'reconnecting' | 'connected'\n  displayed: Partial<SanityDocument> | null\n  documentId: string\n  documentIdRaw: string\n  documentType: string\n  editState: EditStateFor | null\n  fieldActions: DocumentFieldAction[]\n  focusPath: Path\n  index: number\n  inspectOpen: boolean\n  inspector: DocumentInspector | null\n  inspectors: DocumentInspector[]\n  menuItemGroups: PaneMenuItemGroup[]\n  menuItems: PaneMenuItem[]\n  onBlur: (blurredPath: Path) => void\n  onChange: (event: PatchEvent) => void\n  onFocus: (pathOrEvent: Path) => void\n  onHistoryClose: () => void\n  onHistoryOpen: () => void\n  onInspectClose: () => void\n  onKeyUp: (event: React.KeyboardEvent<HTMLDivElement>) => void\n  onMenuAction: (item: PaneMenuItem) => void\n  onPaneClose: () => void\n  onPaneSplit?: () => void\n  onPathOpen: (path: Path) => void\n  onSetActiveFieldGroup: (path: Path, groupName: string) => void\n  onSetCollapsedPath: (path: Path, expanded: boolean) => void\n  onSetCollapsedFieldSet: (path: Path, expanded: boolean) => void\n  openInspector: (inspectorName: string, paneParams?: Record<string, string>) => void\n  paneKey: string\n  previewUrl?: string | null\n  ready: boolean\n  schemaType: ObjectSchemaType\n  setTimelineMode: (mode: TimelineMode) => void\n  setTimelineRange(since: string | null, rev: string | null): void\n  source?: string\n  timelineError: Error | null\n  timelineMode: TimelineMode\n  timelineStore: TimelineStore\n  title: string | null\n  validation: ValidationMarker[]\n  value: SanityDocumentLike\n  views: View[]\n  formState: DocumentFormNode | null\n  permissions?: PermissionCheckResult | null\n  isPermissionsLoading: boolean\n  unstable_languageFilter: DocumentLanguageFilterComponent[]\n}\n\n/** @internal */\nexport const DocumentPaneContext = createContext<DocumentPaneContextValue | null>(null)\n","import {useContext} from 'react'\nimport {DocumentPaneContext, DocumentPaneContextValue} from './DocumentPaneContext'\n\n/** @internal */\nexport function useDocumentPane(): DocumentPaneContextValue {\n  const documentPane = useContext(DocumentPaneContext)\n\n  if (!documentPane) {\n    throw new Error('DocumentPane: missing context value')\n  }\n\n  return documentPane\n}\n","import {CheckmarkIcon, PublishIcon} from '@sanity/icons'\nimport {isValidationErrorMarker} from '@sanity/types'\nimport React, {useCallback, useEffect, useState} from 'react'\nimport {TimeAgo} from '../components'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useEditState,\n  useSyncState,\n  useValidationStatus,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  LIVE_EDIT_ENABLED: 'Cannot publish since liveEdit is enabled for this document type',\n  ALREADY_PUBLISHED: 'Already published',\n  NO_CHANGES: 'No unpublished changes',\n  NOT_READY: 'Operation not ready',\n}\n\nfunction getDisabledReason(\n  reason: keyof typeof DISABLED_REASON_TITLE,\n  publishedAt: string | undefined\n) {\n  if (reason === 'ALREADY_PUBLISHED' && publishedAt) {\n    return (\n      <>\n        <span>\n          Published <TimeAgo time={publishedAt} />\n        </span>\n      </>\n    )\n  }\n  return DISABLED_REASON_TITLE[reason]\n}\n\n/** @internal */\n// eslint-disable-next-line complexity\nexport const PublishAction: DocumentActionComponent = (props) => {\n  const {id, type, liveEdit, draft, published} = props\n  const [publishState, setPublishState] = useState<'publishing' | 'published' | null>(null)\n  const {publish} = useDocumentOperation(id, type)\n  const validationStatus = useValidationStatus(id, type)\n  const syncState = useSyncState(id, type)\n  const {changesOpen, onHistoryOpen, documentId, documentType} = useDocumentPane()\n  const editState = useEditState(documentId, documentType)\n\n  const revision = (editState?.draft || editState?.published || {})._rev\n\n  const hasValidationErrors = validationStatus.validation.some(isValidationErrorMarker)\n  // we use this to \"schedule\" publish after pending tasks (e.g. validation and sync) has completed\n  const [publishScheduled, setPublishScheduled] = useState<boolean>(false)\n  const isSyncing = syncState.isSyncing\n  const isValidating = validationStatus.isValidating\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'publish',\n  })\n\n  const currentUser = useCurrentUser()\n\n  // eslint-disable-next-line no-nested-ternary\n  const title = publish.disabled\n    ? getDisabledReason(publish.disabled, (published || {})._updatedAt) || ''\n    : hasValidationErrors\n    ? 'There are validation errors that need to be fixed before this document can be published'\n    : ''\n\n  const hasDraft = Boolean(draft)\n\n  const doPublish = useCallback(() => {\n    publish.execute()\n    setPublishState('publishing')\n  }, [publish])\n\n  useEffect(() => {\n    // make sure the validation status is about the current revision and not an earlier one\n    const validationComplete =\n      validationStatus.isValidating === false && validationStatus.revision !== revision\n\n    if (!publishScheduled || isSyncing || !validationComplete) {\n      return\n    }\n\n    if (!hasValidationErrors) {\n      doPublish()\n    }\n    setPublishScheduled(false)\n  }, [\n    isSyncing,\n    doPublish,\n    hasValidationErrors,\n    publishScheduled,\n    validationStatus.revision,\n    revision,\n    isValidating,\n    validationStatus.isValidating,\n  ])\n\n  useEffect(() => {\n    const didPublish = publishState === 'publishing' && !hasDraft\n    if (didPublish) {\n      if (changesOpen) {\n        // Re-open the panel\n        onHistoryOpen()\n      }\n    }\n    const nextState = didPublish ? 'published' : null\n    const delay = didPublish ? 200 : 4000\n    const timer = setTimeout(() => {\n      setPublishState(nextState)\n    }, delay)\n    return () => clearTimeout(timer)\n  }, [changesOpen, publishState, hasDraft, onHistoryOpen])\n\n  const handle = useCallback(() => {\n    if (\n      syncState.isSyncing ||\n      validationStatus.isValidating ||\n      validationStatus.revision !== revision\n    ) {\n      setPublishScheduled(true)\n    } else {\n      doPublish()\n    }\n  }, [\n    syncState.isSyncing,\n    validationStatus.isValidating,\n    validationStatus.revision,\n    revision,\n    doPublish,\n  ])\n\n  if (liveEdit) {\n    return {\n      tone: 'positive',\n      label: 'Publish',\n      title:\n        'Live Edit is enabled for this content type and publishing happens automatically as you make changes',\n      disabled: true,\n    }\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'positive',\n      label: 'Publish',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"publish this document\"\n          currentUser={currentUser}\n        />\n      ),\n      disabled: true,\n    }\n  }\n\n  const disabled = Boolean(\n    publishScheduled ||\n      editState?.transactionSyncLock?.enabled ||\n      publishState === 'publishing' ||\n      publishState === 'published' ||\n      hasValidationErrors ||\n      publish.disabled\n  )\n\n  return {\n    disabled: disabled || isPermissionsLoading,\n    tone: 'positive',\n    label:\n      // eslint-disable-next-line no-nested-ternary\n      publishState === 'published'\n        ? 'Published'\n        : publishScheduled || publishState === 'publishing'\n        ? 'Publishing…'\n        : 'Publish',\n    // @todo: Implement loading state, to show a `<Button loading />` state\n    // loading: publishScheduled || publishState === 'publishing',\n    icon: publishState === 'published' ? CheckmarkIcon : PublishIcon,\n    // eslint-disable-next-line no-nested-ternary\n    title: publishScheduled\n      ? 'Waiting for tasks to finish before publishing'\n      : publishState === 'published' || publishState === 'publishing'\n      ? null\n      : title,\n    shortcut: disabled || publishScheduled ? null : 'Ctrl+Alt+P',\n    onHandle: handle,\n  }\n}\n\nPublishAction.action = 'publish'\n","import {UnpublishIcon} from '@sanity/icons'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {ConfirmDeleteDialog} from '../components'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useDocumentPairPermissions,\n  useCurrentUser,\n  useDocumentOperation,\n  DocumentActionModalDialogProps,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NOT_PUBLISHED: 'This document is not published',\n}\n\n/** @internal */\nexport const UnpublishAction: DocumentActionComponent = ({\n  id,\n  type,\n  draft,\n  onComplete,\n  liveEdit,\n}) => {\n  const {unpublish} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'unpublish',\n  })\n  const currentUser = useCurrentUser()\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setConfirmDialogOpen(false)\n    unpublish.execute()\n    onComplete()\n  }, [onComplete, unpublish])\n\n  const dialog: DocumentActionModalDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'dialog',\n        onClose: onComplete,\n        content: (\n          <ConfirmDeleteDialog\n            id={draft?._id || id}\n            type={type}\n            action=\"unpublish\"\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      }\n    }\n\n    return null\n  }, [draft, id, handleCancel, handleConfirm, isConfirmDialogOpen, onComplete, type])\n\n  if (liveEdit) {\n    return null\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: UnpublishIcon,\n      label: 'Unpublish',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"unpublish this document\"\n          currentUser={currentUser}\n        />\n      ),\n      disabled: true,\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: UnpublishIcon,\n    disabled: Boolean(unpublish.disabled) || isPermissionsLoading,\n    label: 'Unpublish',\n    title: unpublish.disabled\n      ? DISABLED_REASON_TITLE[unpublish.disabled as keyof typeof DISABLED_REASON_TITLE]\n      : '',\n    onHandle: () => setConfirmDialogOpen(true),\n    dialog,\n  }\n}\n\nUnpublishAction.action = 'unpublish'\n","import {DocumentBadgeComponent} from 'sanity'\n\n/** @internal */\nexport const LiveEditBadge: DocumentBadgeComponent = (props) => {\n  const {liveEdit} = props\n\n  if (liveEdit) {\n    return {\n      label: 'Live',\n      color: 'danger',\n    }\n  }\n\n  return null\n}\n","/**\n * @internal\n */\nexport const _DEBUG = false\n\nexport const EMPTY_PARAMS = {}\nexport const LOADING_PANE = Symbol('LOADING_PANE')\n\nexport const DOCUMENT_PANEL_PORTAL_ELEMENT = 'documentPanelPortalElement'\n","import {uuid} from '@sanity/uuid'\nimport {PaneNode, RouterPanes} from './types'\nimport {EMPTY_PARAMS, LOADING_PANE} from './constants'\n\nconst state: {\n  activePanes: Array<PaneNode | typeof LOADING_PANE>\n} = {activePanes: []}\n\nexport function setActivePanes(panes: Array<PaneNode | typeof LOADING_PANE>): void {\n  state.activePanes = panes\n}\n\n/**\n * This function looks at the _active panes_ to resolve an intent. this type of\n * intent resolution is faster and does not cause the panes to reset\n *\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: {panes?: RouterPanes} | undefined,\n  payload: unknown\n): {panes: RouterPanes} | {intent: string; params: Record<string, string>; payload: unknown} {\n  const panes = routerState?.panes || []\n  const activePanes = state.activePanes || []\n  const editDocumentId = params.id || uuid()\n  const isTemplate = intent === 'create' && params.template\n\n  // Loop through open panes and see if any of them can handle the intent\n  for (let i = activePanes.length - 1; i >= 0; i--) {\n    const pane = activePanes[i]\n\n    if (typeof pane !== 'object') continue\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `resolveIntent.ts`\n    if (\n      pane.canHandleIntent?.(intent, params, {\n        pane,\n        index: i,\n      }) ||\n      // see `resolveIntent.ts` for more info\n      (pane.type === 'documentList' &&\n        pane.schemaTypeName === params.type &&\n        pane.options.filter === '_type == $type')\n    ) {\n      const paneParams = isTemplate ? {template: params.template} : EMPTY_PARAMS\n\n      return {\n        panes: panes\n          .slice(0, i)\n          .concat([[{id: editDocumentId, params: paneParams, payload}]]) as RouterPanes,\n      }\n    }\n  }\n\n  return {intent: intent, params, payload}\n}\n","import {omit} from 'lodash'\nimport {RouterPanes, RouterPaneGroup, RouterPaneSibling} from './types'\nimport {route} from 'sanity/router'\n\nconst EMPTY_PARAMS = {}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToState(params: string): Record<string, unknown> {\n  try {\n    return JSON.parse(decodeURIComponent(params))\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn('Failed to parse JSON parameters')\n    return {}\n  }\n}\n\nexport function encodePanesSegment(panes: RouterPanes): string {\n  return (panes || [])\n    .map((group) => group.map(encodeChunks).join('|'))\n    .map(encodeURIComponent)\n    .join(';')\n}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToPath(params: Record<string, unknown>): string {\n  return JSON.stringify(params)\n}\n\n// http://localhost:3333/intent/create/template=book-by-author;type=book/eyJhdXRob3JJZCI6Imdycm0ifQ==\n\n/**\n * @internal\n */\nexport function toState(pathSegment: string): RouterPaneGroup[] {\n  return parsePanesSegment(decodeURIComponent(pathSegment))\n}\n\n/**\n * @internal\n */\nexport function toPath(panes: RouterPaneGroup[]): string {\n  return encodePanesSegment(panes)\n}\n\nexport const router = route.create('/', [\n  // \"Asynchronous intent resolving\" route\n  route.intents('/intent'),\n\n  // Legacy fallback route, will be redirected to new format\n  route.create('/edit/:type/:editDocumentId', [\n    route.create({\n      path: '/:params',\n      transform: {params: {toState: legacyEditParamsToState, toPath: legacyEditParamsToPath}},\n    }),\n  ]),\n\n  // The regular path - when the intent can be resolved to a specific pane\n  route.create({\n    path: '/:panes',\n    // Legacy URLs, used to handle redirects\n    children: [route.create('/:action', route.create('/:legacyEditDocumentId'))],\n    transform: {\n      panes: {toState, toPath},\n    },\n  }),\n])\n\n// old: authors;knut,{\"template\":\"diaryEntry\"}\n// new: authors;knut,view=diff,eyJyZXYxIjoiYWJjMTIzIiwicmV2MiI6ImRlZjQ1NiJ9|latest-posts\n\nconst panePattern = /^([.a-z0-9_-]+),?({.*?})?(?:(;|$))/i\nconst isParam = (str: string) => /^[a-z0-9]+=[^=]+/i.test(str)\nconst isPayload = (str: string) =>\n  /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(str)\nconst exclusiveParams = ['view', 'since', 'rev', 'inspect']\n\ntype Truthy<T> = T extends false\n  ? never\n  : T extends ''\n  ? never\n  : T extends 0\n  ? never\n  : T extends 0n\n  ? never\n  : T extends null | undefined\n  ? NonNullable<T>\n  : T\nconst isTruthy = Boolean as (t: unknown) => boolean as <T>(t: T) => t is Truthy<T>\n\nfunction parseChunks(chunks: string[], initial: RouterPaneSibling): RouterPaneSibling {\n  return chunks.reduce(\n    (pane, chunk) => {\n      if (isParam(chunk)) {\n        const key = chunk.slice(0, chunk.indexOf('='))\n        const value = chunk.slice(key.length + 1)\n        pane.params = {...pane.params, [decodeURIComponent(key)]: decodeURIComponent(value)}\n      } else if (isPayload(chunk)) {\n        pane.payload = tryParseBase64Payload(chunk)\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn('Unknown pane segment: %s - skipping', chunk)\n      }\n\n      return pane\n    },\n    {...initial, params: EMPTY_PARAMS, payload: undefined}\n  )\n}\n\nfunction encodeChunks(pane: RouterPaneSibling, index: number, group: RouterPaneGroup): string {\n  const {payload, params = {}, id} = pane\n  const [firstSibling] = group\n  const paneIsFirstSibling = pane === firstSibling\n  const sameAsFirst = index !== 0 && id === firstSibling.id\n  const encodedPayload = typeof payload === 'undefined' ? undefined : btoa(JSON.stringify(payload))\n\n  const encodedParams = Object.entries(params)\n    .filter((entry): entry is [string, string] => {\n      const [key, value] = entry\n      if (!value) return false\n      if (paneIsFirstSibling) return true\n\n      // omit the value if it's the same as the value from the first sibling\n      const valueFromFirstSibling = firstSibling.params?.[key]\n      if (value === valueFromFirstSibling && !exclusiveParams.includes(key)) return false\n      return true\n    })\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n\n  return (\n    [sameAsFirst ? '' : id]\n      .concat([encodedParams.length > 0 && encodedParams, encodedPayload].filter(isTruthy).flat())\n      .join(',') || ','\n  )\n}\n\nexport function parsePanesSegment(str: string): RouterPanes {\n  if (str.indexOf(',{') !== -1) {\n    return parseOldPanesSegment(str)\n  }\n\n  return str\n    .split(';')\n    .map((group) => {\n      const [firstSibling, ...restOfSiblings] = group.split('|').map((segment) => {\n        const [id, ...chunks] = segment.split(',')\n        return parseChunks(chunks, {id})\n      })\n\n      return [\n        firstSibling,\n        ...restOfSiblings.map((sibling) => ({\n          ...firstSibling,\n          ...sibling,\n          id: sibling.id || firstSibling.id,\n          params: {...omit(firstSibling.params, exclusiveParams), ...sibling.params},\n          payload: sibling.payload || firstSibling.payload,\n        })),\n      ]\n    })\n    .filter((group) => group.length > 0)\n}\n\nfunction parseOldPanesSegment(str: string): RouterPanes {\n  const chunks: RouterPaneGroup = []\n\n  let buffer = str\n  while (buffer.length) {\n    const [match, id, payloadChunk] = buffer.match(panePattern) || []\n    if (!match) {\n      buffer = buffer.slice(1)\n      continue\n    }\n\n    const payload = payloadChunk && tryParsePayload(payloadChunk)\n    chunks.push({id, payload})\n\n    buffer = buffer.slice(match.length)\n  }\n\n  return [chunks]\n}\n\nfunction tryParsePayload(json: string) {\n  try {\n    return JSON.parse(json)\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n\nfunction tryParseBase64Payload(data: string) {\n  return data ? tryParsePayload(atob(data)) : undefined\n}\n","import {PaneRouterContextValue} from '../../components'\nimport {PaneMenuItemGroup} from '../../types'\n\nexport const DOCUMENT_PANEL_MIN_WIDTH = 320\nexport const DOCUMENT_PANEL_INITIAL_MIN_WIDTH = 600\n\nexport const DOCUMENT_INSPECTOR_MIN_WIDTH = 320\nexport const DOCUMENT_INSPECTOR_MAX_WIDTH = 540\n\nexport const EMPTY_PARAMS: NonNullable<PaneRouterContextValue['params']> = {}\n\nexport const INSPECT_ACTION_PREFIX = 'inspect:'\n\nexport const DEFAULT_MENU_ITEM_GROUPS: PaneMenuItemGroup[] = [{id: 'inspectors'}, {id: 'links'}]\n\n// inspectors\nexport const HISTORY_INSPECTOR_NAME = 'sanity/desk/history'\nexport const VALIDATION_INSPECTOR_NAME = 'sanity/desk/validation'\n","import {CloseIcon} from '@sanity/icons'\nimport {Box, Button, Card, CardProps, Flex, Text} from '@sanity/ui'\nimport React, {HTMLProps, ReactNode} from 'react'\nimport styled from 'styled-components'\n\nexport interface DocumentInspectorHeaderProps {\n  as?: CardProps['as']\n  closeButtonLabel: string\n  flex?: CardProps['flex']\n  onClose: () => void\n  title: ReactNode\n}\n\nconst Root = styled(Card)({\n  position: 'relative',\n  zIndex: 1,\n  lineHeight: 0,\n\n  '&:after': {\n    content: '\"\"',\n    display: 'block',\n    position: 'absolute',\n    left: 0,\n    bottom: -1,\n    right: 0,\n    borderBottom: '1px solid var(--card-border-color)',\n    opacity: 0.5,\n  },\n})\n\n/** @internal */\nexport function DocumentInspectorHeader(\n  props: DocumentInspectorHeaderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>\n) {\n  const {as: forwardedAs, children, closeButtonLabel, onClose, title, ...restProps} = props\n\n  return (\n    <Root {...restProps} as={forwardedAs}>\n      <Flex padding={2}>\n        <Box flex={1} padding={3}>\n          <Text as=\"h1\" size={1} weight=\"semibold\">\n            {title}\n          </Text>\n        </Box>\n        <Box flex=\"none\" padding={1}>\n          <Button\n            aria-label={closeButtonLabel}\n            fontSize={1}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={onClose}\n            padding={2}\n          />\n        </Box>\n      </Flex>\n      {children}\n    </Root>\n  )\n}\n","import {createContext} from 'react'\nimport {DeskToolContextValue} from './types'\n\nexport const DeskToolContext = createContext<DeskToolContextValue | null>(null)\n","import {useContext} from 'react'\nimport {DeskToolContext} from './DeskToolContext'\nimport {DeskToolContextValue} from './types'\n\n/** @internal */\nexport function useDeskTool(): DeskToolContextValue {\n  const deskTool = useContext(DeskToolContext)\n\n  if (!deskTool) throw new Error(`DeskTool: missing context value`)\n\n  return deskTool\n}\n","import React, {useCallback, useRef} from 'react'\nimport styled from 'styled-components'\n\nconst Root = styled.div`\n  position: absolute;\n  top: 0;\n  left: -4px;\n  bottom: 0;\n  width: 9px;\n  z-index: 201;\n  cursor: ew-resize;\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n    opacity: 0.5;\n  }\n\n  /* Hover effect */\n  & > span:nth-child(2) {\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 9px;\n    bottom: 0;\n    background-color: var(--card-border-color);\n    opacity: 0;\n    transition: opacity 150ms;\n  }\n\n  @media (hover: hover) {\n    &:hover > span:nth-child(2) {\n      opacity: 0.2;\n    }\n  }\n`\n\nexport function Resizer(props: {onResize: (delta: number) => void; onResizeStart: () => void}) {\n  const {onResize, onResizeStart} = props\n\n  const mouseXRef = useRef(0)\n\n  const handleMouseDown = useCallback(\n    (event: React.MouseEvent) => {\n      event.preventDefault()\n\n      mouseXRef.current = event.pageX\n\n      onResizeStart()\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n        onResize(e.pageX - mouseXRef.current)\n      }\n\n      const handleMouseUp = () => {\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [onResize, onResizeStart]\n  )\n\n  return (\n    <Root onMouseDown={handleMouseDown}>\n      {/* Hover effect */}\n      <span />\n\n      {/* Border */}\n      <span />\n    </Root>\n  )\n}\n","import React, {HTMLProps, useCallback, useMemo, useRef, useState} from 'react'\nimport styled from 'styled-components'\nimport {Box, BoxProps} from '@sanity/ui'\nimport {Resizer} from './Resizer'\n\nexport interface ResizableProps {\n  minWidth: number\n  maxWidth: number\n}\n\nconst Root = styled(Box)`\n  position: relative;\n  flex: 1;\n  padding-left: 1px;\n`\n\nexport function Resizable(\n  props: ResizableProps & BoxProps & Omit<HTMLProps<HTMLDivElement>, 'as'>\n) {\n  const {as: forwardedAs, children, minWidth, maxWidth, ...restProps} = props\n  const [element, setElement] = useState<HTMLDivElement | null>(null)\n  const elementWidthRef = useRef<number>()\n  const [targetWidth, setTargetWidth] = useState<number>()\n\n  const handleResizeStart = useCallback(() => {\n    elementWidthRef.current = element?.offsetWidth\n  }, [element])\n\n  const handleResize = useCallback(\n    (deltaX: number) => {\n      const w = elementWidthRef.current\n\n      if (!w) return\n\n      setTargetWidth(Math.min(Math.max(w - deltaX, minWidth), maxWidth))\n    },\n    [minWidth, maxWidth]\n  )\n\n  const style = useMemo(\n    () => (targetWidth ? {flex: 'none', width: targetWidth} : {minWidth, maxWidth}),\n    [minWidth, maxWidth, targetWidth]\n  )\n\n  return (\n    <Root as={forwardedAs} {...restProps} ref={setElement} style={style}>\n      {children}\n      <Resizer onResize={handleResize} onResizeStart={handleResizeStart} />\n    </Root>\n  )\n}\n","/* eslint-disable no-loop-func */\n\nimport {Path, SanityDocument, SchemaType} from '@sanity/types'\nimport {isArray, isRecord} from 'sanity'\n\nexport function getPathTypes(options: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}): SchemaType[] {\n  const {path, schemaType, value} = options\n  const result: SchemaType[] = []\n\n  let s = schemaType\n  let v: unknown = value\n\n  for (const segment of path) {\n    // field name\n    if (typeof segment === 'string') {\n      if (!isRecord(v) && v !== undefined) {\n        throw new Error(`Parent value is not an object, cannot get path segment: .${segment}`)\n      }\n\n      if (s.jsonType !== 'object') {\n        throw new Error(\n          `Parent type is not an object schema type, cannot get path segment: .${segment}`\n        )\n      }\n\n      v = v?.[segment]\n\n      const field = s.fields.find((f) => f.name === segment)\n\n      if (!field) {\n        throw new Error(`Field type not found: .${segment}`)\n      }\n\n      s = field.type\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item index\n    if (typeof segment === 'number') {\n      if (!isArray(v) && v !== undefined) {\n        throw new Error(`Parent value is not an array, cannot get path segment: [${segment}]`)\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: [${segment}]`\n        )\n      }\n\n      v = v?.[segment]\n\n      const itemType = s.of.find((ofType) => {\n        if (typeof v === 'string') {\n          return ofType.jsonType === 'string'\n        }\n\n        if (typeof v === 'number') {\n          return ofType.jsonType === 'number'\n        }\n\n        if (typeof v === 'boolean') {\n          return ofType.jsonType === 'boolean'\n        }\n\n        if (isRecord(v)) {\n          return ofType.name === v?._type\n        }\n\n        return false\n      })\n\n      if (!itemType) {\n        throw new Error(`Item type not found: [${segment}]`)\n      }\n\n      s = itemType\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item key\n    if (isRecord(segment) && segment._key) {\n      if (!isArray(v)) {\n        throw new Error(\n          `Parent value is not an anrray, cannot get path segment: [_key == ${segment}]`\n        )\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: .${segment}`\n        )\n      }\n\n      const values = v ?? []\n\n      v = values.find((i) => isRecord(i) && i._key === segment._key)\n\n      if (!isRecord(v)) {\n        throw new Error(`Array item not found: [_key == ${segment._key}]`)\n      }\n\n      const ofType = s.of.find((i) => isRecord(v) && i.name === v?._type)\n\n      if (!ofType) {\n        throw new Error(`Array item type not found: .${v?._type}`)\n      }\n\n      s = ofType\n\n      result.push(s)\n\n      continue\n    }\n\n    throw new Error(`Invalid path segment: ${JSON.stringify(segment)}`)\n  }\n\n  return result\n}\n","import {ErrorOutlineIcon, IconComponent, InfoOutlineIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, CardTone, ErrorBoundary, Flex, Stack, Text} from '@sanity/ui'\nimport {ObjectSchemaType, Path, SanityDocument, SchemaType, ValidationMarker} from '@sanity/types'\nimport React, {ErrorInfo, Fragment, createElement, useCallback, useMemo, useState} from 'react'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentInspectorHeader} from '../../documentInspector'\nimport {getPathTypes} from './getPathTypes'\nimport {DocumentInspectorProps, pathToString} from 'sanity'\n\nconst MARKER_ICON: Record<'error' | 'warning' | 'info', IconComponent> = {\n  error: ErrorOutlineIcon,\n  warning: WarningOutlineIcon,\n  info: InfoOutlineIcon,\n}\n\nconst MARKER_TONE: Record<'error' | 'warning' | 'info', CardTone> = {\n  error: 'critical',\n  warning: 'caution',\n  info: 'primary',\n}\n\nexport function ValidationInspector(props: DocumentInspectorProps) {\n  const {onClose} = props\n  const {onFocus, onPathOpen, schemaType, validation, value} = useDocumentPane()\n\n  const handleOpen = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onFocus, onPathOpen]\n  )\n\n  return (\n    <Flex direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <DocumentInspectorHeader\n        as=\"header\"\n        closeButtonLabel=\"Close validation\"\n        flex=\"none\"\n        onClose={onClose}\n        title=\"Validation\"\n      />\n\n      <Card flex={1} overflow=\"auto\" padding={3}>\n        {validation.length === 0 && (\n          <Box padding={2}>\n            <Text muted size={1}>\n              No validation errors\n            </Text>\n          </Box>\n        )}\n\n        {validation.length > 0 && (\n          <Stack space={2}>\n            {validation.map((marker) => (\n              <ValidationCard\n                key={pathToString(marker.path)}\n                marker={marker}\n                onOpen={handleOpen}\n                schemaType={schemaType}\n                value={value}\n              />\n            ))}\n          </Stack>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n\nfunction ValidationCard(props: {\n  marker: ValidationMarker\n  onOpen: (path: Path) => void\n  schemaType: ObjectSchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {marker, onOpen, schemaType, value} = props\n  const handleOpen = useCallback(() => onOpen(marker.path), [marker, onOpen])\n  const [errorInfo, setErrorInfo] = useState<{error: Error; info: ErrorInfo} | null>(null)\n\n  return (\n    <ErrorBoundary onCatch={setErrorInfo}>\n      {errorInfo && (\n        <Card padding={3} radius={2} tone=\"critical\">\n          <Text size={1}>ERROR: {errorInfo.error.message}</Text>\n        </Card>\n      )}\n\n      {!errorInfo && (\n        <Card\n          __unstable_focusRing\n          as=\"button\"\n          onClick={handleOpen}\n          padding={3}\n          radius={2}\n          tone={MARKER_TONE[marker.level]}\n        >\n          <Flex align=\"flex-start\" gap={3}>\n            <Box flex=\"none\">\n              <Text size={1}>{createElement(MARKER_ICON[marker.level])}</Text>\n            </Box>\n\n            <Stack flex={1} space={2}>\n              <DocumentNodePathBreadcrumbs\n                path={marker.path}\n                schemaType={schemaType}\n                value={value}\n              />\n\n              <Text muted size={1}>\n                {marker.item.message}\n              </Text>\n            </Stack>\n          </Flex>\n        </Card>\n      )}\n    </ErrorBoundary>\n  )\n}\n\nfunction DocumentNodePathBreadcrumbs(props: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {path, schemaType, value} = props\n\n  const pathTypes = useMemo(\n    () => getPathTypes({path, schemaType, value}),\n    [path, schemaType, value]\n  )\n\n  return (\n    <Text size={1}>\n      {pathTypes.map((t, i) => (\n        <Fragment key={i}>\n          {i > 0 && <span style={{color: 'var(--card-muted-fg-color)', opacity: 0.5}}> / </span>}\n          <span style={{fontWeight: 500}}>{t.title || t.name}</span>\n        </Fragment>\n      ))}\n    </Text>\n  )\n}\n","import {CheckmarkCircleIcon, ErrorOutlineIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {useMemo} from 'react'\nimport {VALIDATION_INSPECTOR_NAME} from '../../constants'\nimport {ValidationInspector} from './ValidationInspector'\nimport {\n  DocumentInspector,\n  DocumentInspectorMenuItem,\n  DocumentInspectorUseMenuItemProps,\n  FormNodeValidation,\n  isValidationError,\n  isValidationWarning,\n  useValidationStatus,\n} from 'sanity'\n\nfunction useMenuItem(props: DocumentInspectorUseMenuItemProps): DocumentInspectorMenuItem {\n  const {documentId, documentType} = props\n  const {validation: validationMarkers} = useValidationStatus(documentId, documentType)\n\n  const validation: FormNodeValidation[] = useMemo(\n    () =>\n      validationMarkers.map((item) => ({\n        level: item.level,\n        message: item.item.message,\n        path: item.path,\n      })),\n    [validationMarkers]\n  )\n\n  const hasErrors = validation.some(isValidationError)\n  const hasWarnings = validation.some(isValidationWarning)\n\n  const icon = useMemo(() => {\n    if (hasErrors) return ErrorOutlineIcon\n    if (hasWarnings) return WarningOutlineIcon\n    return CheckmarkCircleIcon\n  }, [hasErrors, hasWarnings])\n\n  const tone = useMemo(() => {\n    if (hasErrors) return 'critical'\n    if (hasWarnings) return 'caution'\n    return 'positive'\n  }, [hasErrors, hasWarnings])\n\n  return {\n    hidden: validation.length === 0,\n    icon,\n    title: 'Validation',\n    tone,\n    showAsAction: true,\n  }\n}\n\nexport const validationInspector: DocumentInspector = {\n  name: VALIDATION_INSPECTOR_NAME,\n  component: ValidationInspector,\n  useMenuItem,\n}\n","import {\n  TrashIcon,\n  EditIcon,\n  IconComponent,\n  PublishIcon,\n  UnpublishIcon,\n  CloseIcon,\n  AddCircleIcon,\n} from '@sanity/icons'\n\nexport const TIMELINE_LABELS: {[key: string]: string | undefined} = {\n  create: 'created',\n  delete: 'deleted',\n  discardDraft: 'discarded draft',\n  initial: 'created',\n  editDraft: 'edited',\n  editLive: 'live edited',\n  publish: 'published',\n  unpublish: 'unpublished',\n}\n\nexport const TIMELINE_ICON_COMPONENTS: {[key: string]: IconComponent | undefined} = {\n  create: AddCircleIcon,\n  delete: TrashIcon,\n  discardDraft: CloseIcon,\n  initial: AddCircleIcon,\n  editDraft: EditIcon,\n  editLive: EditIcon,\n  publish: PublishIcon,\n  unpublish: UnpublishIcon,\n}\n","import {IconComponent} from '@sanity/icons'\nimport {TIMELINE_ICON_COMPONENTS, TIMELINE_LABELS} from './constants'\nimport {ChunkType} from 'sanity'\n\nexport function formatTimelineEventLabel(type: ChunkType): string | undefined {\n  return TIMELINE_LABELS[type]\n}\n\nexport function getTimelineEventIconComponent(type: ChunkType): IconComponent | undefined {\n  return TIMELINE_ICON_COMPONENTS[type]\n}\n","import React from 'react'\nimport {AvatarStack} from '@sanity/ui'\nimport {UserAvatar} from 'sanity'\n\ninterface UserAvatarStackProps {\n  maxLength?: number\n  userIds: string[]\n}\n\nexport function UserAvatarStack({maxLength, userIds}: UserAvatarStackProps) {\n  return (\n    <AvatarStack maxLength={maxLength}>\n      {userIds.map((userId) => (\n        <UserAvatar key={userId} user={userId} withTooltip />\n      ))}\n    </AvatarStack>\n  )\n}\n","import {Text, Box, Button, Theme, Flex, rem} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport interface IconWrapperProps {\n  theme: Theme\n}\n\nexport const IconWrapper = styled(Flex)(({theme}: IconWrapperProps) => {\n  const borderColor = theme.sanity.color.base.skeleton?.from\n\n  return css`\n    --timeline-hairline-width: 1px;\n    position: relative;\n    z-index: 2;\n    margin: 0;\n    padding: 0;\n\n    &::before {\n      position: absolute;\n      content: '';\n      height: 100%;\n      width: var(--timeline-hairline-width);\n      background: ${borderColor};\n      top: 0;\n      left: calc((100% - var(--timeline-hairline-width)) / 2);\n      z-index: 1;\n    }\n  `\n})\n\nexport const Root = styled(Button)(({$selected}: {$selected: boolean}) => {\n  return css`\n    position: relative;\n    width: 100%;\n\n    /* Line styling */\n    &[data-first] ${IconWrapper}::before {\n      height: 50%;\n      top: unset;\n      bottom: 0;\n    }\n\n    &[data-last] ${IconWrapper}::before {\n      height: 50%;\n    }\n\n    ${$selected &&\n    css`\n      ${IconWrapper}::before {\n        background: transparent;\n      }\n    `}\n  `\n})\n\nexport const IconBox = styled(Box)`\n  background: var(--card-bg-color);\n  border-radius: 50px;\n  position: relative;\n  z-index: 2;\n`\n\nexport const EventLabel = styled(Text)`\n  text-transform: capitalize;\n`\n\nexport const TimestampBox = styled(Box)`\n  min-width: 1rem;\n  margin-left: ${({theme}) => `-${rem(theme.sanity.space[1])}`};\n`\n","import React, {useCallback, createElement, useMemo} from 'react'\nimport {Box, ButtonTone, Card, Flex, Label, Stack, Text} from '@sanity/ui'\nimport {format} from 'date-fns'\nimport {formatTimelineEventLabel, getTimelineEventIconComponent} from './helpers'\nimport {UserAvatarStack} from './userAvatarStack'\nimport {EventLabel, IconBox, IconWrapper, Root, TimestampBox} from './timelineItem.styled'\nimport {ChunkType, Chunk} from 'sanity'\n\nconst TIMELINE_ITEM_EVENT_TONE: Record<ChunkType | 'withinSelection', ButtonTone> = {\n  initial: 'primary',\n  create: 'primary',\n  publish: 'positive',\n  editLive: 'caution',\n  editDraft: 'caution',\n  unpublish: 'critical',\n  discardDraft: 'critical',\n  delete: 'critical',\n  withinSelection: 'primary',\n}\n\ninterface TimelineItemProps {\n  chunk: Chunk\n  isFirst: boolean\n  isLast: boolean\n  isLatest: boolean\n  isSelected: boolean\n  onSelect: (chunk: Chunk) => void\n  timestamp: string\n  type: ChunkType\n}\n\nexport function TimelineItem({\n  chunk,\n  isFirst,\n  isLast,\n  isLatest,\n  isSelected,\n  onSelect,\n  timestamp,\n  type,\n}: TimelineItemProps) {\n  const iconComponent = getTimelineEventIconComponent(type)\n  const authorUserIds = Array.from(chunk.authors)\n  const formattedTimestamp = useMemo(() => {\n    const parsedDate = new Date(timestamp)\n    const formattedDate = format(parsedDate, 'MMM d, yyyy, hh:mm a')\n\n    return formattedDate\n  }, [timestamp])\n\n  const handleClick = useCallback(\n    (evt: React.MouseEvent<HTMLButtonElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n      onSelect(chunk)\n    },\n    [onSelect, chunk]\n  )\n\n  return (\n    <Root\n      $selected={isSelected}\n      data-chunk-id={chunk.id}\n      data-first={isFirst ? true : undefined}\n      data-last={isLast ? true : undefined}\n      data-ui=\"timelineItem\"\n      mode={isSelected ? 'default' : 'bleed'}\n      onClick={handleClick}\n      padding={0}\n      radius={2}\n      tone={isSelected ? 'primary' : TIMELINE_ITEM_EVENT_TONE[chunk.type]}\n    >\n      <Box paddingX={2}>\n        <Flex align=\"stretch\">\n          <IconWrapper align=\"center\">\n            <IconBox padding={2}>\n              <Text size={2}>{iconComponent && createElement(iconComponent)}</Text>\n            </IconBox>\n          </IconWrapper>\n\n          <Stack space={2} margin={2}>\n            {isLatest && (\n              <Flex>\n                <Card\n                  padding={1}\n                  radius={2}\n                  shadow={1}\n                  tone={isSelected ? 'primary' : TIMELINE_ITEM_EVENT_TONE[chunk.type]}\n                >\n                  <Label muted size={0}>\n                    Latest\n                  </Label>\n                </Card>\n              </Flex>\n            )}\n            <Box>\n              <EventLabel size={1} weight=\"medium\">\n                {formatTimelineEventLabel(type) || <code>{type}</code>}\n              </EventLabel>\n            </Box>\n            <TimestampBox paddingX={1}>\n              <Text size={0} muted>\n                {formattedTimestamp}\n              </Text>\n            </TimestampBox>\n          </Stack>\n          <Flex flex={1} justify=\"flex-end\" align=\"center\">\n            <UserAvatarStack maxLength={3} userIds={authorUserIds} />\n          </Flex>\n        </Flex>\n      </Box>\n    </Root>\n  )\n}\n","import {Box, Flex, Stack} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const StackWrapper = styled(Stack)`\n  max-width: 200px;\n`\n\nexport const ListWrapper = styled(Flex)`\n  max-height: calc(100vh - 198px);\n  min-width: 244px;\n`\n\nexport const Root = styled(Box)(({$visible}: {$visible?: boolean}) => {\n  return css`\n    opacity: 0;\n    pointer-events: none;\n\n    ${$visible &&\n    css`\n      opacity: 1;\n      pointer-events: auto;\n    `}\n  `\n})\n","import React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport {Box, Flex, Spinner, Text} from '@sanity/ui'\nimport {TimelineItem} from './timelineItem'\nimport {ListWrapper, Root, StackWrapper} from './timeline.styled'\nimport {Chunk, CommandList, CommandListRenderItemCallback} from 'sanity'\n\ninterface TimelineProps {\n  chunks: Chunk[]\n  disabledBeforeFirstChunk?: boolean\n  firstChunk?: Chunk | null\n  hasMoreChunks: boolean\n  lastChunk?: Chunk | null\n  onLoadMore: () => void\n  onSelect: (chunk: Chunk) => void\n}\n\nexport const Timeline = ({\n  chunks,\n  disabledBeforeFirstChunk,\n  hasMoreChunks,\n  lastChunk,\n  onLoadMore,\n  onSelect,\n  firstChunk,\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n\n  const filteredChunks = useMemo(() => {\n    return chunks.filter((c) => {\n      if (disabledBeforeFirstChunk && firstChunk) {\n        return c.index < firstChunk.index\n      }\n      return true\n    })\n  }, [chunks, disabledBeforeFirstChunk, firstChunk])\n\n  const selectedIndex = useMemo(\n    () => (lastChunk?.id ? filteredChunks.findIndex((c) => c.id === lastChunk.id) : -1),\n    [lastChunk?.id, filteredChunks]\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<Chunk>>(\n    (chunk, {activeIndex}) => {\n      const isFirst = activeIndex === 0\n      const isLast = (filteredChunks && activeIndex === filteredChunks.length - 1) || false\n      return (\n        <Box paddingBottom={isLast ? 1 : 0} paddingTop={isFirst ? 1 : 0} paddingX={1}>\n          <TimelineItem\n            chunk={chunk}\n            isFirst={isFirst}\n            isLast={isLast}\n            isLatest={activeIndex === 0 && !disabledBeforeFirstChunk}\n            isSelected={activeIndex === selectedIndex}\n            onSelect={onSelect}\n            timestamp={chunk.endTimestamp}\n            type={chunk.type}\n          />\n          {activeIndex === filteredChunks.length - 1 && hasMoreChunks && (\n            <Flex align=\"center\" justify=\"center\" padding={4}>\n              <Spinner muted />\n            </Flex>\n          )}\n        </Box>\n      )\n    },\n    [disabledBeforeFirstChunk, filteredChunks, hasMoreChunks, onSelect, selectedIndex]\n  )\n\n  useEffect(() => setMounted(true), [])\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {filteredChunks.length === 0 && (\n        <StackWrapper padding={3} space={3}>\n          <Text size={1} weight=\"semibold\">\n            No document history\n          </Text>\n          <Text muted size={1}>\n            When changing the content of the document, the document versions will appear in this\n            menu.\n          </Text>\n        </StackWrapper>\n      )}\n\n      {filteredChunks.length > 0 && (\n        <ListWrapper direction=\"column\">\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel=\"Document revisions\"\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={40}\n            items={filteredChunks}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      )}\n    </Root>\n  )\n}\n\nTimeline.displayName = 'Timeline'\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Flex, Stack} from '@sanity/ui'\nimport React from 'react'\nimport {TextWithTone} from 'sanity'\n\nexport function TimelineError() {\n  return (\n    <Flex align=\"flex-start\" gap={3} padding={4}>\n      <TextWithTone tone=\"critical\">\n        <ErrorOutlineIcon />\n      </TextWithTone>\n      <Stack space={4}>\n        <TextWithTone size={1} tone=\"critical\" weight=\"semibold\">\n          An error occurred whilst retrieving document changes.\n        </TextWithTone>\n        <TextWithTone size={1} tone=\"critical\">\n          Document history transactions have not been affected.\n        </TextWithTone>\n      </Stack>\n    </Flex>\n  )\n}\n","import {SelectIcon} from '@sanity/icons'\nimport {Button, Placement, Popover, useClickOutside, useGlobalKeyDown, useToast} from '@sanity/ui'\nimport {format} from 'date-fns'\nimport {upperFirst} from 'lodash'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport styled from 'styled-components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {TimelineError} from './TimelineError'\nimport {formatTimelineEventLabel} from './helpers'\nimport {Timeline} from './timeline'\nimport {Chunk, useTimelineSelector} from 'sanity'\n\ninterface TimelineMenuProps {\n  chunk: Chunk | null\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport function TimelineMenu({chunk, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange, setTimelineMode, timelineError, ready, timelineStore} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popover, setPopover] = useState<HTMLElement | null>(null)\n  const toast = useToast()\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n\n  const handleOpen = useCallback(() => {\n    setTimelineMode(mode)\n    setOpen(true)\n  }, [mode, setTimelineMode])\n\n  const handleClose = useCallback(() => {\n    setTimelineMode('closed')\n    setOpen(false)\n  }, [setTimelineMode])\n\n  const handleClickOutside = useCallback(() => {\n    if (open) {\n      handleClose()\n    }\n  }, [handleClose, open])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (open && (event.key === 'Escape' || event.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open]\n  )\n\n  useClickOutside(handleClickOutside, [button, popover])\n  useGlobalKeyDown(handleGlobalKeyDown)\n\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore.findRangeForRev(revChunk)\n        setTimelineMode('closed')\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: 'Unable to load revision',\n        })\n      }\n    },\n    [setTimelineMode, setTimelineRange, timelineStore, toast]\n  )\n\n  const selectSince = useCallback(\n    (sinceChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore.findRangeForSince(sinceChunk)\n        setTimelineMode('closed')\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: 'Unable to load revision',\n        })\n      }\n    },\n    [setTimelineMode, setTimelineRange, timelineStore, toast]\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading) {\n      timelineStore.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  const content = timelineError ? (\n    <TimelineError />\n  ) : (\n    <>\n      {mode === 'rev' && (\n        <Timeline\n          chunks={chunks}\n          firstChunk={realRevChunk}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={realRevChunk}\n          onLoadMore={handleLoadMore}\n          onSelect={selectRev}\n        />\n      )}\n      {mode === 'since' && (\n        <Timeline\n          chunks={chunks}\n          disabledBeforeFirstChunk\n          firstChunk={realRevChunk}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={sinceTime}\n          onLoadMore={handleLoadMore}\n          onSelect={selectSince}\n        />\n      )}\n    </>\n  )\n\n  const timeLabel = useFormattedTimestamp(chunk?.endTimestamp || '')\n\n  const revLabel = chunk\n    ? `${upperFirst(formatTimelineEventLabel(chunk.type))}: ${timeLabel}`\n    : 'Latest version'\n\n  const sinceLabel = chunk ? `Since: ${timeLabel}` : 'Since: unknown version'\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n\n  return (\n    <Root\n      constrainSize\n      content={open && content}\n      data-ui=\"versionMenu\"\n      open={open}\n      placement={placement}\n      portal\n      ref={setPopover}\n    >\n      <Button\n        disabled={!ready}\n        mode=\"bleed\"\n        fontSize={1}\n        padding={2}\n        iconRight={SelectIcon}\n        onClick={open ? handleClose : handleOpen}\n        ref={setButton}\n        selected={open}\n        style={{maxWidth: '100%'}}\n        text={ready ? buttonLabel : 'Loading history'}\n      />\n    </Root>\n  )\n}\n\nexport function useFormattedTimestamp(time: string): string {\n  const formatted = useMemo(() => {\n    const parsedDate = time ? new Date(time) : new Date()\n    const formattedDate = format(parsedDate, 'MMM d, yyyy, hh:mm a')\n    return formattedDate\n  }, [time])\n\n  return formatted\n}\n","import React from 'react'\nimport {Box, Flex, Spinner, Text} from '@sanity/ui'\nimport {Delay} from '../../../../components'\n\nexport function LoadingContent() {\n  return (\n    <Delay ms={300}>\n      <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\" paddingTop={3}>\n        <Spinner muted />\n        <Box marginTop={3}>\n          <Text align=\"center\" muted size={1}>\n            Loading changes\n          </Text>\n        </Box>\n      </Flex>\n    </Delay>\n  )\n}\n","import {AnnotationDetails, visitDiff, Diff} from 'sanity'\n\nexport function collectLatestAuthorAnnotations(diff: Diff): AnnotationDetails[] {\n  const authorMap = new Map<string, AnnotationDetails>()\n  visitDiff(diff, (child) => {\n    if (child.action === 'unchanged' || !('annotation' in child) || !child.annotation) {\n      return true\n    }\n\n    const {author, timestamp} = child.annotation\n    const previous = authorMap.get(author)\n    if (!previous || previous.timestamp < timestamp) {\n      authorMap.set(author, child.annotation)\n    }\n\n    return true\n  })\n\n  return Array.from(authorMap.values()).sort((a, b) => (a.timestamp < b.timestamp ? 1 : -1))\n}\n","import {ObjectDiff} from '@sanity/diff'\nimport {AvatarStack, BoundaryElementProvider, Box, Card, Flex} from '@sanity/ui'\nimport React, {ReactElement, useRef} from 'react'\nimport styled from 'styled-components'\nimport {TimelineMenu} from '../../timeline'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentInspectorHeader} from '../../documentInspector'\nimport {LoadingContent} from './LoadingContent'\nimport {collectLatestAuthorAnnotations} from './helpers'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  DiffTooltip,\n  DocumentChangeContext,\n  DocumentChangeContextInstance,\n  DocumentInspectorProps,\n  NoChanges,\n  ObjectSchemaType,\n  ScrollContainer,\n  UserAvatar,\n  useTimelineSelector,\n} from 'sanity'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function ChangesInspector(props: DocumentInspectorProps): ReactElement {\n  const {onClose} = props\n  const {documentId, schemaType, timelineError, timelineStore, value} = useDocumentPane()\n  const scrollRef = useRef<HTMLDivElement | null>(null)\n\n  // Subscribe to external timeline state changes\n  const diff = useTimelineSelector(timelineStore, (state) => state.diff)\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const selectionState = useTimelineSelector(timelineStore, (state) => state.selectionState)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n  const loading = selectionState === 'loading'\n  const isComparingCurrent = !onOlderRevision\n\n  const documentContext: DocumentChangeContextInstance = React.useMemo(\n    () => ({\n      documentId,\n      schemaType,\n      FieldWrapper: ChangeFieldWrapper,\n      rootDiff: diff,\n      isComparingCurrent,\n      value,\n    }),\n    [documentId, diff, isComparingCurrent, schemaType, value]\n  )\n\n  const changeAnnotations = React.useMemo(\n    () => (diff ? collectLatestAuthorAnnotations(diff) : []),\n    [diff]\n  )\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <DocumentInspectorHeader\n        as=\"header\"\n        closeButtonLabel=\"Close review changes\"\n        flex=\"none\"\n        onClose={onClose}\n        title=\"Review changes\"\n      >\n        <Flex gap={1} padding={3} paddingTop={0} paddingBottom={2}>\n          <Box flex={1}>\n            <TimelineMenu mode=\"since\" chunk={sinceTime} placement=\"bottom-start\" />\n          </Box>\n\n          <Box flex=\"none\">\n            <DiffTooltip annotations={changeAnnotations} description=\"Changes by\" portal>\n              <AvatarStack maxLength={4} aria-label=\"Changes by\">\n                {changeAnnotations.map(({author}) => (\n                  <UserAvatar key={author} user={author} />\n                ))}\n              </AvatarStack>\n            </DiffTooltip>\n          </Box>\n        </Flex>\n      </DocumentInspectorHeader>\n\n      <Card flex={1}>\n        <BoundaryElementProvider element={scrollRef.current}>\n          <Scroller data-ui=\"Scroller\" ref={scrollRef}>\n            <Box flex={1} padding={4}>\n              <Content\n                diff={diff}\n                documentContext={documentContext}\n                error={timelineError}\n                loading={loading}\n                schemaType={schemaType}\n              />\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  diff,\n  documentContext,\n  loading,\n  schemaType,\n}: {\n  error?: Error | null\n  diff: ObjectDiff<any> | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n}) {\n  if (error) {\n    return <NoChanges />\n  }\n\n  if (loading) {\n    return <LoadingContent />\n  }\n\n  if (!diff) {\n    return <NoChanges />\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <ChangeList diff={diff} schemaType={schemaType} />\n    </DocumentChangeContext.Provider>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {useDeskTool} from '../../../../useDeskTool'\nimport {ChangesInspector} from './ChangesInspector'\nimport {DocumentInspector} from 'sanity'\n\nexport const changesInspector: DocumentInspector = {\n  name: HISTORY_INSPECTOR_NAME,\n  useMenuItem: () => {\n    const {features} = useDeskTool()\n\n    return {\n      hidden: !features.reviewChanges,\n      icon: RestoreIcon,\n      title: 'Review changes',\n    }\n  },\n  component: ChangesInspector,\n  onClose: ({params}) => ({params: {...params, since: undefined}}),\n  onOpen: ({params}) => ({params: {...params, since: '@lastPublished'}}),\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {lazy} from 'react'\nimport {\n  DeleteAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  HistoryRestoreAction,\n  PublishAction,\n  UnpublishAction,\n} from './documentActions'\nimport {LiveEditBadge} from './documentBadges'\nimport {getIntentState} from './getIntentState'\nimport {router} from './router'\nimport {DeskToolOptions} from './types'\nimport {validationInspector} from './panes/document/inspectors/validation'\nimport {changesInspector} from './panes/document/inspectors/changes'\nimport {definePlugin} from 'sanity'\n\nconst documentActions = [\n  PublishAction,\n  UnpublishAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  DeleteAction,\n  HistoryRestoreAction,\n]\n\nconst documentBadges = [LiveEditBadge]\n\n/**\n * The deskTool is a studio plugin which adds the “desk tool” – a tool within Sanity Studio in which\n * content editors can drill down to specific documents to edit them.\n * You can configure your Studio's desk tool(s).\n *\n * @public\n * @param options - Options for the desk tool. See {@link DeskToolOptions}\n * @example Minimal example\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { deskTool } from 'sanity/desk'\n *\n * export default defineConfig((\n *  // ...\n *  plugins: [\n *    deskTool() // use defaults\n *  ]\n * })\n * ```\n *\n * @example To customise your desk tool\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { deskTool } from 'sanity/desk'\n * import { FaCar } from 'react-icons'\n\n * export default defineConfig((\n *\t // ...\n *   plugins: [\n *    deskTool({\n *      name: 'cars',\n *      title: 'Cars',\n *      icon: FaCar,\n *      structure: (S) => S.documentTypeList('car'),\n *      defaultDocumentNode: (S) =>\n *        S.document().views([\n *          S.view.form(),\n *          S.view.component(Preview).title('Preview')\n *        ])\n *    })\n *  ]\n * })\n * ```\n * */\nexport const deskTool = definePlugin<DeskToolOptions | void>((options) => ({\n  name: '@sanity/desk-tool',\n  document: {\n    actions: (prevActions) => {\n      // NOTE: since it's possible to have several desk tools in one Studio,\n      // we need to check whether the document actions already exist in the Studio config\n      const actions = prevActions.slice(0)\n      for (const action of documentActions) {\n        if (!actions.includes(action)) actions.push(action)\n      }\n      return actions\n    },\n    badges: (prevBadges) => {\n      // NOTE: since it's possible to have several desk tools in one Studio,\n      // we need to check whether the document badges already exist in the Studio config\n      const badges = prevBadges.slice(0)\n      for (const badge of documentBadges) {\n        if (!badges.includes(badge)) badges.push(badge)\n      }\n      return badges\n    },\n    inspectors: [validationInspector, changesInspector],\n  },\n  tools: [\n    {\n      name: options?.name || 'desk',\n      title: options?.title || 'Desk',\n      icon: options?.icon || MasterDetailIcon,\n      component: lazy(() => import('./components/deskTool')),\n      canHandleIntent: (intent, params) => {\n        return Boolean(\n          (intent === 'edit' && params.id) ||\n            (intent === 'create' && params.type) ||\n            (intent === 'create' && params.template)\n        )\n      },\n      getIntentState,\n      options,\n      router,\n    },\n  ],\n}))\n","import {BinaryDocumentIcon, EarthAmericasIcon} from '@sanity/icons'\nimport {DeskToolFeatures, PaneMenuItem} from '../../types'\nimport {INSPECT_ACTION_PREFIX} from './constants'\nimport {DocumentInspector, DocumentInspectorMenuItem, ValidationMarker} from 'sanity'\n\ninterface GetMenuItemsParams {\n  currentInspector?: DocumentInspector\n  features: DeskToolFeatures\n  hasValue: boolean\n  inspectors: DocumentInspector[]\n  previewUrl?: string | null\n  inspectorMenuItems: DocumentInspectorMenuItem[]\n}\n\nfunction getInspectorItems({\n  currentInspector,\n  hasValue,\n  inspectors,\n  inspectorMenuItems,\n}: GetMenuItemsParams): PaneMenuItem[] {\n  return inspectors\n    .map((inspector, index) => {\n      const menuItem = inspectorMenuItems[index]\n\n      if (!menuItem || menuItem.hidden) return null\n\n      return {\n        action: `${INSPECT_ACTION_PREFIX}${inspector.name}`,\n        group: menuItem.showAsAction ? undefined : 'inspectors',\n        icon: menuItem.icon,\n        isDisabled: !hasValue,\n        selected: currentInspector?.name === inspector.name,\n        shortcut: menuItem.hotkeys?.join('+'),\n        showAsAction: menuItem.showAsAction,\n        title: menuItem.title,\n        tone: menuItem.tone,\n      }\n    })\n    .filter(Boolean) as PaneMenuItem[]\n}\n\nfunction getInspectItem({hasValue}: GetMenuItemsParams): PaneMenuItem {\n  return {\n    action: 'inspect',\n    group: 'inspectors',\n    title: 'Inspect',\n    icon: BinaryDocumentIcon,\n    isDisabled: !hasValue,\n    shortcut: 'Ctrl+Alt+I',\n  }\n}\n\nexport function getProductionPreviewItem({previewUrl}: GetMenuItemsParams): PaneMenuItem | null {\n  if (!previewUrl) return null\n\n  return {\n    action: 'production-preview',\n    group: 'links',\n    title: 'Open preview',\n    icon: EarthAmericasIcon,\n    shortcut: 'Ctrl+Alt+O',\n  }\n}\n\nexport function getMenuItems(params: GetMenuItemsParams): PaneMenuItem[] {\n  const inspectorItems = getInspectorItems(params)\n  const items = [\n    // Get production preview item\n    getProductionPreviewItem(params),\n  ].filter(Boolean) as PaneMenuItem[]\n\n  return [\n    ...inspectorItems,\n\n    // TODO: convert to inspector or document view?\n    getInspectItem(params),\n\n    ...items,\n  ]\n}\n","import {useEffect, useState} from 'react'\nimport {SanityDocument} from '@sanity/types'\nimport {useAsObservable} from 'react-rx'\nimport {debounceTime, switchMap, catchError} from 'rxjs/operators'\nimport {from, of} from 'rxjs'\nimport {useSource, isRecord} from 'sanity'\n\nconst isSanityDocument = (value: unknown): value is SanityDocument =>\n  isRecord(value) && typeof value._id === 'string' && typeof value._type === 'string'\n\nexport function usePreviewUrl(value: Partial<SanityDocument> | undefined): string | undefined {\n  const [previewUrl, setPreviewUrl] = useState<string | undefined>(undefined)\n  const [error, setError] = useState<unknown>(null)\n  const {resolveProductionUrl} = useSource().document\n  // @todo refactor out of useAsObservable, and instead use `of() + useMemoObservable` like we did for `useLoadableFromCreateLoadable`\n  const value$ = useAsObservable(value)\n\n  if (error) throw error\n\n  useEffect(() => {\n    value$\n      .pipe(\n        // this so that the preview URL isn't fetched on every keystroke\n        debounceTime(500),\n        switchMap((document) =>\n          isSanityDocument(document) ? from(resolveProductionUrl({document})) : of(undefined)\n        ),\n        catchError((e) => {\n          const message = isRecord(e) && typeof e.message === 'string' ? e.message : 'Unknown error'\n          throw new Error(`An error was thrown while trying to get your preview url: ${message}`)\n        })\n      )\n      .subscribe({\n        next: setPreviewUrl,\n        error: setError,\n      })\n  }, [resolveProductionUrl, value$])\n\n  return previewUrl\n}\n","import {Template} from 'sanity'\n\ninterface InitialValueOptions {\n  documentType: string\n  panePayload?: unknown\n  templateName?: string\n  templateParams?: Record<string, unknown>\n  urlTemplate?: string\n}\n\n/**\n * @internal\n */\nexport function getInitialValueTemplateOpts(\n  templates: Template[],\n  opts: InitialValueOptions\n): {templateName: string; templateParams: Record<string, unknown>} {\n  const payload = opts.panePayload || {}\n  const structureNodeTemplate = opts.templateName\n\n  if (opts.urlTemplate && structureNodeTemplate && structureNodeTemplate !== opts.urlTemplate) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Conflicting templates: URL says \"${opts.urlTemplate}\", structure node says \"${structureNodeTemplate}\". Using \"${structureNodeTemplate}\".`\n    )\n  }\n\n  const template = structureNodeTemplate || opts.urlTemplate\n  const typeTemplates = templates.filter((t) => t.schemaType === opts.documentType)\n\n  const templateParams = {\n    ...opts.templateParams,\n    ...(typeof payload === 'object' ? payload || {} : {}),\n  }\n\n  let templateName = template\n\n  // If we have not specified a specific template, and we only have a single\n  // template available for a schema type, use it\n  if (!template && typeTemplates.length === 1) {\n    templateName = typeTemplates[0].id\n  }\n\n  return {templateName: templateName!, templateParams}\n}\n","import React, {memo, useCallback, useEffect, useRef, useState} from 'react'\nimport {DocumentInspector, DocumentInspectorMenuItem, useUnique} from 'sanity'\n\ninterface InspectorMenuItemProps {\n  documentId: string\n  documentType: string\n  index: number\n  setMenuItem: (index: number, node: DocumentInspectorMenuItem) => void\n  useMenuItem: NonNullable<DocumentInspector['useMenuItem']>\n}\n\nconst InspectorMenuItem = memo(function InspectorMenuItem(props: InspectorMenuItemProps) {\n  const {documentId, documentType, index, setMenuItem, useMenuItem} = props\n\n  const node = useUnique(\n    useMenuItem({\n      documentId,\n      documentType,\n    })\n  )\n\n  useEffect(() => {\n    setMenuItem(index, node)\n  }, [index, node, setMenuItem])\n\n  return <></>\n})\n\ninterface DocumentInspectorMenuItemsResolverProps {\n  documentId: string\n  documentType: string\n  inspectors: DocumentInspector[]\n  onMenuItems: (items: DocumentInspectorMenuItem[]) => void\n}\n\n// The menu item in a document inspector are resolved in a React hook (`useMenuItem`).\n// This means that the menu item needs to be resolved in a React component (in accordance with the rules of hooks).\n// In this component, we map over the configured inspectors and render a `InspectorMenuItem` for each.\n// The `InspectorMenuItem` will resolve the menu item in a React hook and call the `setMenuItem` callback\n// with the resolved menu item and the index of the inspector.\n// Finally, we call the `onMenuItems` callback with the resolved menu items.\nexport function DocumentInspectorMenuItemsResolver(props: DocumentInspectorMenuItemsResolverProps) {\n  const {documentId, documentType, inspectors, onMenuItems} = props\n\n  const len = inspectors.length\n  const lenRef = useRef(len)\n\n  const [menuItems, setMenuItems] = useState<DocumentInspectorMenuItem[]>(() =>\n    Array.from(new Array(len))\n  )\n\n  const menuItemsRef = useRef(menuItems)\n\n  useEffect(() => {\n    if (lenRef.current !== len) {\n      const newFieldActions = Array.from(new Array(len))\n\n      for (let i = 0; i < len; i++) {\n        newFieldActions[i] = menuItemsRef.current[i]\n      }\n\n      lenRef.current = len\n\n      setMenuItems(() => {\n        menuItemsRef.current = newFieldActions\n        return newFieldActions\n      })\n    }\n  }, [len])\n\n  const setMenuItem = useCallback((index: number, node: DocumentInspectorMenuItem) => {\n    setMenuItems((prev) => {\n      const next = [...prev]\n      next[index] = node\n      menuItemsRef.current = next\n      return next\n    })\n  }, [])\n\n  useEffect(() => {\n    onMenuItems(menuItems.filter(Boolean))\n  }, [menuItems, onMenuItems])\n\n  return (\n    <>\n      {inspectors.map(\n        (inspector, inspectorIndex) =>\n          inspector.useMenuItem && (\n            <InspectorMenuItem\n              documentId={documentId}\n              documentType={documentType}\n              index={inspectorIndex}\n              key={inspector.name}\n              setMenuItem={setMenuItem}\n              useMenuItem={inspector.useMenuItem}\n            />\n          )\n      )}\n    </>\n  )\n}\n","import React, {memo, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {ObjectSchemaType, Path, SanityDocument, SanityDocumentLike} from '@sanity/types'\nimport {omit, set} from 'lodash'\nimport {useToast} from '@sanity/ui'\nimport {fromString as pathFromString, resolveKeyedPath} from '@sanity/util/paths'\nimport isHotkey from 'is-hotkey'\nimport {isActionEnabled} from '@sanity/schema/_internal'\nimport {usePaneRouter} from '../../components'\nimport {PaneMenuItem} from '../../types'\nimport {useDeskTool} from '../../useDeskTool'\nimport {DocumentPaneContext, DocumentPaneContextValue} from './DocumentPaneContext'\nimport {getMenuItems} from './menuItems'\nimport {DocumentPaneProviderProps} from './types'\nimport {usePreviewUrl} from './usePreviewUrl'\nimport {getInitialValueTemplateOpts} from './getInitialValueTemplateOpts'\nimport {\n  DEFAULT_MENU_ITEM_GROUPS,\n  EMPTY_PARAMS,\n  HISTORY_INSPECTOR_NAME,\n  INSPECT_ACTION_PREFIX,\n} from './constants'\nimport {DocumentInspectorMenuItemsResolver} from './DocumentInspectorMenuItemsResolver'\nimport {\n  DocumentInspector,\n  DocumentPresence,\n  PatchEvent,\n  StateTree,\n  toMutationPatches,\n  getExpandOperations,\n  getPublishedId,\n  setAtPath,\n  useConnectionState,\n  useDocumentOperation,\n  useEditState,\n  useFormState,\n  useInitialValue,\n  usePresenceStore,\n  useSchema,\n  useSource,\n  useTemplates,\n  useUnique,\n  useValidationStatus,\n  getDraftId,\n  useDocumentValuePermissions,\n  useTimelineStore,\n  useTimelineSelector,\n  DocumentFieldAction,\n  DocumentInspectorMenuItem,\n  FieldActionsResolver,\n  EMPTY_ARRAY,\n  DocumentFieldActionNode,\n  FieldActionsProvider,\n} from 'sanity'\n\n/**\n * @internal\n */\n// eslint-disable-next-line complexity, max-statements\nexport const DocumentPaneProvider = memo((props: DocumentPaneProviderProps) => {\n  const {children, index, pane, paneKey} = props\n  const schema = useSchema()\n  const templates = useTemplates()\n  const {\n    actions: documentActions,\n    badges: documentBadges,\n    unstable_fieldActions: fieldActionsResolver,\n    unstable_languageFilter: languageFilterResolver,\n    inspectors: inspectorsResolver,\n  } = useSource().document\n  const presenceStore = usePresenceStore()\n  const paneRouter = usePaneRouter()\n  const setPaneParams = paneRouter.setParams\n  const {features} = useDeskTool()\n  const {push: pushToast} = useToast()\n  const {\n    options,\n    menuItemGroups = DEFAULT_MENU_ITEM_GROUPS,\n    title = null,\n    views: viewsProp = [],\n  } = pane\n  const paneOptions = useUnique(options)\n  const documentIdRaw = paneOptions.id\n  const documentId = getPublishedId(documentIdRaw)\n  const documentType = options.type\n  const params = useUnique(paneRouter.params) || EMPTY_PARAMS\n  const panePayload = useUnique(paneRouter.payload)\n  const {templateName, templateParams} = useMemo(\n    () =>\n      getInitialValueTemplateOpts(templates, {\n        documentType,\n        templateName: paneOptions.template,\n        templateParams: paneOptions.templateParameters,\n        panePayload,\n        urlTemplate: params.template,\n      }),\n    [documentType, paneOptions, params, panePayload, templates]\n  )\n  const initialValueRaw = useInitialValue({\n    documentId,\n    documentType,\n    templateName,\n    templateParams,\n  })\n  const initialValue = useUnique(initialValueRaw)\n  const {patch} = useDocumentOperation(documentId, documentType)\n  const editState = useEditState(documentId, documentType)\n  const {validation: validationRaw} = useValidationStatus(documentId, documentType)\n  const connectionState = useConnectionState(documentId, documentType)\n  const schemaType = schema.get(documentType) as ObjectSchemaType | undefined\n  const value: SanityDocumentLike = editState?.draft || editState?.published || initialValue.value\n\n  const [inspectorMenuItems, setInspectorMenuItems] = useState<DocumentInspectorMenuItem[]>([])\n\n  // Resolve document actions\n  const actions = useMemo(\n    () => documentActions({schemaType: documentType, documentId}),\n    [documentActions, documentId, documentType]\n  )\n\n  // Resolve document badges\n  const badges = useMemo(\n    () => documentBadges({schemaType: documentType, documentId}),\n    [documentBadges, documentId, documentType]\n  )\n\n  // Resolve document language filter\n  const languageFilter = useMemo(\n    () => languageFilterResolver({schemaType: documentType, documentId}),\n    [documentId, documentType, languageFilterResolver]\n  )\n\n  const validation = useUnique(validationRaw)\n  const views = useUnique(viewsProp)\n\n  const [focusPath, setFocusPath] = useState<Path>(() =>\n    params.path ? pathFromString(params.path) : []\n  )\n  const activeViewId = params.view || (views[0] && views[0].id) || null\n  const [timelineMode, setTimelineMode] = useState<'since' | 'rev' | 'closed'>('closed')\n\n  const [timelineError, setTimelineError] = useState<Error | null>(null)\n  /**\n   * Create an intermediate store which handles document Timeline + TimelineController\n   * creation, and also fetches pre-requsite document snapshots. Compatible with `useSyncExternalStore`\n   * and made available to child components via DocumentPaneContext.\n   */\n  const timelineStore = useTimelineStore({\n    documentId,\n    documentType,\n    onError: setTimelineError,\n    rev: params.rev,\n    since: params.since,\n  })\n\n  // Subscribe to external timeline state changes\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const revTime = useTimelineSelector(timelineStore, (state) => state.revTime)\n  const sinceAttributes = useTimelineSelector(timelineStore, (state) => state.sinceAttributes)\n  const timelineDisplayed = useTimelineSelector(timelineStore, (state) => state.timelineDisplayed)\n  const timelineReady = useTimelineSelector(timelineStore, (state) => state.timelineReady)\n\n  // TODO: this may cause a lot of churn. May be a good idea to prevent these\n  // requests unless the menu is open somehow\n  const previewUrl = usePreviewUrl(value)\n\n  const [presence, setPresence] = useState<DocumentPresence[]>([])\n  useEffect(() => {\n    const subscription = presenceStore.documentPresence(documentId).subscribe((nextPresence) => {\n      setPresence(nextPresence)\n    })\n    return () => {\n      subscription.unsubscribe()\n    }\n  }, [documentId, presenceStore])\n\n  const inspectors: DocumentInspector[] = useMemo(\n    () => inspectorsResolver({documentId, documentType}),\n    [documentId, documentType, inspectorsResolver]\n  )\n\n  const [inspectorName, setInspectorName] = useState<string | null>(() => params.inspect || null)\n\n  // Handle inspector name changes from URL\n  const inspectParamRef = useRef<string | undefined>(params.inspect)\n  useEffect(() => {\n    if (inspectParamRef.current !== params.inspect) {\n      inspectParamRef.current = params.inspect\n      setInspectorName(params.inspect || null)\n    }\n  }, [params.inspect])\n\n  const currentInspector = inspectors?.find((i) => i.name === inspectorName)\n  const resolvedChangesInspector = inspectors.find((i) => i.name === HISTORY_INSPECTOR_NAME)\n\n  const changesOpen = currentInspector?.name === HISTORY_INSPECTOR_NAME\n\n  const hasValue = Boolean(value)\n  const menuItems = useMemo(\n    () =>\n      getMenuItems({\n        currentInspector,\n        features,\n        hasValue,\n        inspectorMenuItems,\n        inspectors,\n        previewUrl,\n      }),\n    [currentInspector, features, hasValue, inspectorMenuItems, inspectors, previewUrl]\n  )\n  const inspectOpen = params.inspect === 'on'\n  const compareValue: Partial<SanityDocument> | null = changesOpen\n    ? sinceAttributes\n    : editState?.published || null\n\n  const fieldActions: DocumentFieldAction[] = useMemo(\n    () => (schemaType ? fieldActionsResolver({documentId, documentType, schemaType}) : []),\n    [documentId, documentType, fieldActionsResolver, schemaType]\n  )\n\n  /**\n   * Note that in addition to connection and edit state, we also wait for a valid document timeline\n   * range to be loaded. This means if we're loading an older revision, the full transaction range must\n   * be loaded in full prior to the document being displayed.\n   *\n   * Previously, visiting studio URLs with timeline params would display the 'current' document and then\n   * 'snap' in the older revision, which was disorienting and could happen mid-edit.\n   *\n   * In the event that the timeline cannot be loaded due to TimelineController errors or blocked requests,\n   * we skip this readiness check to ensure that users aren't locked out of editing. Trying to select\n   * a timeline revision in this instance will display an error localized to the popover itself.\n   */\n  const ready =\n    connectionState === 'connected' && editState.ready && (timelineReady || !!timelineError)\n\n  const displayed: Partial<SanityDocument> | undefined = useMemo(\n    () => (onOlderRevision ? timelineDisplayed || {_id: value._id, _type: value._type} : value),\n    [onOlderRevision, timelineDisplayed, value]\n  )\n\n  const setTimelineRange = useCallback(\n    (newSince: string, newRev: string | null) => {\n      setPaneParams({\n        ...params,\n        since: newSince,\n        rev: newRev || undefined,\n      })\n    },\n    [params, setPaneParams]\n  )\n\n  const handleFocus = useCallback(\n    (nextFocusPath: Path) => {\n      setFocusPath(nextFocusPath)\n      presenceStore.setLocation([\n        {\n          type: 'document',\n          documentId,\n          path: nextFocusPath,\n          lastActiveAt: new Date().toISOString(),\n        },\n      ])\n    },\n    [documentId, presenceStore, setFocusPath]\n  )\n\n  const handleBlur = useCallback(\n    (blurredPath: Path) => {\n      setFocusPath([])\n      // note: we're deliberately not syncing presence here since it would make the user avatar disappear when a\n      // user clicks outside a field without focusing another one\n    },\n    [setFocusPath]\n  )\n\n  const patchRef = useRef<(event: PatchEvent) => void>(() => {\n    throw new Error('Nope')\n  })\n\n  patchRef.current = (event: PatchEvent) => {\n    patch.execute(toMutationPatches(event.patches), initialValue.value)\n  }\n\n  const handleChange = useCallback((event: PatchEvent) => patchRef.current(event), [])\n\n  const closeInspector = useCallback(\n    (closeInspectorName?: string) => {\n      // inspector?: DocumentInspector\n      const inspector = closeInspectorName && inspectors.find((i) => i.name === closeInspectorName)\n\n      if (closeInspectorName && !inspector) {\n        console.warn(`No inspector named \"${closeInspectorName}\"`)\n        return\n      }\n\n      if (!currentInspector) {\n        return\n      }\n\n      if (inspector) {\n        const result = inspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setPaneParams({...result.params, inspect: undefined})\n\n        return\n      }\n\n      if (currentInspector) {\n        const result = currentInspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setPaneParams({...result.params, inspect: undefined})\n      }\n    },\n    [currentInspector, inspectors, params, setPaneParams]\n  )\n\n  const openInspector = useCallback(\n    (nextInspectorName: string, paneParams?: Record<string, string>) => {\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (!nextInspector) {\n        console.warn(`No inspector named \"${nextInspectorName}\"`)\n        return\n      }\n\n      // if the inspector is already open, only update params\n      if (currentInspector?.name === nextInspector.name) {\n        setPaneParams({...params, ...paneParams, inspect: nextInspector.name})\n        return\n      }\n\n      let currentParams = params\n\n      if (currentInspector) {\n        const closeResult = nextInspector.onClose?.({params: currentParams}) ?? {\n          params: currentParams,\n        }\n\n        currentParams = closeResult.params\n      }\n\n      const result = nextInspector.onOpen?.({params: currentParams}) ?? {params: currentParams}\n\n      setInspectorName(nextInspector.name)\n      inspectParamRef.current = nextInspector.name\n\n      setPaneParams({...result.params, ...paneParams, inspect: nextInspector.name})\n    },\n    [currentInspector, inspectors, params, setPaneParams]\n  )\n\n  const handleHistoryClose = useCallback(() => {\n    if (resolvedChangesInspector) {\n      closeInspector(resolvedChangesInspector.name)\n    }\n  }, [closeInspector, resolvedChangesInspector])\n\n  const handleHistoryOpen = useCallback(() => {\n    if (!features.reviewChanges) {\n      return\n    }\n\n    if (resolvedChangesInspector) {\n      openInspector(resolvedChangesInspector.name)\n    }\n  }, [features.reviewChanges, openInspector, resolvedChangesInspector])\n\n  const handlePaneClose = useCallback(() => paneRouter.closeCurrent(), [paneRouter])\n\n  const handlePaneSplit = useCallback(() => paneRouter.duplicateCurrent(), [paneRouter])\n\n  const toggleLegacyInspect = useCallback(\n    (toggle = !inspectOpen) => {\n      if (toggle) {\n        setPaneParams({...params, inspect: 'on'})\n      } else {\n        setPaneParams(omit(params, 'inspect'))\n      }\n    },\n    [inspectOpen, params, setPaneParams]\n  )\n\n  const handleMenuAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (item.action === 'production-preview' && previewUrl) {\n        window.open(previewUrl)\n        return true\n      }\n\n      if (item.action === 'inspect') {\n        toggleLegacyInspect(true)\n        return true\n      }\n\n      if (item.action === 'reviewChanges') {\n        handleHistoryOpen()\n        return true\n      }\n\n      if (typeof item.action === 'string' && item.action.startsWith(INSPECT_ACTION_PREFIX)) {\n        const nextInspectorName = item.action.slice(INSPECT_ACTION_PREFIX.length)\n        const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n        if (nextInspector) {\n          if (nextInspector.name === inspectorName) {\n            closeInspector(nextInspector.name)\n          } else {\n            openInspector(nextInspector.name)\n          }\n          return true\n        }\n      }\n\n      return false\n    },\n    [\n      closeInspector,\n      handleHistoryOpen,\n      inspectorName,\n      inspectors,\n      openInspector,\n      previewUrl,\n      toggleLegacyInspect,\n    ]\n  )\n\n  const handleKeyUp = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      for (const item of menuItems) {\n        if (item.shortcut) {\n          if (isHotkey(item.shortcut, event)) {\n            event.preventDefault()\n            event.stopPropagation()\n            handleMenuAction(item)\n            return\n          }\n        }\n      }\n    },\n    [handleMenuAction, menuItems]\n  )\n\n  const handleLegacyInspectClose = useCallback(\n    () => toggleLegacyInspect(false),\n    [toggleLegacyInspect]\n  )\n\n  const [openPath, onSetOpenPath] = useState<Path>([])\n  const [fieldGroupState, onSetFieldGroupState] = useState<StateTree<string>>()\n  const [collapsedPaths, onSetCollapsedPath] = useState<StateTree<boolean>>()\n  const [collapsedFieldSets, onSetCollapsedFieldSets] = useState<StateTree<boolean>>()\n\n  const handleOnSetCollapsedPath = useCallback((path: Path, collapsed: boolean) => {\n    onSetCollapsedPath((prevState) => setAtPath(prevState, path, collapsed))\n  }, [])\n\n  const handleOnSetCollapsedFieldSet = useCallback((path: Path, collapsed: boolean) => {\n    onSetCollapsedFieldSets((prevState) => setAtPath(prevState, path, collapsed))\n  }, [])\n\n  const handleSetActiveFieldGroup = useCallback(\n    (path: Path, groupName: string) =>\n      onSetFieldGroupState((prevState) => setAtPath(prevState, path, groupName)),\n    []\n  )\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n  const liveEdit = Boolean(schemaType?.liveEdit)\n  const docId = value._id ? value._id : 'dummy-id'\n  const docPermissionsInput = useMemo(() => {\n    return {\n      ...value,\n      _id: liveEdit ? getPublishedId(docId) : getDraftId(docId),\n    }\n  }, [liveEdit, value, docId])\n\n  const [permissions, isPermissionsLoading] = useDocumentValuePermissions({\n    document: docPermissionsInput,\n    permission: requiredPermission,\n  })\n\n  const isNonExistent = !value?._id\n\n  const readOnly = useMemo(() => {\n    const hasNoPermission = !isPermissionsLoading && !permissions?.granted\n    const updateActionDisabled = !isActionEnabled(schemaType!, 'update')\n    const createActionDisabled = isNonExistent && !isActionEnabled(schemaType!, 'create')\n    const reconnecting = connectionState === 'reconnecting'\n    const isLocked = editState.transactionSyncLock?.enabled\n\n    return (\n      !ready ||\n      revTime !== null ||\n      hasNoPermission ||\n      updateActionDisabled ||\n      createActionDisabled ||\n      reconnecting ||\n      isLocked\n    )\n  }, [\n    connectionState,\n    isNonExistent,\n    isPermissionsLoading,\n    permissions?.granted,\n    ready,\n    revTime,\n    schemaType,\n    editState.transactionSyncLock,\n  ])\n\n  const formState = useFormState(schemaType!, {\n    value: displayed,\n    readOnly,\n    comparisonValue: compareValue,\n    focusPath,\n    openPath,\n    collapsedPaths,\n    presence,\n    validation,\n    collapsedFieldSets,\n    fieldGroupState,\n    changesOpen,\n  })\n\n  const formStateRef = useRef(formState)\n  formStateRef.current = formState\n\n  const setOpenPath = useCallback(\n    (path: Path) => {\n      const ops = getExpandOperations(formStateRef.current!, path)\n      ops.forEach((op) => {\n        if (op.type === 'expandPath') {\n          onSetCollapsedPath((prevState) => setAtPath(prevState, op.path, false))\n        }\n        if (op.type === 'expandFieldSet') {\n          onSetCollapsedFieldSets((prevState) => setAtPath(prevState, op.path, false))\n        }\n        if (op.type === 'setSelectedGroup') {\n          onSetFieldGroupState((prevState) => setAtPath(prevState, op.path, op.groupName))\n        }\n      })\n      onSetOpenPath(path)\n    },\n    [formStateRef]\n  )\n\n  const documentPane: DocumentPaneContextValue = {\n    actions,\n    activeViewId,\n    badges,\n    changesOpen,\n    closeInspector,\n    collapsedFieldSets,\n    collapsedPaths,\n    compareValue,\n    connectionState,\n    displayed,\n    documentId,\n    documentIdRaw,\n    documentType,\n    editState,\n    fieldActions,\n    focusPath,\n    inspector: currentInspector || null,\n    inspectors,\n    menuItems,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onFocus: handleFocus,\n    onPathOpen: setOpenPath,\n    onHistoryClose: handleHistoryClose,\n    onHistoryOpen: handleHistoryOpen,\n    onInspectClose: handleLegacyInspectClose,\n    onKeyUp: handleKeyUp,\n    onMenuAction: handleMenuAction,\n    onPaneClose: handlePaneClose,\n    onPaneSplit: handlePaneSplit,\n    onSetActiveFieldGroup: handleSetActiveFieldGroup,\n    onSetCollapsedPath: handleOnSetCollapsedPath,\n    onSetCollapsedFieldSet: handleOnSetCollapsedFieldSet,\n    openInspector,\n    index,\n    inspectOpen,\n    validation,\n    menuItemGroups: menuItemGroups || [],\n    paneKey,\n    previewUrl,\n    ready,\n    schemaType: schemaType!,\n    isPermissionsLoading,\n    permissions,\n    setTimelineMode,\n    setTimelineRange,\n    timelineError,\n    timelineMode,\n    timelineStore,\n    title,\n    value,\n    views,\n    formState,\n    unstable_languageFilter: languageFilter,\n  }\n\n  useEffect(() => {\n    if (connectionState === 'reconnecting') {\n      pushToast({\n        id: 'sanity/desk/reconnecting',\n        status: 'warning',\n        title: <>Connection lost. Reconnecting…</>,\n      })\n    }\n  }, [connectionState, pushToast])\n\n  // Reset `focusPath` when `documentId` or `params.path` changes\n  useEffect(() => {\n    if (ready && params.path) {\n      const {path, ...restParams} = params\n      const pathFromUrl = resolveKeyedPath(formStateRef.current?.value, pathFromString(path))\n      // Reset focus path when url params path changes\n      setFocusPath(pathFromUrl)\n      setOpenPath(pathFromUrl)\n      // remove the `path`-param from url after we have consumed it as the initial focus path\n      paneRouter.setParams(restParams)\n    }\n  }, [params, documentId, setOpenPath, ready, paneRouter])\n\n  const [rootFieldActionNodes, setRootFieldActionNodes] = useState<DocumentFieldActionNode[]>([])\n\n  return (\n    <DocumentPaneContext.Provider value={documentPane}>\n      {inspectors.length > 0 && (\n        <DocumentInspectorMenuItemsResolver\n          documentId={documentId}\n          documentType={documentType}\n          inspectors={inspectors}\n          onMenuItems={setInspectorMenuItems}\n        />\n      )}\n\n      {/* Resolve root-level field actions */}\n      {fieldActions.length > 0 && schemaType && (\n        <FieldActionsResolver\n          actions={fieldActions}\n          documentId={documentId}\n          documentType={documentType}\n          onActions={setRootFieldActionNodes}\n          path={EMPTY_ARRAY}\n          schemaType={schemaType}\n        />\n      )}\n\n      <FieldActionsProvider actions={rootFieldActionNodes} path={EMPTY_ARRAY}>\n        {children}\n      </FieldActionsProvider>\n    </DocumentPaneContext.Provider>\n  )\n})\n\nDocumentPaneProvider.displayName = 'DocumentPaneProvider'\n","import {SerializePath} from './StructureNodes'\n\n/** @internal */\nexport class SerializeError extends Error {\n  public readonly path: SerializePath\n  public helpId?: HELP_URL\n\n  constructor(\n    message: string,\n    parentPath: SerializePath,\n    pathSegment: string | number | undefined,\n    hint?: string\n  ) {\n    super(message)\n    const segment = typeof pathSegment === 'undefined' ? '<unknown>' : `${pathSegment}`\n    this.path = (parentPath || []).concat(hint ? `${segment} (${hint})` : segment)\n  }\n\n  withHelpUrl(id: HELP_URL): SerializeError {\n    this.helpId = id\n    return this\n  }\n}\n\n/** @internal */\nexport enum HELP_URL {\n  ID_REQUIRED = 'structure-node-id-required',\n  TITLE_REQUIRED = 'structure-title-required',\n  FILTER_REQUIRED = 'structure-filter-required',\n  INVALID_LIST_ITEM = 'structure-invalid-list-item',\n  COMPONENT_REQUIRED = 'structure-view-component-required',\n  DOCUMENT_ID_REQUIRED = 'structure-document-id-required',\n  DOCUMENT_TYPE_REQUIRED = 'structure-document-type-required',\n  SCHEMA_TYPE_REQUIRED = 'structure-schema-type-required',\n  SCHEMA_TYPE_NOT_FOUND = 'structure-schema-type-not-found',\n  LIST_ITEMS_MUST_BE_ARRAY = 'structure-list-items-must-be-array',\n  QUERY_PROVIDED_FOR_FILTER = 'structure-query-provided-for-filter',\n  ACTION_OR_INTENT_REQUIRED = 'structure-action-or-intent-required',\n  LIST_ITEM_IDS_MUST_BE_UNIQUE = 'structure-list-item-ids-must-be-unique',\n  ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE = 'structure-action-and-intent-mutually-exclusive',\n}\n","import {SchemaType, SortOrderingItem} from '@sanity/types'\n\nconst IMPLICIT_FIELDS = ['_id', '_type', '_createdAt', '_updatedAt', '_rev']\n\n// Takes a path array and a schema type and builds a GROQ join every time it enters a reference field\nfunction joinReferences(schemaType: SchemaType, path: string[]): string {\n  const [head, ...tail] = path\n\n  if (!('fields' in schemaType)) {\n    return ''\n  }\n\n  const schemaField = schemaType.fields.find((field) => field.name === head)\n  if (!schemaField) {\n    if (!IMPLICIT_FIELDS.includes(head)) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'The current ordering config targeted the nonexistent field \"%s\" on schema type \"%s\". It should be one of %o',\n        head,\n        schemaType.name,\n        schemaType.fields.map((field) => field.name)\n      )\n    }\n    return ''\n  }\n\n  if ('to' in schemaField.type && schemaField.type.name === 'reference') {\n    const refTypes = schemaField.type.to\n    return `${head}->{${refTypes.map((refType) => joinReferences(refType, tail)).join(',')}}`\n  }\n\n  const tailFields = tail.length > 0 && joinReferences(schemaField.type, tail)\n  const tailWrapper = tailFields ? `{${tailFields}}` : ''\n  return tail.length > 0 ? `${head}${tailWrapper}` : head\n}\n\nexport function getExtendedProjection(schemaType: SchemaType, orderBy: SortOrderingItem[]): string {\n  return orderBy.map((ordering) => joinReferences(schemaType, ordering.field.split('.'))).join(', ')\n}\n","import {SortOrdering} from '@sanity/types'\n\nexport const ORDER_BY_UPDATED_AT: SortOrdering = {\n  title: 'Last edited',\n  name: 'lastEditedDesc',\n  by: [{field: '_updatedAt', direction: 'desc'}],\n}\n\nexport const ORDER_BY_CREATED_AT: SortOrdering = {\n  title: 'Created',\n  name: 'lastCreatedDesc',\n  by: [{field: '_createdAt', direction: 'desc'}],\n}\n\nexport const DEFAULT_SELECTED_ORDERING_OPTION = ORDER_BY_UPDATED_AT\n\nexport const DEFAULT_ORDERING_OPTIONS: SortOrdering[] = [\n  ORDER_BY_UPDATED_AT, // _updatedAt\n  ORDER_BY_CREATED_AT, // _createdAt\n]\n","import {SchemaType, SortOrdering, SortOrderingItem} from '@sanity/types'\nimport {SortIcon} from '@sanity/icons'\nimport {getExtendedProjection} from './util/getExtendedProjection'\nimport {Intent} from './Intent'\nimport {DEFAULT_ORDERING_OPTIONS} from './Sort'\nimport {SerializeOptions, Serializable, SerializePath} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {StructureContext} from './types'\n\n/** @internal */\nexport function maybeSerializeMenuItem(\n  item: MenuItem | MenuItemBuilder,\n  index: number,\n  path: SerializePath\n): MenuItem {\n  return item instanceof MenuItemBuilder ? item.serialize({path, index}) : item\n}\n\n/**\n * Menu item action type\n * @public */\nexport type MenuItemActionType =\n  | string\n  | ((params: Record<string, string> | undefined, scope?: any) => void)\n\n/**\n * Menu items parameters\n *\n * @public */\nexport type MenuItemParamsType = Record<string, string | unknown | undefined>\n\n/**\n * Interface for menu items\n *\n * @public */\nexport interface MenuItem {\n  /** Menu Item title */\n  title: string\n  /** Menu Item action */\n  action?: MenuItemActionType\n  /** Menu Item intent */\n  intent?: Intent\n  /** Menu Item group */\n  group?: string\n  // TODO: align these with TemplateItem['icon']\n  /** Menu Item icon */\n  icon?: React.ComponentType | React.ReactNode\n  /** Menu Item parameters. See {@link MenuItemParamsType} */\n  params?: MenuItemParamsType\n  /** Determine if it will show the MenuItem as action */\n  showAsAction?: boolean\n}\n\n/**\n * Partial menu items\n * @public\n */\nexport type PartialMenuItem = Partial<MenuItem>\n\n/**\n * Class for building menu items.\n *\n * @public */\nexport class MenuItemBuilder implements Serializable<MenuItem> {\n  /** menu item option object. See {@link PartialMenuItem} */\n  protected spec: PartialMenuItem\n\n  constructor(\n    /**\n     * Desk structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: MenuItem\n  ) {\n    this.spec = spec ? spec : {}\n  }\n\n  /**\n   * Set menu item action\n   * @param action - menu item action. See {@link MenuItemActionType}\n   * @returns menu item builder based on action provided. See {@link MenuItemBuilder}\n   */\n  action(action: MenuItemActionType): MenuItemBuilder {\n    return this.clone({action})\n  }\n\n  /**\n   * Get menu item action\n   * @returns menu item builder action. See {@link PartialMenuItem}\n   */\n  getAction(): PartialMenuItem['action'] {\n    return this.spec.action\n  }\n\n  /**\n   * Set menu item intent\n   * @param intent - menu item intent. See {@link Intent}\n   * @returns menu item builder based on intent provided. See {@link MenuItemBuilder}\n   */\n  intent(intent: Intent): MenuItemBuilder {\n    return this.clone({intent})\n  }\n\n  /**\n   * Get menu item intent\n   * @returns menu item intent. See {@link PartialMenuItem}\n   */\n  getIntent(): PartialMenuItem['intent'] {\n    return this.spec.intent\n  }\n\n  /**\n   * Set menu item title\n   * @param title - menu item title\n   * @returns menu item builder based on title provided. See {@link MenuItemBuilder}\n   */\n  title(title: string): MenuItemBuilder {\n    return this.clone({title})\n  }\n\n  /**\n   * Get menu item title\n   * @returns menu item title\n   */\n  getTitle(): string | undefined {\n    return this.spec.title\n  }\n\n  /**\n   * Set menu item group\n   * @param group - menu item group\n   * @returns menu item builder based on group provided. See {@link MenuItemBuilder}\n   */\n  group(group: string): MenuItemBuilder {\n    return this.clone({group})\n  }\n\n  /**\n   * Get menu item group\n   * @returns menu item group. See {@link PartialMenuItem}\n   */\n  getGroup(): PartialMenuItem['group'] {\n    return this.spec.group\n  }\n\n  /**\n   * Set menu item icon\n   * @param icon - menu item icon\n   * @returns menu item builder based on icon provided. See {@link MenuItemBuilder}\n   */\n  icon(icon: React.ComponentType | React.ReactNode): MenuItemBuilder {\n    return this.clone({icon})\n  }\n\n  /**\n   * Get menu item icon\n   * @returns menu item icon. See {@link PartialMenuItem}\n   */\n  getIcon(): PartialMenuItem['icon'] {\n    return this.spec.icon\n  }\n\n  /**\n   * Set menu item parameters\n   * @param params - menu item parameters. See {@link MenuItemParamsType}\n   * @returns menu item builder based on parameters provided. See {@link MenuItemBuilder}\n   */\n  params(params: MenuItemParamsType): MenuItemBuilder {\n    return this.clone({params})\n  }\n\n  /**\n   * Get meny item parameters\n   * @returns menu item parameters. See {@link PartialMenuItem}\n   */\n  getParams(): PartialMenuItem['params'] {\n    return this.spec.params\n  }\n\n  /**\n   * Set menu item to show as action\n   * @param showAsAction - determine if menu item should show as action\n   * @returns menu item builder based on if it should show as action. See {@link MenuItemBuilder}\n   */\n  showAsAction(showAsAction = true): MenuItemBuilder {\n    return this.clone({showAsAction: Boolean(showAsAction)})\n  }\n\n  /**\n   * Check if menu item should show as action\n   * @returns true if menu item should show as action, false if not. See {@link PartialMenuItem}\n   */\n  getShowAsAction(): PartialMenuItem['showAsAction'] {\n    return this.spec.showAsAction\n  }\n\n  /** Serialize menu item builder\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns menu item node based on path provided in options. See {@link MenuItem}\n   */\n  serialize(options: SerializeOptions = {path: []}): MenuItem {\n    const {title, action, intent} = this.spec\n    if (!title) {\n      const hint = typeof action === 'string' ? `action: \"${action}\"` : undefined\n      throw new SerializeError(\n        '`title` is required for menu item',\n        options.path,\n        options.index,\n        hint\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    if (!action && !intent) {\n      throw new SerializeError(\n        `\\`action\\` or \\`intent\\` required for menu item with title ${this.spec.title}`,\n        options.path,\n        options.index,\n        `\"${title}\"`\n      ).withHelpUrl(HELP_URL.ACTION_OR_INTENT_REQUIRED)\n    }\n\n    if (intent && action) {\n      throw new SerializeError(\n        'cannot set both `action` AND `intent`',\n        options.path,\n        options.index,\n        `\"${title}\"`\n      ).withHelpUrl(HELP_URL.ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE)\n    }\n\n    return {...this.spec, title}\n  }\n\n  /** Clone menu item builder\n   * @param withSpec - menu item options. See {@link PartialMenuItem}\n   * @returns menu item builder based on context and spec provided. See {@link MenuItemBuilder}\n   */\n  clone(withSpec?: PartialMenuItem): MenuItemBuilder {\n    const builder = new MenuItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n\n/** @internal */\nexport interface SortMenuItem extends MenuItem {\n  params: {\n    by: SortOrderingItem[]\n  }\n}\n\n/** @internal */\nexport function getOrderingMenuItem(\n  context: StructureContext,\n  ordering: SortOrdering,\n  extendedProjection?: string\n): MenuItemBuilder {\n  return new MenuItemBuilder(context)\n    .group('sorting')\n    .title(`Sort by ${ordering.title}`)\n    .icon(SortIcon)\n    .action('setSortOrder')\n    .params({by: ordering.by, extendedProjection})\n}\n\n/** @internal */\nexport function getOrderingMenuItemsForSchemaType(\n  context: StructureContext,\n  typeName: SchemaType | string\n): MenuItemBuilder[] {\n  const {schema} = context\n  const type = typeof typeName === 'string' ? schema.get(typeName) : typeName\n  if (!type || !('orderings' in type)) {\n    return []\n  }\n\n  return (\n    type.orderings ? type.orderings.concat(DEFAULT_ORDERING_OPTIONS) : DEFAULT_ORDERING_OPTIONS\n  ).map((ordering: SortOrdering) =>\n    getOrderingMenuItem(context, ordering, getExtendedProjection(type, ordering.by))\n  )\n}\n","import {SerializeOptions, Serializable, SerializePath} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {StructureContext} from './types'\n\n/** @internal */\nexport function maybeSerializeMenuItemGroup(\n  item: MenuItemGroup | MenuItemGroupBuilder,\n  index: number,\n  path: SerializePath\n): MenuItemGroup {\n  return item instanceof MenuItemGroupBuilder ? item.serialize({path, index}) : item\n}\n\n/**\n * Interface for menu item groups\n * @public\n */\nexport interface MenuItemGroup {\n  /** Menu group Id */\n  id: string\n  /** Menu group title */\n  title: string\n}\n\n/**\n * Class for building menu item groups.\n *\n * @public\n */\nexport class MenuItemGroupBuilder implements Serializable<MenuItemGroup> {\n  /** Menu item group ID */\n  protected _id: string\n  /** Menu item group title */\n  protected _title: string\n\n  constructor(\n    /**\n     * Desk structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: MenuItemGroup\n  ) {\n    this._id = spec ? spec.id : ''\n    this._title = spec ? spec.title : ''\n  }\n\n  /**\n   * Set menu item group ID\n   * @param id - menu item group ID\n   * @returns menu item group builder based on ID provided. See {@link MenuItemGroupBuilder}\n   */\n  id(id: string): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {id, title: this._title})\n  }\n\n  /**\n   * Get menu item group ID\n   * @returns menu item group ID\n   */\n  getId(): string {\n    return this._id\n  }\n\n  /**\n   * Set menu item group title\n   * @param title - menu item group title\n   * @returns menu item group builder based on title provided. See {@link MenuItemGroupBuilder}\n   */\n  title(title: string): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {id: this._id, title})\n  }\n\n  /**\n   * Get menu item group title\n   * @returns menu item group title\n   */\n  getTitle(): string {\n    return this._title\n  }\n\n  /**\n   * Serialize menu item group builder\n   * @param options - serialization options (path). See {@link SerializeOptions}\n   * @returns menu item group based on path provided in options. See {@link MenuItemGroup}\n   */\n  serialize(options: SerializeOptions = {path: []}): MenuItemGroup {\n    const {_id, _title} = this\n    if (!_id) {\n      throw new SerializeError(\n        '`id` is required for a menu item group',\n        options.path,\n        options.index,\n        _title\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!_title) {\n      throw new SerializeError(\n        '`title` is required for a menu item group',\n        options.path,\n        _id\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    return {\n      id: _id,\n      title: _title,\n    }\n  }\n}\n","import {SerializeError} from '../SerializeError'\nimport {SerializePath} from '../StructureNodes'\n\nexport const disallowedPattern = /([^A-Za-z0-9-_.])/\n\nexport function validateId(\n  id: string,\n  parentPath: SerializePath,\n  pathSegment: string | number | undefined\n): string {\n  if (typeof id !== 'string') {\n    throw new SerializeError(\n      `Structure node id must be of type string, got ${typeof id}`,\n      parentPath,\n      pathSegment\n    )\n  }\n\n  const [disallowedChar] = id.match(disallowedPattern) || []\n  if (disallowedChar) {\n    throw new SerializeError(\n      `Structure node id cannot contain character \"${disallowedChar}\"`,\n      parentPath,\n      pathSegment\n    )\n  }\n\n  if (id.startsWith('__edit__')) {\n    throw new SerializeError(\n      `Structure node id cannot start with __edit__`,\n      parentPath,\n      pathSegment\n    )\n  }\n\n  return id\n}\n","import {camelCase} from 'lodash'\nimport getSlug from 'speakingurl'\nimport {disallowedPattern} from './validateId'\n\nexport function getStructureNodeId(title: string, id?: string): string {\n  if (id) {\n    return id\n  }\n\n  const camelCased = camelCase(title)\n\n  return disallowedPattern.test(camelCased) ? camelCase(getSlug(title)) : camelCased\n}\n","import {SerializeOptions, StructureNode, Serializable, Child} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {MenuItem, MenuItemBuilder, maybeSerializeMenuItem} from './MenuItem'\nimport {MenuItemGroup, MenuItemGroupBuilder, maybeSerializeMenuItemGroup} from './MenuItemGroup'\nimport {validateId} from './util/validateId'\nimport {UserComponent} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\n\n/**\n * Interface for component\n *\n * @public\n */\n// TODO: rename to `StructureComponent` since it clashes with React?\nexport interface Component extends StructureNode {\n  /** Component of type {@link UserComponent} */\n  component: UserComponent\n  /** Component child of type {@link Child} */\n  child?: Child\n  /** Component menu items, array of type {@link MenuItem} */\n  menuItems: MenuItem[]\n  /** Component menu item group, array of type {@link MenuItemGroup} */\n  menuItemGroups: MenuItemGroup[]\n  /** Component options */\n  options: {[key: string]: unknown}\n}\n\n/**\n * Interface for component input\n *\n * @public\n */\nexport interface ComponentInput extends StructureNode {\n  /** Component of type {@link UserComponent} */\n  component: UserComponent\n  /** Component child of type {@link Child} */\n  child?: Child\n  /** Component options */\n  options?: {[key: string]: unknown}\n  /** Component menu items. See {@link MenuItem} and {@link MenuItemBuilder}  */\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  /** Component menu item groups. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder} */\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/**\n * Interface for buildable component\n *\n * @public\n */\nexport interface BuildableComponent extends Partial<StructureNode> {\n  /** Component of type {@link UserComponent} */\n  component?: UserComponent\n  /** Component child of type {@link Child} */\n  child?: Child\n  /** Component options */\n  options?: {[key: string]: unknown}\n  /** Component menu items. See {@link MenuItem} and {@link MenuItemBuilder}  */\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  /** Component menu item groups. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder} */\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/**\n * Class for building components\n *\n * @public\n */\nexport class ComponentBuilder implements Serializable<Component> {\n  /** component builder option object */\n  protected spec: BuildableComponent\n\n  constructor(spec?: ComponentInput) {\n    this.spec = {options: {}, ...(spec ? spec : {})}\n  }\n\n  /** Set Component ID\n   * @param id - component ID\n   * @returns component builder based on ID provided\n   */\n  id(id: string): ComponentBuilder {\n    return this.clone({id})\n  }\n\n  /** Get ID\n   * @returns ID\n   */\n  getId(): BuildableComponent['id'] {\n    return this.spec.id\n  }\n\n  /** Set Component title\n   * @param title - component title\n   * @returns component builder based on title provided (and ID)\n   */\n  title(title: string): ComponentBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  /** Get Component title\n   * @returns title\n   */\n  getTitle(): BuildableComponent['title'] {\n    return this.spec.title\n  }\n\n  /** Set Component child\n   * @param child - child component\n   * @returns component builder based on child component provided\n   */\n  child(child: Child): ComponentBuilder {\n    return this.clone({child})\n  }\n\n  /** Get Component child\n   * @returns child component\n   */\n  getChild(): BuildableComponent['child'] {\n    return this.spec.child\n  }\n\n  /** Set component\n   * @param component - user built component\n   * @returns component builder based on component provided\n   */\n  component(component: UserComponent): ComponentBuilder {\n    return this.clone({component})\n  }\n\n  /** Get Component\n   * @returns component\n   */\n  getComponent(): BuildableComponent['component'] {\n    return this.spec.component\n  }\n\n  /** Set Component options\n   * @param options - component options\n   * @returns component builder based on options provided\n   */\n  options(options: {[key: string]: unknown}): ComponentBuilder {\n    return this.clone({options})\n  }\n\n  /** Get Component options\n   * @returns component options\n   */\n  getOptions(): NonNullable<BuildableComponent['options']> {\n    return this.spec.options || {}\n  }\n\n  /** Set Component menu items\n   * @param menuItems - component menu items\n   * @returns component builder based on menuItems provided\n   */\n  menuItems(menuItems: (MenuItem | MenuItemBuilder)[]): ComponentBuilder {\n    return this.clone({menuItems})\n  }\n\n  /** Get Component menu items\n   * @returns menu items\n   */\n  getMenuItems(): BuildableComponent['menuItems'] {\n    return this.spec.menuItems\n  }\n\n  /** Set Component menu item groups\n   * @param menuItemGroups - component menu item groups\n   * @returns component builder based on menuItemGroups provided\n   */\n  menuItemGroups(menuItemGroups: (MenuItemGroup | MenuItemGroupBuilder)[]): ComponentBuilder {\n    return this.clone({menuItemGroups})\n  }\n\n  /** Get Component menu item groups\n   * @returns menu item groups\n   */\n  getMenuItemGroups(): BuildableComponent['menuItemGroups'] {\n    return this.spec.menuItemGroups\n  }\n\n  /** Serialize component\n   * @param options - serialization options\n   * @returns component object based on path provided in options\n   *\n   */\n  serialize(options: SerializeOptions = {path: []}): Component {\n    const {id, title, child, options: componentOptions, component} = this.spec\n    if (!id) {\n      throw new SerializeError(\n        '`id` is required for `component` structure item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!component) {\n      throw new SerializeError(\n        '`component` is required for `component` structure item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    return {\n      id: validateId(id, options.path, options.index),\n      title,\n      type: 'component',\n      child,\n      component,\n      options: componentOptions || {},\n      menuItems: (this.spec.menuItems || []).map((item, i) =>\n        maybeSerializeMenuItem(item, i, options.path)\n      ),\n      menuItemGroups: (this.spec.menuItemGroups || []).map((item, i) =>\n        maybeSerializeMenuItemGroup(item, i, options.path)\n      ),\n    }\n  }\n\n  /** Clone component builder (allows for options overriding)\n   * @param withSpec - component builder options\n   * @returns cloned builder\n   */\n  clone(withSpec?: BuildableComponent): ComponentBuilder {\n    const builder = new ComponentBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import type {SanityClient} from '@sanity/client'\nimport {\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  getDraftId,\n  getPublishedId,\n  type SourceClientOptions,\n} from 'sanity'\n\nexport async function resolveTypeForDocument(\n  getClient: (options: SourceClientOptions) => SanityClient,\n  id: string\n): Promise<string | undefined> {\n  const query = '*[_id in [$documentId, $draftId]]._type'\n  const documentId = getPublishedId(id)\n  const draftId = getDraftId(id)\n\n  const types = await getClient(DEFAULT_STUDIO_CLIENT_OPTIONS).fetch(\n    query,\n    {documentId, draftId},\n    {tag: 'structure.resolve-type'}\n  )\n\n  return types[0]\n}\n","import {kebabCase} from 'lodash'\nimport {Serializable, SerializeOptions, SerializePath} from '../StructureNodes'\nimport {HELP_URL, SerializeError} from '../SerializeError'\nimport {validateId} from '../util/validateId'\nimport {View} from '../types'\nimport {ComponentViewBuilder} from './ComponentView'\nimport {FormViewBuilder} from './FormView'\n\n/**\n * Interface for base view\n *\n * @public */\nexport interface BaseView {\n  /** View id */\n  id: string\n  /** View Title */\n  title: string\n  /** View Icon */\n  icon?: React.ComponentType | React.ReactNode\n}\n\n/**\n * Class for building generic views.\n *\n * @public\n */\nexport abstract class GenericViewBuilder<TView extends Partial<BaseView>, ConcreteImpl>\n  implements Serializable<BaseView>\n{\n  /** Generic view option object */\n  protected spec: TView = {} as TView\n\n  /** Set generic view ID\n   * @param id - generic view ID\n   * @returns generic view builder based on ID provided.\n   */\n  id(id: string): ConcreteImpl {\n    return this.clone({id})\n  }\n  /** Get generic view ID\n   * @returns generic view ID\n   */\n  getId(): TView['id'] {\n    return this.spec.id\n  }\n\n  /** Set generic view title\n   * @param title - generic view title\n   * @returns generic view builder based on title provided and (if provided) its ID.\n   */\n  title(title: string): ConcreteImpl {\n    return this.clone({title, id: this.spec.id || kebabCase(title)})\n  }\n\n  /** Get generic view title\n   * @returns generic view title\n   */\n  getTitle(): TView['title'] {\n    return this.spec.title\n  }\n\n  /** Set generic view icon\n   * @param icon - generic view icon\n   * @returns generic view builder based on icon provided.\n   */\n  icon(icon: React.ComponentType | React.ReactNode): ConcreteImpl {\n    return this.clone({icon})\n  }\n\n  /** Get generic view icon\n   * @returns generic view icon\n   */\n  getIcon(): TView['icon'] {\n    return this.spec.icon\n  }\n\n  /** Serialize generic view\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns generic view object based on path provided in options. See {@link BaseView}\n   */\n  serialize(options: SerializeOptions = {path: []}): BaseView {\n    const {id, title, icon} = this.spec\n    if (!id) {\n      throw new SerializeError(\n        '`id` is required for view item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!title) {\n      throw new SerializeError(\n        '`title` is required for view item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    return {\n      id: validateId(id, options.path, options.index),\n      title,\n      icon,\n    }\n  }\n\n  /** Clone generic view builder (allows for options overriding)\n   * @param withSpec - Partial generic view builder options. See {@link BaseView}\n   * @returns Generic view builder.\n   */\n  abstract clone(withSpec?: Partial<BaseView>): ConcreteImpl\n}\n\nfunction isSerializable(view: BaseView | Serializable<BaseView>): view is Serializable<BaseView> {\n  return typeof (view as Serializable<BaseView>).serialize === 'function'\n}\n\n/** @internal */\nexport function maybeSerializeView(\n  item: View | Serializable<View>,\n  index: number,\n  path: SerializePath\n): View {\n  return isSerializable(item) ? item.serialize({path, index}) : item\n}\n\n/**\n * View builder. See {@link ComponentViewBuilder} and {@link FormViewBuilder}\n *\n * @public\n */\nexport type ViewBuilder = ComponentViewBuilder | FormViewBuilder\n","import {SerializeOptions} from '../StructureNodes'\nimport {SerializeError, HELP_URL} from '../SerializeError'\nimport type {UserViewComponent} from '../types'\nimport {BaseView, GenericViewBuilder} from './View'\nimport {isRecord} from 'sanity'\n\n/**\n * Interface for component views.\n *\n * @public */\nexport interface ComponentView<TOptions = Record<string, any>> extends BaseView {\n  type: 'component'\n  /** Component view components. See {@link UserViewComponent} */\n  component: UserViewComponent\n  /** Component view options */\n  options: TOptions\n}\n\nconst isComponentSpec = (spec: unknown): spec is ComponentView =>\n  isRecord(spec) && spec.type === 'component'\n\n/**\n * Class for building a component view.\n *\n * @public */\nexport class ComponentViewBuilder extends GenericViewBuilder<\n  Partial<ComponentView>,\n  ComponentViewBuilder\n> {\n  /** Partial Component view option object. See {@link ComponentView} */\n  protected spec: Partial<ComponentView>\n\n  constructor(\n    /**\n     * Component view component or spec\n     * @param componentOrSpec - user view component or partial component view. See {@link UserViewComponent} and {@link ComponentView}\n     */\n    componentOrSpec?: UserViewComponent | Partial<ComponentView>\n  ) {\n    const spec = isComponentSpec(componentOrSpec) ? {...componentOrSpec} : {options: {}}\n\n    super()\n    this.spec = spec\n\n    const userComponent =\n      typeof componentOrSpec === 'function' ? componentOrSpec : this.spec.component\n\n    if (userComponent) {\n      // Because we're cloning, this'll return a new instance, so grab the spec from it\n      this.spec = this.component(userComponent).spec\n    }\n  }\n\n  /** Set view Component\n   * @param component - component view component. See {@link UserViewComponent}\n   * @returns component view builder based on component view provided. See {@link ComponentViewBuilder}\n   */\n  component(component: UserViewComponent): ComponentViewBuilder {\n    return this.clone({component})\n  }\n\n  /** Get view Component\n   * @returns Partial component view. See {@link ComponentView}\n   */\n  getComponent(): Partial<ComponentView>['component'] {\n    return this.spec.component\n  }\n\n  /** Set view Component options\n   * @param options - component view options\n   * @returns component view builder based on options provided. See {@link ComponentViewBuilder}\n   */\n  options(options: {[key: string]: any}): ComponentViewBuilder {\n    return this.clone({options})\n  }\n\n  /** Get view Component options\n   * @returns component view options. See {@link ComponentView}\n   */\n  getOptions(): ComponentView['options'] {\n    return this.spec.options || {}\n  }\n\n  /** Serialize view Component\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns component view based on path provided in options. See {@link ComponentView}\n   *\n   */\n  serialize(options: SerializeOptions = {path: []}): ComponentView {\n    const base = super.serialize(options)\n\n    const component = this.spec.component\n    if (typeof component !== 'function') {\n      throw new SerializeError(\n        '`component` is required and must be a function for `component()` view item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.COMPONENT_REQUIRED)\n    }\n\n    return {\n      ...base,\n      component,\n      options: this.spec.options || {},\n      type: 'component',\n    }\n  }\n\n  /** Clone Component view builder (allows for options overriding)\n   * @param withSpec - partial for component view option. See {@link ComponentView}\n   * @returns component view builder. See {@link ComponentViewBuilder}\n   */\n  clone(withSpec?: Partial<ComponentView>): ComponentViewBuilder {\n    const builder = new ComponentViewBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {SerializeOptions} from '../StructureNodes'\nimport {BaseView, GenericViewBuilder} from './View'\n\n/**\n * Interface for form views.\n *\n * @public */\nexport interface FormView extends BaseView {\n  type: 'form'\n}\n\n/**\n * Class for building a form view.\n *\n * @public */\nexport class FormViewBuilder extends GenericViewBuilder<Partial<BaseView>, FormViewBuilder> {\n  /** Document list options. See {@link FormView} */\n  protected spec: Partial<FormView>\n\n  constructor(spec?: Partial<FormView>) {\n    super()\n    this.spec = {id: 'editor', title: 'Editor', ...(spec ? spec : {})}\n  }\n\n  /**\n   * Serialize Form view builder\n   * @param options - Serialize options. See {@link SerializeOptions}\n   * @returns form view builder based on path provided in options. See {@link FormView}\n   */\n  serialize(options: SerializeOptions = {path: []}): FormView {\n    return {\n      ...super.serialize(options),\n      type: 'form',\n    }\n  }\n\n  /**\n   * Clone Form view builder (allows for options overriding)\n   * @param withSpec - Partial form view builder options. See {@link FormView}\n   * @returns form view builder. See {@link FormViewBuilder}\n   */\n  clone(withSpec?: Partial<FormView>): FormViewBuilder {\n    const builder = new FormViewBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import type {UserViewComponent} from '../types'\nimport {ComponentView, ComponentViewBuilder} from './ComponentView'\nimport {FormView, FormViewBuilder} from './FormView'\n\nexport * from './FormView'\nexport * from './ComponentView'\nexport * from './View'\n\n/** @internal */\nexport const form = (spec?: Partial<FormView>): FormViewBuilder => new FormViewBuilder(spec)\n\n/** @internal */\nexport const component = (\n  componentOrSpec?: UserViewComponent | Partial<ComponentView>\n): ComponentViewBuilder => new ComponentViewBuilder(componentOrSpec)\n","import {uniq} from 'lodash'\nimport {SchemaType} from '@sanity/types'\nimport {resolveTypeForDocument} from './util/resolveTypeForDocument'\nimport {ChildResolver} from './ChildResolver'\nimport {SerializeOptions, Serializable, Child, DocumentNode, EditorNode} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {validateId} from './util/validateId'\nimport {ViewBuilder, maybeSerializeView} from './views/View'\nimport {form} from './views'\nimport type {StructureContext, View} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\n\nconst createDocumentChildResolver =\n  ({resolveDocumentNode, getClient}: StructureContext): ChildResolver =>\n  async (itemId, {params, path}) => {\n    let type = params.type\n\n    const parentPath = path.slice(0, path.length - 1)\n    const currentSegment = path[path.length - 1]\n\n    if (!type) {\n      type = await resolveTypeForDocument(getClient, itemId)\n    }\n\n    if (!type) {\n      throw new SerializeError(\n        `Failed to resolve document, and no type provided in parameters.`,\n        parentPath,\n        currentSegment\n      )\n    }\n\n    return resolveDocumentNode({documentId: itemId, schemaType: type})\n  }\n\n/**\n * Interface for options of Partial Documents. See {@link PartialDocumentNode}\n *\n * @public */\nexport interface DocumentOptions {\n  /** Document Id */\n  id: string\n  /** Document Type */\n  type: string\n  /** Document Template */\n  template?: string\n  /** Template parameters */\n  templateParameters?: Record<string, unknown>\n}\n\n/**\n * Interface for partial document (focused on the document pane)\n *\n * @public */\nexport interface PartialDocumentNode {\n  /** Document Id */\n  id?: string\n  /** Document title */\n  title?: string\n  /** Document children of type {@link Child} */\n  child?: Child\n  /**\n   * Views for the document pane. See {@link ViewBuilder} and {@link View}\n   */\n  views?: (View | ViewBuilder)[]\n  /**\n   * Document options. See {@link DocumentOptions}\n   */\n  options?: Partial<DocumentOptions>\n}\n\n/**\n * A `DocumentBuilder` is used to build a document node.\n *\n * @public */\nexport class DocumentBuilder implements Serializable<DocumentNode> {\n  /** Component builder option object See {@link PartialDocumentNode} */\n  protected spec: PartialDocumentNode\n\n  constructor(\n    /**\n     * Desk structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: PartialDocumentNode\n  ) {\n    this.spec = spec ? spec : {}\n  }\n\n  /** Set Document Builder ID\n   * @param id - document builder ID\n   * @returns document builder based on ID provided. See {@link DocumentBuilder}\n   */\n  id(id: string): DocumentBuilder {\n    return this.clone({id})\n  }\n\n  /** Get Document Builder ID\n   * @returns document ID. See {@link PartialDocumentNode}\n   */\n  getId(): PartialDocumentNode['id'] {\n    return this.spec.id\n  }\n\n  /** Set Document title\n   * @param title - document title\n   * @returns document builder based on title provided (and ID). See {@link DocumentBuilder}\n   */\n  title(title: string): DocumentBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  /** Get Document title\n   * @returns document title. See {@link PartialDocumentNode}\n   */\n  getTitle(): PartialDocumentNode['title'] {\n    return this.spec.title\n  }\n\n  /** Set Document child\n   * @param child - document child\n   * @returns document builder based on child provided. See {@link DocumentBuilder}\n   */\n  child(child: Child): DocumentBuilder {\n    return this.clone({child})\n  }\n\n  /** Get Document child\n   * @returns document child. See {@link PartialDocumentNode}\n   */\n  getChild(): PartialDocumentNode['child'] {\n    return this.spec.child\n  }\n\n  /** Set Document ID\n   * @param documentId - document ID\n   * @returns document builder with document based on ID provided. See {@link DocumentBuilder}\n   */\n  documentId(documentId: string): DocumentBuilder {\n    // Let's try to be a bit helpful and assign an ID from document ID if none is specified\n    const paneId = this.spec.id || documentId\n    return this.clone({\n      id: paneId,\n      options: {\n        ...(this.spec.options || {}),\n        id: documentId,\n      },\n    })\n  }\n\n  /** Get Document ID\n   * @returns document ID. See {@link DocumentOptions}\n   */\n  getDocumentId(): Partial<DocumentOptions>['id'] {\n    return this.spec.options?.id\n  }\n\n  /** Set Document Type\n   * @param documentType - document type\n   * @returns document builder with document based on type provided. See {@link DocumentBuilder}\n   */\n  schemaType(documentType: SchemaType | string): DocumentBuilder {\n    return this.clone({\n      options: {\n        ...(this.spec.options || {}),\n        type: typeof documentType === 'string' ? documentType : documentType.name,\n      },\n    })\n  }\n\n  /** Get Document Type\n   * @returns document type. See {@link DocumentOptions}\n   */\n  getSchemaType(): Partial<DocumentOptions>['type'] {\n    return this.spec.options?.type\n  }\n\n  /** Set Document Template\n   * @param templateId - document template ID\n   * @param parameters - document template parameters\n   * @returns document builder with document based on template provided. See {@link DocumentBuilder}\n   */\n  initialValueTemplate(templateId: string, parameters?: Record<string, unknown>): DocumentBuilder {\n    return this.clone({\n      options: {\n        ...(this.spec.options || {}),\n        template: templateId,\n        templateParameters: parameters,\n      },\n    })\n  }\n\n  /** Get Document Template\n   * @returns document template. See {@link DocumentOptions}\n   */\n  getInitialValueTemplate(): Partial<DocumentOptions>['template'] {\n    return this.spec.options?.template\n  }\n\n  /** Get Document's initial value Template parameters\n   * @returns document template parameters. See {@link DocumentOptions}\n   */\n  getInitialValueTemplateParameters(): Partial<DocumentOptions>['templateParameters'] {\n    return this.spec.options?.templateParameters\n  }\n\n  /** Set Document views\n   * @param views - document views. See {@link ViewBuilder} and {@link View}\n   * @returns document builder with document based on views provided. See {@link DocumentBuilder}\n   */\n  views(views: (View | ViewBuilder)[]): DocumentBuilder {\n    return this.clone({views})\n  }\n\n  /** Get Document views\n   * @returns document views. See {@link ViewBuilder} and {@link View}\n   */\n  getViews(): (View | ViewBuilder)[] {\n    return this.spec.views || []\n  }\n\n  /** Serialize Document builder\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns document node based on path, index and hint provided in options. See {@link DocumentNode}\n   */\n  serialize({path = [], index, hint}: SerializeOptions = {path: []}): DocumentNode {\n    const urlId = path[index || path.length - 1]\n\n    // Try to grab document ID / editor ID from URL if not defined\n    const id = this.spec.id || (urlId && `${urlId}`) || ''\n    const options: Partial<DocumentOptions> = {\n      id,\n      type: undefined,\n      template: undefined,\n      templateParameters: undefined,\n      ...this.spec.options,\n    }\n\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for document nodes',\n        path,\n        index,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!options || !options.id) {\n      throw new SerializeError(\n        'document id (`id`) is required for document nodes',\n        path,\n        id,\n        hint\n      ).withHelpUrl(HELP_URL.DOCUMENT_ID_REQUIRED)\n    }\n\n    if (!options || !options.type) {\n      throw new SerializeError(\n        'document type (`schemaType`) is required for document nodes',\n        path,\n        id,\n        hint\n      )\n    }\n\n    const views = (this.spec.views && this.spec.views.length > 0 ? this.spec.views : [form()]).map(\n      (item, i) => maybeSerializeView(item, i, path)\n    )\n\n    const viewIds = views.map((view) => view.id)\n    const dupes = uniq(viewIds.filter((viewId, i) => viewIds.includes(viewId, i + 1)))\n    if (dupes.length > 0) {\n      throw new SerializeError(\n        `document node has views with duplicate IDs: ${dupes.join(',  ')}`,\n        path,\n        id,\n        hint\n      )\n    }\n\n    return {\n      ...this.spec,\n      child: this.spec.child || createDocumentChildResolver(this._context),\n      id: validateId(id, path, index),\n      type: 'document',\n      options: getDocumentOptions(options),\n      views,\n    }\n  }\n\n  /** Clone Document builder\n   * @param withSpec - partial document node specification used to extend the cloned builder. See {@link PartialDocumentNode}\n   * @returns document builder based on context and spec provided. See {@link DocumentBuilder}\n   */\n  clone(withSpec: PartialDocumentNode = {}): DocumentBuilder {\n    const builder = new DocumentBuilder(this._context)\n    const options = {...(this.spec.options || {}), ...(withSpec.options || {})}\n    builder.spec = {...this.spec, ...withSpec, options}\n    return builder\n  }\n}\n\nfunction getDocumentOptions(spec: Partial<DocumentOptions>): DocumentOptions {\n  const opts: DocumentOptions = {\n    id: spec.id || '',\n    type: spec.type || '*',\n  }\n\n  if (spec.template) {\n    opts.template = spec.template\n  }\n\n  if (spec.templateParameters) {\n    opts.templateParameters = spec.templateParameters\n  }\n\n  return opts\n}\n\n/** @internal */\nexport function documentFromEditor(context: StructureContext, spec?: EditorNode): DocumentBuilder {\n  let doc = spec?.type\n    ? // Use user-defined document fragment as base if possible\n      context.resolveDocumentNode({schemaType: spec.type})\n    : // Fall back to plain old document builder\n      new DocumentBuilder(context)\n\n  if (!spec) return doc\n\n  const {id, type, template, templateParameters} = spec.options\n  doc = doc.id(spec.id).documentId(id)\n\n  if (type) {\n    doc = doc.schemaType(type)\n  }\n  if (template) {\n    doc = doc.initialValueTemplate(template, templateParameters)\n  }\n  if (spec.child) {\n    doc = doc.child(spec.child)\n  }\n\n  return doc\n}\n\n/** @internal */\nexport function documentFromEditorWithInitialValue(\n  {resolveDocumentNode, templates}: StructureContext,\n  templateId: string,\n  parameters?: Record<string, unknown>\n): DocumentBuilder {\n  const template = templates.find((t) => t.id === templateId)\n\n  if (!template) {\n    throw new Error(`Template with ID \"${templateId}\" not defined`)\n  }\n\n  return resolveDocumentNode({schemaType: template.schemaType}).initialValueTemplate(\n    templateId,\n    parameters\n  )\n}\n","export const layoutOptions = ['default', 'card', 'media', 'detail', 'block']\n","import {PartialDocumentList, getTypeNamesFromFilter} from './DocumentList'\nimport {StructureNode} from './StructureNodes'\n\n/**\n * Intent parameters (json)\n *\n * @public\n */\nexport type IntentJsonParams = {[key: string]: any}\n\n/**\n * Interface for base intent parameters\n *\n * @public */\nexport interface BaseIntentParams {\n  /* Intent type */\n  type?: string\n  /* Intent Id */\n  id?: string\n  /* Intent template */\n  template?: string\n  /**\n   * Experimental field path\n   * @beta\n   * @experimental\n   * @hidden\n   */\n  path?: string\n}\n\n/** @internal */\nexport const DEFAULT_INTENT_HANDLER = Symbol('Document type list canHandleIntent')\n\n/**\n * Intent parameters\n * See {@link BaseIntentParams} and {@link IntentJsonParams}\n *\n * @public\n */\nexport type IntentParams = BaseIntentParams | [BaseIntentParams, IntentJsonParams]\n\n/**\n * Interface for intents\n * @public */\n// TODO: intents should be unified somewhere\nexport interface Intent {\n  /** Intent type */\n  type: string\n  /** Intent parameters. See {@link IntentParams}\n   */\n  params?: IntentParams\n}\n\n/**\n * Interface for intent checker\n *\n * @public\n */\nexport interface IntentChecker {\n  (\n    /** Intent name */\n    intentName: string,\n    /** Intent checker parameter */\n    params: {[key: string]: any},\n    /** Structure context. See {@link StructureNode} */\n    context: {pane: StructureNode; index: number}\n  ): boolean\n  /** intent checker identify */\n  identity?: symbol\n}\n\n/** @internal */\nexport const defaultIntentChecker: IntentChecker = (intentName, params, {pane}): boolean => {\n  const isEdit = intentName === 'edit'\n  const isCreate = intentName === 'create'\n  const typedSpec = pane as PartialDocumentList\n  const paneFilter = typedSpec.options?.filter || ''\n  const paneParams = typedSpec.options?.params || {}\n  const typeNames = typedSpec.schemaTypeName\n    ? [typedSpec.schemaTypeName]\n    : getTypeNamesFromFilter(paneFilter, paneParams)\n\n  const initialValueTemplates = typedSpec.initialValueTemplates || []\n\n  if (isCreate && params.template) {\n    return initialValueTemplates.some((tpl) => tpl.templateId === params.template)\n  }\n\n  return (\n    (isEdit && params.id && typeNames.includes(params.type)) ||\n    (isCreate && typeNames.includes(params.type))\n  )\n}\n\ndefaultIntentChecker.identity = DEFAULT_INTENT_HANDLER\n","import {pickBy} from 'lodash'\nimport {ComposeIcon} from '@sanity/icons'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {Serializable, SerializeOptions, SerializePath} from './StructureNodes'\nimport {MenuItemBuilder, MenuItem} from './MenuItem'\nimport {IntentParams} from './Intent'\nimport {StructureContext} from './types'\nimport {InitialValueTemplateItem} from 'sanity'\n\n/**\n * A `InitialValueTemplateItemBuilder` is used to build a document node with an initial value set.\n *\n * @public\n */\nexport class InitialValueTemplateItemBuilder implements Serializable<InitialValueTemplateItem> {\n  /** Initial Value template item option object. See {@link InitialValueTemplateItem} */\n  protected spec: Partial<InitialValueTemplateItem>\n\n  constructor(\n    /**\n     * Desk structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: Partial<InitialValueTemplateItem>\n  ) {\n    this.spec = spec ? spec : {}\n  }\n\n  /** Set initial value template item builder ID\n   * @param id - initial value template item ID\n   * @returns initial value template item based on ID provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  id(id: string): InitialValueTemplateItemBuilder {\n    return this.clone({id})\n  }\n\n  /** Get initial value template item builder ID\n   * @returns initial value template item ID. See {@link InitialValueTemplateItem}\n   */\n  getId(): Partial<InitialValueTemplateItem>['id'] {\n    return this.spec.id\n  }\n\n  /** Set initial value template item title\n   * @param title - initial value template item title\n   * @returns initial value template item based on title provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  title(title: string): InitialValueTemplateItemBuilder {\n    return this.clone({title})\n  }\n\n  /** Get initial value template item title\n   * @returns initial value template item title. See {@link InitialValueTemplateItem}\n   */\n  getTitle(): Partial<InitialValueTemplateItem>['title'] {\n    return this.spec.title\n  }\n\n  /** Set initial value template item description\n   * @param description - initial value template item description\n   * @returns initial value template item builder based on description provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  description(description: string): InitialValueTemplateItemBuilder {\n    return this.clone({description})\n  }\n\n  /** Get initial value template item description\n   * @returns initial value template item description. See {@link InitialValueTemplateItem}\n   */\n  getDescription(): Partial<InitialValueTemplateItem>['description'] {\n    return this.spec.description\n  }\n\n  /** Set initial value template ID\n   * @param templateId - initial value template item template ID\n   * @returns initial value template item based builder on template ID provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  templateId(templateId: string): InitialValueTemplateItemBuilder {\n    // Let's try to be a bit helpful and assign an ID from template ID if none is specified\n    const paneId = this.spec.id || templateId\n    return this.clone({\n      id: paneId,\n      templateId,\n    })\n  }\n\n  /** Get initial value template item template ID\n   * @returns initial value template item ID. See {@link InitialValueTemplateItem}\n   */\n  getTemplateId(): Partial<InitialValueTemplateItem>['templateId'] {\n    return this.spec.templateId\n  }\n\n  /** Get initial value template item template parameters\n   * @param parameters - initial value template item parameters\n   * @returns initial value template item builder based on parameters provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  parameters(parameters: {[key: string]: any}): InitialValueTemplateItemBuilder {\n    return this.clone({parameters})\n  }\n\n  /** Get initial value template item template parameters\n   * @returns initial value template item parameters. See {@link InitialValueTemplateItem}\n   */\n  getParameters(): Partial<InitialValueTemplateItem>['parameters'] {\n    return this.spec.parameters\n  }\n\n  /** Serialize initial value template item\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns initial value template item object based on the path, index and hint provided in options. See {@link InitialValueTemplateItem}\n   */\n  serialize({path = [], index, hint}: SerializeOptions = {path: []}): InitialValueTemplateItem {\n    const {spec, _context} = this\n    const {templates} = _context\n\n    if (typeof spec.id !== 'string' || !spec.id) {\n      throw new SerializeError(\n        '`id` is required for initial value template item nodes',\n        path,\n        index,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!spec.templateId) {\n      throw new SerializeError(\n        'template id (`templateId`) is required for initial value template item nodes',\n        path,\n        spec.id,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    const template = templates.find((t) => t.id === spec.templateId)\n\n    if (!template) {\n      throw new SerializeError(\n        'template id (`templateId`) is required for initial value template item nodes',\n        path,\n        spec.id,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    return {\n      id: spec.id,\n      templateId: spec.id,\n      schemaType: template.schemaType,\n      type: 'initialValueTemplateItem',\n      description: spec.description || template.description,\n      title: spec.title || template.title,\n      subtitle: spec.subtitle,\n      icon: spec.icon || template.icon,\n      initialDocumentId: spec.initialDocumentId,\n      parameters: spec.parameters,\n    }\n  }\n\n  /** Clone generic view builder (allows for options overriding)\n   * @param withSpec - initial value template item builder options. See {@link InitialValueTemplateItemBuilder}\n   * @returns initial value template item builder based on the context and options provided. See {@link InitialValueTemplateItemBuilder}\n   */\n  clone(withSpec: Partial<InitialValueTemplateItem> = {}): InitialValueTemplateItemBuilder {\n    const builder = new InitialValueTemplateItemBuilder(this._context)\n    builder.spec = {...this.spec, ...withSpec}\n    return builder\n  }\n}\n\n/** @internal */\nexport function defaultInitialValueTemplateItems(\n  context: StructureContext\n): InitialValueTemplateItemBuilder[] {\n  const {schema, getStructureBuilder, templates} = context\n\n  // Sort templates by their schema type, in order or definition\n  const typeNames = schema.getTypeNames()\n  const ordered = templates\n    // Don't list templates that require parameters\n    // TODO: this should use the new-document template items instead maybe?\n    .filter((tpl) => !tpl.parameters?.length)\n    .sort((a, b) => typeNames.indexOf(a.schemaType) - typeNames.indexOf(b.schemaType))\n\n  // Create actual template items out of the templates\n  return ordered.map((tpl) => getStructureBuilder().initialValueTemplateItem(tpl.id))\n}\n\n/** @internal */\nexport function maybeSerializeInitialValueTemplateItem(\n  item: InitialValueTemplateItem | InitialValueTemplateItemBuilder,\n  index: number,\n  path: SerializePath\n): InitialValueTemplateItem {\n  return item instanceof InitialValueTemplateItemBuilder ? item.serialize({path, index}) : item\n}\n\n/** @internal */\nexport function menuItemsFromInitialValueTemplateItems(\n  context: StructureContext,\n  templateItems: InitialValueTemplateItem[]\n): MenuItem[] {\n  const {schema, templates} = context\n  return templateItems.map((item) => {\n    const template = templates.find((t) => t.id === item.templateId)\n    const title = item.title || template?.title || 'Create new'\n    const params = pickBy(\n      {type: template && template.schemaType, template: item.templateId},\n      Boolean\n    )\n    const intentParams: IntentParams = item.parameters ? [params, item.parameters] : params\n    const schemaType = template && schema.get(template.schemaType)\n\n    return new MenuItemBuilder(context)\n      .title(title)\n      .icon((template && template.icon) || schemaType?.icon || ComposeIcon)\n      .intent({type: 'create', params: intentParams})\n      .serialize()\n  })\n}\n","import {Child, Serializable, SerializeOptions, StructureNode} from './StructureNodes'\nimport {layoutOptions} from './Layout'\nimport {MenuItem, MenuItemBuilder, maybeSerializeMenuItem} from './MenuItem'\nimport {MenuItemGroup, MenuItemGroupBuilder, maybeSerializeMenuItemGroup} from './MenuItemGroup'\nimport {IntentChecker, defaultIntentChecker} from './Intent'\nimport {SerializeError} from './SerializeError'\nimport {\n  InitialValueTemplateItemBuilder,\n  maybeSerializeInitialValueTemplateItem,\n} from './InitialValueTemplateItem'\nimport {validateId} from './util/validateId'\nimport {getStructureNodeId} from './util/getStructureNodeId'\nimport {PreviewLayoutKey, InitialValueTemplateItem} from 'sanity'\n\nfunction noChildResolver() {\n  return undefined\n}\n\n/** @internal */\nexport const shallowIntentChecker: IntentChecker = (intentName, params, {pane, index}): boolean => {\n  return index <= 1 && defaultIntentChecker(intentName, params, {pane, index})\n}\n\n/**\n * Interface for list display options\n *\n * @public */\nexport interface ListDisplayOptions {\n  /** Check if list display should show icons */\n  showIcons?: boolean\n}\n\n/**\n * Interface for base generic list\n *\n * @public\n */\nexport interface BaseGenericList extends StructureNode {\n  /** List layout key. */\n  defaultLayout?: PreviewLayoutKey\n  /** Can handle intent. See {@link IntentChecker} */\n  canHandleIntent?: IntentChecker\n  /** List display options. See {@link ListDisplayOptions} */\n  displayOptions?: ListDisplayOptions\n  /** List child. See {@link Child} */\n  child: Child\n  /** List initial values array. See {@link InitialValueTemplateItem} and {@link InitialValueTemplateItemBuilder} */\n  initialValueTemplates?: (InitialValueTemplateItem | InitialValueTemplateItemBuilder)[]\n}\n\n/**\n * Interface for generic list\n *\n * @public\n */\n// \"POJO\"/verbatim-version - end result\nexport interface GenericList extends BaseGenericList {\n  /** List type */\n  type: string\n  /** List menu items array. See {@link MenuItem} */\n  menuItems: MenuItem[]\n  /** List menu item groups array. See {@link MenuItemGroup} */\n  menuItemGroups: MenuItemGroup[]\n}\n\n/**\n * Interface for buildable generic list\n *\n * @public\n */\n// Used internally in builder classes to make everything optional\nexport interface BuildableGenericList extends Partial<BaseGenericList> {\n  /** List menu items array. See {@link MenuItem} and {@link MenuItemBuilder} */\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  /** List menu items groups array. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder} */\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/**\n * Interface for generic list input\n * Allows builders and only requires things not inferrable\n *\n * @public */\n// Input version, allows builders and only requires things not inferrable\nexport interface GenericListInput extends StructureNode {\n  /** Input id */\n  id: string\n  /** Input title */\n  title: string\n  /** Input menu items groups. See {@link MenuItem} and {@link MenuItemBuilder} */\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  /** Input menu items groups. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder} */\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n  /** Input initial value array. See {@link InitialValueTemplateItem} and {@link InitialValueTemplateItemBuilder} */\n  initialValueTemplates?: (InitialValueTemplateItem | InitialValueTemplateItemBuilder)[]\n  /** Input default layout. */\n  defaultLayout?: PreviewLayoutKey\n  /** If input can handle intent. See {@link IntentChecker} */\n  canHandleIntent?: IntentChecker\n  /** Input child of type {@link Child} */\n  child?: Child\n}\n\n/**\n * Class for building generic lists\n *\n * @public\n */\nexport abstract class GenericListBuilder<TList extends BuildableGenericList, ConcreteImpl>\n  implements Serializable<GenericList>\n{\n  /** Check if initial value templates are set */\n  protected initialValueTemplatesSpecified = false\n  /** Generic list option object */\n  protected spec: TList = {} as TList\n\n  /** Set generic list ID\n   * @param id - generic list ID\n   * @returns generic list builder based on ID provided.\n   */\n  id(id: string): ConcreteImpl {\n    return this.clone({id})\n  }\n\n  /** Get generic list ID\n   * @returns generic list ID\n   */\n  getId(): TList['id'] {\n    return this.spec.id\n  }\n\n  /** Set generic list title\n   * @param title - generic list title\n   * @returns generic list builder based on title and ID provided.\n   */\n  title(title: string): ConcreteImpl {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  /** Get generic list title\n   * @returns generic list title\n   */\n  getTitle(): TList['title'] {\n    return this.spec.title\n  }\n\n  /** Set generic list layout\n   * @param defaultLayout - generic list layout key.\n   * @returns generic list builder based on layout provided.\n   */\n  defaultLayout(defaultLayout: PreviewLayoutKey): ConcreteImpl {\n    return this.clone({defaultLayout})\n  }\n\n  /** Get generic list layout\n   * @returns generic list layout\n   */\n  getDefaultLayout(): TList['defaultLayout'] {\n    return this.spec.defaultLayout\n  }\n\n  /** Set generic list menu items\n   * @param menuItems - generic list menu items. See {@link MenuItem} and {@link MenuItemBuilder}\n   * @returns generic list builder based on menu items provided.\n   */\n  menuItems(menuItems: (MenuItem | MenuItemBuilder)[] | undefined): ConcreteImpl {\n    return this.clone({menuItems})\n  }\n\n  /** Get generic list menu items\n   * @returns generic list menu items\n   */\n  getMenuItems(): TList['menuItems'] {\n    return this.spec.menuItems\n  }\n\n  /** Set generic list menu item groups\n   * @param menuItemGroups - generic list menu item groups. See {@link MenuItemGroup} and {@link MenuItemGroupBuilder}\n   * @returns generic list builder based on menu item groups provided.\n   */\n  menuItemGroups(menuItemGroups: (MenuItemGroup | MenuItemGroupBuilder)[]): ConcreteImpl {\n    return this.clone({menuItemGroups})\n  }\n\n  /** Get generic list menu item groups\n   * @returns generic list menu item groups\n   */\n  getMenuItemGroups(): TList['menuItemGroups'] {\n    return this.spec.menuItemGroups\n  }\n\n  /** Set generic list child\n   * @param child - generic list child. See {@link Child}\n   * @returns generic list builder based on child provided (clone).\n   */\n  child(child: Child): ConcreteImpl {\n    return this.clone({child})\n  }\n\n  /** Get generic list child\n   * @returns generic list child\n   */\n  getChild(): TList['child'] {\n    return this.spec.child\n  }\n\n  /** Set generic list can handle intent\n   * @param canHandleIntent - generic list intent checker. See {@link IntentChecker}\n   * @returns generic list builder based on can handle intent provided.\n   */\n  canHandleIntent(canHandleIntent: IntentChecker): ConcreteImpl {\n    return this.clone({canHandleIntent})\n  }\n\n  /** Get generic list can handle intent\n   * @returns generic list can handle intent\n   */\n  getCanHandleIntent(): TList['canHandleIntent'] {\n    return this.spec.canHandleIntent\n  }\n\n  /** Set generic list display options\n   * @param enabled - allow / disallow for showing icons\n   * @returns generic list builder based on display options (showIcons) provided.\n   */\n  showIcons(enabled = true): ConcreteImpl {\n    return this.clone({\n      displayOptions: {...(this.spec.displayOptions || {}), showIcons: enabled},\n    })\n  }\n\n  /** Get generic list display options\n   * @returns generic list display options (specifically showIcons)\n   */\n  getShowIcons(): boolean | undefined {\n    return this.spec.displayOptions ? this.spec.displayOptions.showIcons : undefined\n  }\n\n  /** Set generic list initial value templates\n   * @param templates - generic list initial value templates. See {@link InitialValueTemplateItem} and {@link InitialValueTemplateItemBuilder}\n   * @returns generic list builder based on templates provided.\n   */\n  initialValueTemplates(\n    templates:\n      | InitialValueTemplateItem\n      | InitialValueTemplateItemBuilder\n      | Array<InitialValueTemplateItem | InitialValueTemplateItemBuilder>\n  ): ConcreteImpl {\n    this.initialValueTemplatesSpecified = true\n    return this.clone({initialValueTemplates: Array.isArray(templates) ? templates : [templates]})\n  }\n\n  /** Get generic list initial value templates\n   * @returns generic list initial value templates\n   */\n  getInitialValueTemplates(): TList['initialValueTemplates'] {\n    return this.spec.initialValueTemplates\n  }\n\n  /** Serialize generic list\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns generic list object based on path provided in options. See {@link GenericList}\n   */\n  serialize(options: SerializeOptions = {path: []}): GenericList {\n    const id = this.spec.id || ''\n    const path = options.path\n\n    const defaultLayout = this.spec.defaultLayout\n    if (defaultLayout && !layoutOptions.includes(defaultLayout)) {\n      throw new SerializeError(\n        `\\`layout\\` must be one of ${layoutOptions.map((item) => `\"${item}\"`).join(', ')}`,\n        path,\n        id || options.index,\n        this.spec.title\n      )\n    }\n\n    const initialValueTemplates = (this.spec.initialValueTemplates || []).map((item, i) =>\n      maybeSerializeInitialValueTemplateItem(item, i, path)\n    )\n\n    return {\n      id: validateId(id, options.path, id || options.index),\n      title: this.spec.title,\n      type: 'genericList',\n      defaultLayout,\n      child: this.spec.child || noChildResolver,\n      canHandleIntent: this.spec.canHandleIntent || shallowIntentChecker,\n      displayOptions: this.spec.displayOptions,\n      initialValueTemplates,\n      menuItems: (this.spec.menuItems || []).map((item, i) =>\n        maybeSerializeMenuItem(item, i, path)\n      ),\n      menuItemGroups: (this.spec.menuItemGroups || []).map((item, i) =>\n        maybeSerializeMenuItemGroup(item, i, path)\n      ),\n    }\n  }\n\n  /** Clone generic list builder (allows for options overriding)\n   * @param _withSpec - generic list options.\n   * @returns generic list builder.\n   */\n  abstract clone(_withSpec?: object): ConcreteImpl\n}\n","import {SchemaType, SortOrderingItem} from '@sanity/types'\nimport {ComposeIcon} from '@sanity/icons'\nimport {resolveTypeForDocument} from './util/resolveTypeForDocument'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {SerializeOptions, Child} from './StructureNodes'\nimport {ChildResolver, ChildResolverOptions, ItemChild} from './ChildResolver'\nimport {\n  GenericListBuilder,\n  BuildableGenericList,\n  GenericList,\n  GenericListInput,\n} from './GenericList'\nimport {DocumentBuilder} from './Document'\nimport {StructureContext} from './types'\nimport {InitialValueTemplateItem} from 'sanity'\n\nconst validateFilter = (spec: PartialDocumentList, options: SerializeOptions) => {\n  const filter = spec.options?.filter.trim() || ''\n\n  if (['*', '{'].includes(filter[0])) {\n    throw new SerializeError(\n      `\\`filter\\` cannot start with \\`${filter[0]}\\` - looks like you are providing a query, not a filter`,\n      options.path,\n      spec.id,\n      spec.title\n    ).withHelpUrl(HELP_URL.QUERY_PROVIDED_FOR_FILTER)\n  }\n\n  return filter\n}\n\nconst createDocumentChildResolverForItem =\n  (context: StructureContext): ChildResolver =>\n  (itemId: string, options: ChildResolverOptions): ItemChild | Promise<ItemChild> | undefined => {\n    const parentItem = options.parent as DocumentList\n    const template = options.params?.template\n      ? context.templates.find((tpl) => tpl.id === options.params.template)\n      : undefined\n    const type = template\n      ? template.schemaType\n      : parentItem.schemaTypeName || resolveTypeForDocument(context.getClient, itemId)\n\n    return Promise.resolve(type).then((schemaType) =>\n      schemaType\n        ? context.resolveDocumentNode({schemaType, documentId: itemId})\n        : new DocumentBuilder(context).id('editor').documentId(itemId).schemaType('')\n    )\n  }\n\n/**\n * Partial document list\n *\n * @public\n */\nexport interface PartialDocumentList extends BuildableGenericList {\n  /** Document list options. See {@link DocumentListOptions} */\n  options?: DocumentListOptions\n  /** Schema type name */\n  schemaTypeName?: string\n}\n\n/**\n * Interface for document list input\n *\n * @public\n */\nexport interface DocumentListInput extends GenericListInput {\n  /** Document list options. See {@link DocumentListOptions} */\n  options: DocumentListOptions\n}\n\n/**\n * Interface for document list\n *\n * @public\n */\nexport interface DocumentList extends GenericList {\n  type: 'documentList'\n  /** Document list options. See {@link DocumentListOptions} */\n  options: DocumentListOptions\n  /** Document list child. See {@link Child} */\n  child: Child\n  /** Document schema type name */\n  schemaTypeName?: string\n}\n\n/**\n * Interface for document List options\n *\n * @public\n */\nexport interface DocumentListOptions {\n  /** Document list filter */\n  filter: string\n  /** Document list parameters */\n  params?: Record<string, unknown>\n  /** Document list API version */\n  apiVersion?: string\n  /** Document list API default ordering array. See {@link SortOrderingItem} */\n  defaultOrdering?: SortOrderingItem[]\n}\n\n/**\n * Class for building document list\n *\n * @public\n */\nexport class DocumentListBuilder extends GenericListBuilder<\n  PartialDocumentList,\n  DocumentListBuilder\n> {\n  /** Document list options. See {@link PartialDocumentList} */\n  protected spec: PartialDocumentList\n\n  constructor(\n    /**\n     * Desk structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: DocumentListInput\n  ) {\n    super()\n    this.spec = spec || {}\n    this.initialValueTemplatesSpecified = Boolean(spec?.initialValueTemplates)\n  }\n\n  /** Set API version\n   * @param apiVersion - API version\n   * @returns document list builder based on the options and API version provided. See {@link DocumentListBuilder}\n   */\n  apiVersion(apiVersion: string): DocumentListBuilder {\n    return this.clone({options: {...(this.spec.options || {filter: ''}), apiVersion}})\n  }\n\n  /** Get API version\n   * @returns API version\n   */\n  getApiVersion(): string | undefined {\n    return this.spec.options?.apiVersion\n  }\n\n  /** Set Document list filter\n   * @param filter - filter\n   * @returns document list builder based on the options and filter provided. See {@link DocumentListBuilder}\n   */\n  filter(filter: string): DocumentListBuilder {\n    return this.clone({options: {...(this.spec.options || {}), filter}})\n  }\n\n  /** Get Document list filter\n   * @returns filter\n   */\n  getFilter(): string | undefined {\n    return this.spec.options?.filter\n  }\n\n  /** Set Document list schema type name\n   * @param type - schema type name. See {@link SchemaType}\n   * @returns document list builder based on the schema type name provided. See {@link DocumentListBuilder}\n   */\n  schemaType(type: SchemaType | string): DocumentListBuilder {\n    const schemaTypeName = typeof type === 'string' ? type : type.name\n    return this.clone({schemaTypeName})\n  }\n\n  /** Get Document list schema type name\n   * @returns schema type name\n   */\n  getSchemaType(): string | undefined {\n    return this.spec.schemaTypeName\n  }\n\n  /** Set Document list options' parameters\n   * @param params - parameters\n   * @returns document list builder based on the options provided. See {@link DocumentListBuilder}\n   */\n  params(params: Record<string, unknown>): DocumentListBuilder {\n    return this.clone({\n      options: {...(this.spec.options || {filter: ''}), params},\n    })\n  }\n\n  /** Get Document list options' parameters\n   * @returns options\n   */\n  getParams(): Record<string, unknown> | undefined {\n    return this.spec.options?.params\n  }\n\n  /** Set Document list default ordering\n   * @param ordering - default sort ordering array. See {@link SortOrderingItem}\n   * @returns document list builder based on ordering provided. See {@link DocumentListBuilder}\n   */\n  defaultOrdering(ordering: SortOrderingItem[]): DocumentListBuilder {\n    if (!Array.isArray(ordering)) {\n      throw new Error('`defaultOrdering` must be an array of order clauses')\n    }\n\n    return this.clone({\n      options: {...(this.spec.options || {filter: ''}), defaultOrdering: ordering},\n    })\n  }\n\n  /** Get Document list default ordering\n   * @returns default ordering. See {@link SortOrderingItem}\n   */\n  getDefaultOrdering(): SortOrderingItem[] | undefined {\n    return this.spec.options?.defaultOrdering\n  }\n\n  /** Serialize Document list\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns document list object based on path provided in options. See {@link DocumentList}\n   */\n  serialize(options: SerializeOptions = {path: []}): DocumentList {\n    if (typeof this.spec.id !== 'string' || !this.spec.id) {\n      throw new SerializeError(\n        '`id` is required for document lists',\n        options.path,\n        options.index,\n        this.spec.title\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!this.spec.options || !this.spec.options.filter) {\n      throw new SerializeError(\n        '`filter` is required for document lists',\n        options.path,\n        this.spec.id,\n        this.spec.title\n      ).withHelpUrl(HELP_URL.FILTER_REQUIRED)\n    }\n\n    return {\n      ...super.serialize(options),\n      type: 'documentList',\n      schemaTypeName: this.spec.schemaTypeName,\n      child: this.spec.child || createDocumentChildResolverForItem(this._context),\n      options: {\n        ...this.spec.options,\n        apiVersion:\n          this.spec.options.apiVersion ||\n          // If this is a simple type filter, use modern API version - otherwise default to v1\n          (this.spec.options?.filter === '_type == $type' ? '2021-06-07' : '1'),\n        filter: validateFilter(this.spec, options),\n      },\n    }\n  }\n\n  /** Clone Document list builder (allows for options overriding)\n   * @param withSpec - override document list spec. See {@link PartialDocumentList}\n   * @returns document list builder. See {@link DocumentListBuilder}\n   */\n  clone(withSpec?: PartialDocumentList): DocumentListBuilder {\n    const builder = new DocumentListBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n\n    if (!this.initialValueTemplatesSpecified) {\n      builder.spec.initialValueTemplates = inferInitialValueTemplates(this._context, builder.spec)\n    }\n\n    if (!builder.spec.schemaTypeName) {\n      builder.spec.schemaTypeName = inferTypeName(builder.spec)\n    }\n\n    return builder\n  }\n\n  /** Get Document list spec\n   * @returns document list spec. See {@link PartialDocumentList}\n   */\n  getSpec(): PartialDocumentList {\n    return this.spec\n  }\n}\n\nfunction inferInitialValueTemplates(\n  context: StructureContext,\n  spec: PartialDocumentList\n): InitialValueTemplateItem[] | undefined {\n  const {document} = context\n  const {schemaTypeName, options} = spec\n  const {filter, params} = options || {filter: '', params: {}}\n  const typeNames = schemaTypeName\n    ? [schemaTypeName]\n    : Array.from(new Set(getTypeNamesFromFilter(filter, params)))\n\n  if (typeNames.length === 0) {\n    return undefined\n  }\n\n  return typeNames\n    .flatMap((schemaType) =>\n      document.resolveNewDocumentOptions({\n        type: 'structure',\n        schemaType,\n      })\n    )\n    .map((option) => ({...option, icon: ComposeIcon}))\n}\n\nfunction inferTypeName(spec: PartialDocumentList): string | undefined {\n  const {options} = spec\n  const {filter, params} = options || {filter: '', params: {}}\n  const typeNames = getTypeNamesFromFilter(filter, params)\n  return typeNames.length === 1 ? typeNames[0] : undefined\n}\n\n/** @internal */\nexport function getTypeNamesFromFilter(\n  filter: string,\n  params: Record<string, unknown> = {}\n): string[] {\n  let typeNames = getTypeNamesFromEqualityFilter(filter, params)\n\n  if (typeNames.length === 0) {\n    typeNames = getTypeNamesFromInTypesFilter(filter, params)\n  }\n\n  return typeNames\n}\n\n// From _type == \"movie\" || _type == $otherType\nfunction getTypeNamesFromEqualityFilter(\n  filter: string,\n  params: Record<string, unknown> = {}\n): string[] {\n  const pattern =\n    /\\b_type\\s*==\\s*(['\"].*?['\"]|\\$.*?(?:\\s|$))|\\B(['\"].*?['\"]|\\$.*?(?:\\s|$))\\s*==\\s*_type/g\n  const matches: string[] = []\n  let match\n  while ((match = pattern.exec(filter)) !== null) {\n    matches.push(match[1] || match[2])\n  }\n\n  return matches\n    .map((candidate) => {\n      const typeName = candidate[0] === '$' ? params[candidate.slice(1)] : candidate\n      const normalized = ((typeName as string) || '').trim().replace(/^[\"']|[\"']$/g, '')\n      return normalized\n    })\n    .filter(Boolean)\n}\n\n// From _type in [\"dog\", \"cat\", $otherSpecies]\nfunction getTypeNamesFromInTypesFilter(\n  filter: string,\n  params: Record<string, unknown> = {}\n): string[] {\n  const pattern = /\\b_type\\s+in\\s+\\[(.*?)\\]/\n  const matches = filter.match(pattern)\n  if (!matches) {\n    return []\n  }\n\n  return matches[1]\n    .split(/,\\s*/)\n    .map((match) => match.trim().replace(/^[\"']+|[\"']+$/g, ''))\n    .map((item) => (item[0] === '$' ? params[item.slice(1)] : item))\n    .filter(Boolean) as string[]\n}\n","import {find} from 'lodash'\nimport {SerializePath, SerializeOptions, Divider} from './StructureNodes'\nimport {ChildResolverOptions, ChildResolver} from './ChildResolver'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {ListItem, ListItemBuilder} from './ListItem'\nimport {IntentChecker} from './Intent'\nimport {isDocumentListItem} from './DocumentListItem'\nimport {\n  GenericListBuilder,\n  BuildableGenericList,\n  GenericList,\n  GenericListInput,\n  shallowIntentChecker,\n} from './GenericList'\nimport {StructureContext} from './types'\nimport {isRecord} from 'sanity'\n\nconst getArgType = (thing: ListItem) => {\n  if (thing instanceof ListBuilder) {\n    return 'ListBuilder'\n  }\n\n  if (isPromise<ListItem>(thing)) {\n    return 'Promise'\n  }\n\n  return Array.isArray(thing) ? 'array' : typeof thing\n}\n\nconst isListItem = (item: ListItem | Divider): item is ListItem => {\n  return item.type === 'listItem'\n}\n\nconst defaultCanHandleIntent: IntentChecker = (intentName: string, params, context) => {\n  const pane = context.pane as List\n  const items = pane.items || []\n  return (\n    items\n      .filter(isDocumentListItem)\n      .some((item) => item.schemaType.name === params.type && item._id === params.id) ||\n    shallowIntentChecker(intentName, params, context)\n  )\n}\n\nconst resolveChildForItem: ChildResolver = (itemId: string, options: ChildResolverOptions) => {\n  const parentItem = options.parent as List\n  const items = parentItem.items.filter(isListItem)\n  const target = (items.find((item) => item.id === itemId) || {child: undefined}).child\n\n  if (!target || typeof target !== 'function') {\n    return target\n  }\n\n  return typeof target === 'function' ? target(itemId, options) : target\n}\n\nfunction maybeSerializeListItem(\n  item: ListItem | ListItemBuilder | Divider,\n  index: number,\n  path: SerializePath\n): ListItem | Divider {\n  if (item instanceof ListItemBuilder) {\n    return item.serialize({path, index})\n  }\n\n  const listItem = item as ListItem\n  if (listItem && listItem.type === 'divider') {\n    return item as Divider\n  }\n\n  if (!listItem || listItem.type !== 'listItem') {\n    const gotWhat = (listItem && listItem.type) || getArgType(listItem)\n    const helpText = gotWhat === 'array' ? ' - did you forget to spread (...moreItems)?' : ''\n    throw new SerializeError(\n      `List items must be of type \"listItem\", got \"${gotWhat}\"${helpText}`,\n      path,\n      index\n    ).withHelpUrl(HELP_URL.INVALID_LIST_ITEM)\n  }\n\n  return item\n}\n\nfunction isPromise<T>(thing: unknown): thing is PromiseLike<T> {\n  return isRecord(thing) && typeof thing.then === 'function'\n}\n\n/**\n * Interface for List\n *\n * @public\n */\nexport interface List extends GenericList {\n  type: 'list'\n  /** List items. See {@link ListItem} and {@link Divider} */\n  items: (ListItem | Divider)[]\n}\n\n/**\n * Interface for list input\n *\n * @public\n */\nexport interface ListInput extends GenericListInput {\n  /** List input items array. See {@link ListItem}, {@link ListItemBuilder} and {@link Divider} */\n  items?: (ListItem | ListItemBuilder | Divider)[]\n}\n\n/**\n * Interface for buildable list\n *\n * @public\n */\nexport interface BuildableList extends BuildableGenericList {\n  /** List items. See {@link ListItem}, {@link ListItemBuilder} and {@link Divider} */\n  items?: (ListItem | ListItemBuilder | Divider)[]\n}\n\n/**\n * A `ListBuilder` is used to build a list of items in the desk tool.\n *\n * @public */\nexport class ListBuilder extends GenericListBuilder<BuildableList, ListBuilder> {\n  /** buildable list option object. See {@link BuildableList} */\n  protected spec: BuildableList\n\n  constructor(\n    /**\n     * Desk structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: ListInput\n  ) {\n    super()\n    this.spec = spec ? spec : {}\n    this.initialValueTemplatesSpecified = Boolean(spec && spec.initialValueTemplates)\n  }\n\n  /**\n   * Set list builder based on items provided\n   * @param items - list items. See {@link ListItemBuilder}, {@link ListItem} and {@link Divider}\n   * @returns list builder based on items provided. See {@link ListBuilder}\n   */\n  items(items: (ListItemBuilder | ListItem | Divider)[]): ListBuilder {\n    return this.clone({items})\n  }\n\n  /** Get list builder items\n   * @returns list items. See {@link BuildableList}\n   */\n  getItems(): BuildableList['items'] {\n    return this.spec.items\n  }\n\n  /** Serialize list builder\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns list based on path in options. See {@link List}\n   */\n  serialize(options: SerializeOptions = {path: []}): List {\n    const id = this.spec.id\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for lists',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    const items = typeof this.spec.items === 'undefined' ? [] : this.spec.items\n    if (!Array.isArray(items)) {\n      throw new SerializeError(\n        '`items` must be an array of items',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.LIST_ITEMS_MUST_BE_ARRAY)\n    }\n\n    const path = (options.path || []).concat(id)\n    const serializedItems = items.map((item, index) => maybeSerializeListItem(item, index, path))\n    const dupes = serializedItems.filter((val, i) => find(serializedItems, {id: val.id}, i + 1))\n\n    if (dupes.length > 0) {\n      const dupeIds = dupes.map((item) => item.id).slice(0, 5)\n      const dupeDesc = dupes.length > 5 ? `${dupeIds.join(', ')}...` : dupeIds.join(', ')\n      throw new SerializeError(\n        `List items with same ID found (${dupeDesc})`,\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.LIST_ITEM_IDS_MUST_BE_UNIQUE)\n    }\n\n    return {\n      ...super.serialize(options),\n      type: 'list',\n      canHandleIntent: this.spec.canHandleIntent || defaultCanHandleIntent,\n      child: this.spec.child || resolveChildForItem,\n      items: serializedItems,\n    }\n  }\n\n  /**\n   * Clone list builder and return new list builder based on context and spec provided\n   * @param withSpec - list options. See {@link BuildableList}\n   * @returns new list builder based on context and spec provided. See {@link ListBuilder}\n   */\n  clone(withSpec?: BuildableList): ListBuilder {\n    const builder = new ListBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {SchemaType} from '@sanity/types'\nimport {Observable} from 'rxjs'\nimport {SerializeOptions, Serializable, Collection, CollectionBuilder} from './StructureNodes'\nimport {ChildResolver, ItemChild} from './ChildResolver'\nimport {DocumentListBuilder} from './DocumentList'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {ListBuilder} from './List'\nimport {DocumentBuilder} from './Document'\nimport {ComponentBuilder} from './Component'\nimport {validateId} from './util/validateId'\nimport {StructureContext} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\n\n/**\n * Unserialized list item child.\n * See {@link Collection}, {@link CollectionBuilder}, {@link ChildResolver} and {@link ItemChild}\n *\n * @public\n */\nexport type UnserializedListItemChild =\n  | Collection\n  | CollectionBuilder\n  | ChildResolver\n  | Observable<ItemChild>\n\n/**\n * Child of List Item\n * See {@link Collection}, {@link ChildResolver}, {@link ItemChild}\n * @public\n */\nexport type ListItemChild = Collection | ChildResolver | Observable<ItemChild> | undefined\n\n/**\n * Interface for serialize list item options\n *\n * @public\n */\nexport interface ListItemSerializeOptions extends SerializeOptions {\n  /** Check if list item title is optional */\n  titleIsOptional?: boolean\n}\n\n/**\n * Interface for ist item display options\n *\n * @public */\nexport interface ListItemDisplayOptions {\n  /** Check if list item display should show icon */\n  showIcon?: boolean\n}\n\n/**\n * interface for list item input\n *\n * @public */\nexport interface ListItemInput {\n  /** List item id */\n  id: string\n  /** List item title */\n  title?: string\n  /** List item icon */\n  icon?: React.ComponentType | React.ReactNode\n  /** List item child. See {@link ListItemChild} */\n  child?: ListItemChild\n  /** List item display options. See {@link ListItemDisplayOptions} */\n  displayOptions?: ListItemDisplayOptions\n  /** List item schema type. See {@link SchemaType} */\n  schemaType?: SchemaType | string\n}\n\n/**\n * Interface for List Item\n *\n * @public */\nexport interface ListItem {\n  /** List item id */\n  id: string\n  /** List item type */\n  type: string\n  /** List item title */\n  title?: string\n  /** List item icon */\n  icon?: React.ComponentType | React.ReactNode\n  /** List item child. See {@link ListItemChild} */\n  child?: ListItemChild\n  /** List item display options. See {@link ListItemDisplayOptions} */\n  displayOptions?: ListItemDisplayOptions\n  /** List item schema type. See {@link SchemaType} */\n  schemaType?: SchemaType\n}\n\n/**\n * Interface for unserialized list items.\n *\n * @public\n */\nexport interface UnserializedListItem {\n  /** List item ID */\n  id: string\n  /** List item title */\n  title: string\n  /** List item icon */\n  icon?: React.ComponentType | React.ReactNode\n  /** List item child. See {@link UnserializedListItemChild} */\n  child?: UnserializedListItemChild\n  /** List item display options. See {@link ListItemDisplayOptions} */\n  displayOptions?: ListItemDisplayOptions\n  /** List item schema. See {@link SchemaType} */\n  schemaType?: SchemaType | string\n}\n\n/**\n * Partial list item. See {@link UnserializedListItem}\n *\n * @public */\nexport type PartialListItem = Partial<UnserializedListItem>\n\n/**\n * Class for building list items\n *\n * @public */\nexport class ListItemBuilder implements Serializable<ListItem> {\n  /** List item option object. See {@link PartialListItem} */\n  protected spec: PartialListItem\n\n  constructor(\n    /**\n     * Desk structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: ListItemInput\n  ) {\n    this.spec = spec ? spec : {}\n  }\n\n  /**\n   * Set list item ID\n   * @returns list item builder based on ID provided. See {@link ListItemBuilder}\n   */\n  id(id: string): ListItemBuilder {\n    return this.clone({id})\n  }\n\n  /**\n   * Get list item ID\n   * @returns list item ID. See {@link PartialListItem}\n   */\n  getId(): PartialListItem['id'] {\n    return this.spec.id\n  }\n\n  /**\n   * Set list item title\n   * @returns list item builder based on title provided. See {@link ListItemBuilder}\n   */\n  title(title: string): ListItemBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  /**\n   * Get list item title\n   * @returns list item title. See {@link PartialListItem}\n   */\n  getTitle(): PartialListItem['title'] {\n    return this.spec.title\n  }\n\n  /**\n   * Set list item icon\n   * @returns list item builder based on icon provided. See {@link ListItemBuilder}\n   */\n  icon(icon: React.ComponentType | React.ReactNode): ListItemBuilder {\n    return this.clone({icon})\n  }\n\n  /**\n   * Set if list item should show icon\n   * @returns list item builder based on showIcon provided. See {@link ListItemBuilder}\n   */\n  showIcon(enabled = true): ListItemBuilder {\n    return this.clone({\n      displayOptions: {...(this.spec.displayOptions || {}), showIcon: enabled},\n    })\n  }\n\n  /**\n   * Check if list item should show icon\n   * @returns true if it should show the icon, false if not, undefined if not set\n   */\n  getShowIcon(): boolean | undefined {\n    return this.spec.displayOptions ? this.spec.displayOptions.showIcon : undefined\n  }\n\n  /**\n   *Get list item icon\n   * @returns list item icon. See {@link PartialListItem}\n   */\n  getIcon(): PartialListItem['icon'] {\n    return this.spec.icon\n  }\n\n  /**\n   * Set list item child\n   * @param child - list item child. See {@link UnserializedListItemChild}\n   * @returns list item builder based on child provided. See {@link ListItemBuilder}\n   */\n  child(child: UnserializedListItemChild): ListItemBuilder {\n    return this.clone({child})\n  }\n\n  /**\n   * Get list item child\n   * @returns list item child. See {@link PartialListItem}\n   */\n  getChild(): PartialListItem['child'] {\n    return this.spec.child\n  }\n\n  /**\n   * Set list item schema type\n   * @param schemaType - list item schema type. See {@link SchemaType}\n   * @returns list item builder based on schema type provided. See {@link ListItemBuilder}\n   */\n  schemaType(schemaType: SchemaType | string): ListItemBuilder {\n    return this.clone({schemaType})\n  }\n\n  /**\n   * Get list item schema type\n   * @returns list item schema type. See {@link PartialListItem}\n   */\n  getSchemaType(): PartialListItem['schemaType'] {\n    const schemaType = this.spec.schemaType\n\n    if (typeof schemaType === 'string') {\n      return this._context.schema.get(schemaType)\n    }\n\n    return this.spec.schemaType\n  }\n\n  /** Serialize list item builder\n   * @param options - serialization options. See {@link ListItemSerializeOptions}\n   * @returns list item node based on path provided in options. See {@link ListItem}\n   */\n  serialize(options: ListItemSerializeOptions = {path: []}): ListItem {\n    const {id, title, child} = this.spec\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for list items',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!options.titleIsOptional && (typeof title !== 'string' || !title)) {\n      throw new SerializeError('`title` is required for list items', options.path, id).withHelpUrl(\n        HELP_URL.TITLE_REQUIRED\n      )\n    }\n\n    let schemaType = this.spec.schemaType\n    if (typeof schemaType === 'string') {\n      const type = this._context.schema.get(schemaType)\n      if (!type) {\n        throw new SerializeError(\n          `Could not find type \"${schemaType}\" in schema`,\n          options.path,\n          id\n        ).withHelpUrl(HELP_URL.SCHEMA_TYPE_NOT_FOUND)\n      }\n\n      schemaType = type\n    }\n\n    const serializeOptions = {path: options.path.concat(id), hint: 'child'}\n    let listChild =\n      child instanceof ComponentBuilder ||\n      child instanceof DocumentListBuilder ||\n      child instanceof DocumentBuilder ||\n      child instanceof ListBuilder\n        ? child.serialize(serializeOptions)\n        : child\n\n    // In the case of a function, create a bound version that will pass the correct serialize\n    // context, so we may lazily resolve it at some point in the future without losing context\n    if (typeof listChild === 'function') {\n      const originalChild = listChild\n      listChild = (itemId, childOptions) => {\n        return originalChild(itemId, {...childOptions, serializeOptions})\n      }\n    }\n\n    return {\n      ...this.spec,\n      id: validateId(id, options.path, options.index),\n      schemaType,\n      child: listChild,\n      title,\n      type: 'listItem',\n    }\n  }\n\n  /** Clone list item builder\n   * @param withSpec - partial list item options. See {@link PartialListItem}\n   * @returns list item builder based on context and spec provided. See {@link ListItemBuilder}\n   */\n  clone(withSpec?: PartialListItem): ListItemBuilder {\n    const builder = new ListItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n","import {SchemaType} from '@sanity/types'\nimport {SerializeOptions} from './StructureNodes'\nimport {ListItemBuilder, ListItem, UnserializedListItem, ListItemInput} from './ListItem'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {DocumentBuilder} from './Document'\nimport {StructureContext} from './types'\nimport {isRecord} from 'sanity'\n\n/**\n * Interface for document list item input\n *\n * @public\n */\nexport interface DocumentListItemInput extends ListItemInput {\n  /** Document list item input schema type. See {@link SchemaType} */\n  schemaType: SchemaType | string\n}\n\n/**\n * Interface for document list item\n *\n * @public\n */\nexport interface DocumentListItem extends ListItem {\n  /** Document schema type. See {@link SchemaType} */\n  schemaType: SchemaType\n  /** Document ID */\n  _id: string\n}\n\n/**\n * Partial document list item\n *\n * @public\n */\nexport type PartialDocumentListItem = Partial<UnserializedListItem>\n\nconst createDefaultChildResolver =\n  (context: StructureContext, spec: PartialDocumentListItem) => (documentId: string) => {\n    const schemaType =\n      spec.schemaType &&\n      (typeof spec.schemaType === 'string' ? spec.schemaType : spec.schemaType.name)\n\n    return schemaType\n      ? context.resolveDocumentNode({schemaType, documentId})\n      : new DocumentBuilder(context).id('documentEditor').documentId(documentId)\n  }\n\n/**\n * Class for building a document list item\n *\n * @public\n */\nexport class DocumentListItemBuilder extends ListItemBuilder {\n  /** Document list options. See {@link PartialDocumentListItem} */\n  protected spec: PartialDocumentListItem\n\n  constructor(\n    /**\n     * Desk structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: DocumentListItemInput\n  ) {\n    super(_context, spec)\n    this.spec = spec ? spec : {}\n  }\n\n  /**\n   * Serialize document list item\n   * @param options - serialization options. See {@link SerializeOptions}\n   * @returns document list item object based on path provided in options. See {@link DocumentListItem}\n   */\n  serialize(options: SerializeOptions = {path: []}): DocumentListItem {\n    const spec = super.serialize({...options, titleIsOptional: true})\n\n    if (!spec.schemaType) {\n      throw new SerializeError(\n        '`schemaType` is required for document list items',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.SCHEMA_TYPE_REQUIRED)\n    }\n\n    const child = spec.child || createDefaultChildResolver(this._context, spec)\n    return {...spec, child, schemaType: spec.schemaType, _id: spec.id}\n  }\n\n  /** Clone Document list item builder (allows for options overriding)\n   * @param withSpec - Document list item builder options. See {@link PartialDocumentListItem}\n   * @returns document list item builder. See {@link DocumentListItemBuilder}\n   */\n  clone(withSpec?: PartialDocumentListItem): DocumentListItemBuilder {\n    const builder = new DocumentListItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n\n/** @internal */\nexport function isDocumentListItem(item: unknown): item is DocumentListItem {\n  return isRecord(item) && typeof item.schemaType !== 'undefined' && typeof item._id === 'string'\n}\n","import {SchemaType} from '@sanity/types'\nimport {DocumentListBuilder, DocumentListInput, PartialDocumentList} from './DocumentList'\nimport {Child} from './StructureNodes'\nimport {DEFAULT_INTENT_HANDLER} from './Intent'\nimport {GenericListInput} from './GenericList'\nimport {StructureContext} from './types'\n\n/**\n * Interface for document type list input\n *\n * @public\n */\nexport interface DocumentTypeListInput extends Partial<GenericListInput> {\n  /** Document type list input schema type. See {@link SchemaType} */\n  schemaType: SchemaType | string\n}\n\n/**\n * Class for building a document type list\n *\n * @public\n */\nexport class DocumentTypeListBuilder extends DocumentListBuilder {\n  /** Document list options. See {@link PartialDocumentList} */\n  protected spec: PartialDocumentList\n\n  constructor(\n    /**\n     * Desk structure context. See {@link StructureContext}\n     */\n    protected _context: StructureContext,\n    spec?: DocumentListInput\n  ) {\n    super(_context)\n    this.spec = spec ? spec : {}\n  }\n\n  /**\n   * Set Document type list child\n   * @param child - Child component. See {@link Child}\n   * @returns document type list builder based on child component provided without default intent handler. See {@link DocumentTypeListBuilder}\n   */\n  child(child: Child): DocumentTypeListBuilder {\n    return this.cloneWithoutDefaultIntentHandler({child})\n  }\n\n  /** Clone Document type list builder (allows for options overriding)\n   * @param withSpec - Document type list builder options. See {@link PartialDocumentList}\n   * @returns document type list builder. See {@link DocumentTypeListBuilder}\n   */\n  clone(withSpec?: PartialDocumentList): DocumentTypeListBuilder {\n    const parent = super.clone(withSpec)\n    const builder = new DocumentTypeListBuilder(this._context)\n    builder.spec = {...this.spec, ...parent.getSpec(), ...(withSpec || {})}\n    return builder\n  }\n\n  /** Clone Document type list builder (allows for options overriding) and remove default intent handler\n   * @param withSpec - Document type list builder options. See {@link PartialDocumentList}\n   * @returns document type list builder without default intent handler. See {@link DocumentTypeListBuilder}\n   */\n  cloneWithoutDefaultIntentHandler(withSpec?: PartialDocumentList): DocumentTypeListBuilder {\n    const parent = super.clone(withSpec)\n    const builder = new DocumentTypeListBuilder(this._context)\n    const canHandleIntent = this.spec.canHandleIntent\n    const shouldOverride = canHandleIntent && canHandleIntent.identity === DEFAULT_INTENT_HANDLER\n    const override = shouldOverride ? {canHandleIntent: undefined} : {}\n    builder.spec = {\n      ...parent.getSpec(),\n      ...this.spec,\n      ...(withSpec || {}),\n      ...override,\n    }\n    return builder\n  }\n}\n","import {SchemaType} from '@sanity/types'\nimport {startCase} from 'lodash'\nimport {StackCompactIcon, StackIcon} from '@sanity/icons'\nimport {MenuItemBuilder, getOrderingMenuItemsForSchemaType} from './MenuItem'\nimport {DEFAULT_SELECTED_ORDERING_OPTION} from './Sort'\nimport {DocumentListBuilder} from './DocumentList'\nimport {ListItemBuilder, ListItem} from './ListItem'\nimport {DocumentTypeListBuilder, DocumentTypeListInput} from './DocumentTypeList'\nimport {defaultIntentChecker} from './Intent'\nimport {List} from './List'\nimport {Collection} from './StructureNodes'\nimport {StructureContext} from './types'\n\nfunction shouldShowIcon(schemaType: SchemaType): boolean {\n  const preview = schemaType.preview\n  return Boolean(preview && (preview.prepare || (preview.select && preview.select.media)))\n}\n\nconst BUNDLED_DOC_TYPES = ['sanity.imageAsset', 'sanity.fileAsset']\n\nfunction isBundledDocType(typeName: string) {\n  return BUNDLED_DOC_TYPES.includes(typeName)\n}\n\nfunction isDocumentType(schemaType: SchemaType) {\n  return schemaType.type?.name === 'document'\n}\n\nfunction isList(collection: Collection): collection is List {\n  return collection.type === 'list'\n}\n\nexport function getDocumentTypes({schema}: StructureContext): string[] {\n  return schema\n    .getTypeNames()\n    .filter((n) => {\n      const schemaType = schema.get(n)\n      return schemaType && isDocumentType(schemaType)\n    })\n    .filter((n) => !isBundledDocType(n))\n}\n\nexport function getDocumentTypeListItems(context: StructureContext): ListItemBuilder[] {\n  const types = getDocumentTypes(context)\n  return types.map((typeName) => getDocumentTypeListItem(context, typeName))\n}\n\nexport function getDocumentTypeListItem(\n  context: StructureContext,\n  typeName: string\n): ListItemBuilder {\n  const {schema} = context\n\n  const type = schema.get(typeName)\n  if (!type) {\n    throw new Error(`Schema type with name \"${typeName}\" not found`)\n  }\n\n  const title = type.title || startCase(typeName)\n\n  return new ListItemBuilder(context)\n    .id(typeName)\n    .title(title)\n    .schemaType(type)\n    .child((id, childContext) => {\n      const parent = childContext.parent as Collection\n      const parentItem = isList(parent)\n        ? (parent.items.find((item) => item.id === id) as ListItem)\n        : null\n\n      let list = getDocumentTypeList(context, typeName)\n      if (parentItem && parentItem.title) {\n        list = list.title(parentItem.title)\n      }\n\n      return list\n    })\n}\n\nexport function getDocumentTypeList(\n  context: StructureContext,\n  typeNameOrSpec: string | DocumentTypeListInput\n): DocumentListBuilder {\n  const {schema, resolveDocumentNode} = context\n\n  const schemaType = typeof typeNameOrSpec === 'string' ? typeNameOrSpec : typeNameOrSpec.schemaType\n  const typeName = typeof schemaType === 'string' ? schemaType : schemaType.name\n  const spec: DocumentTypeListInput =\n    typeof typeNameOrSpec === 'string' ? {schemaType} : typeNameOrSpec\n\n  const type = schema.get(typeName)\n  if (!type) {\n    throw new Error(`Schema type with name \"${typeName}\" not found`)\n  }\n\n  const title = type.title || startCase(typeName)\n  const showIcons = shouldShowIcon(type)\n\n  return new DocumentTypeListBuilder(context)\n    .id(spec.id || typeName)\n    .title(spec.title || title)\n    .filter('_type == $type')\n    .params({type: typeName})\n    .schemaType(type)\n    .showIcons(showIcons)\n    .defaultOrdering(DEFAULT_SELECTED_ORDERING_OPTION.by)\n    .menuItemGroups(\n      spec.menuItemGroups || [\n        {id: 'sorting', title: 'Sort'},\n        {id: 'layout', title: 'Layout'},\n        {id: 'actions', title: 'Actions'},\n      ]\n    )\n    .child(\n      spec.child ||\n        ((documentId: string) => resolveDocumentNode({schemaType: typeName, documentId}))\n    )\n    .canHandleIntent(spec.canHandleIntent || defaultIntentChecker)\n    .menuItems(\n      spec.menuItems || [\n        // Create new (from action button) will be added in serialization step of GenericList\n\n        // Sort by <Y>\n        ...getOrderingMenuItemsForSchemaType(context, type),\n\n        // Display as <Z>\n        new MenuItemBuilder(context)\n          .group('layout')\n          .title('Compact view')\n          .icon(StackCompactIcon)\n          .action('setLayout')\n          .params({layout: 'default'}),\n\n        new MenuItemBuilder(context)\n          .group('layout')\n          .title('Detailed view')\n          .icon(StackIcon)\n          .action('setLayout')\n          .params({layout: 'detail'}),\n\n        // Create new (from menu) will be added in serialization step of GenericList\n      ]\n    )\n}\n","import {uniqueId} from 'lodash'\nimport type {SchemaType} from '@sanity/types'\nimport {isValidElementType} from 'react-is'\nimport {ListBuilder} from './List'\nimport {\n  getDocumentTypeListItems,\n  getDocumentTypeListItem,\n  getDocumentTypeList,\n} from './documentTypeListItems'\nimport {MenuItemBuilder, getOrderingMenuItemsForSchemaType, getOrderingMenuItem} from './MenuItem'\nimport {ListItemBuilder} from './ListItem'\nimport {MenuItemGroupBuilder} from './MenuItemGroup'\nimport {DocumentListBuilder} from './DocumentList'\nimport type {Divider} from './StructureNodes'\nimport {DocumentBuilder, documentFromEditor, documentFromEditorWithInitialValue} from './Document'\nimport {ComponentInput, ComponentBuilder} from './Component'\nimport {DocumentListItemBuilder} from './DocumentListItem'\nimport * as views from './views'\nimport {\n  InitialValueTemplateItemBuilder,\n  defaultInitialValueTemplateItems,\n  menuItemsFromInitialValueTemplateItems,\n} from './InitialValueTemplateItem'\nimport type {\n  StructureBuilder,\n  UserComponent,\n  StructureContext,\n  DefaultDocumentNodeResolver,\n} from './types'\nimport {Source, getConfigContextFromSource, getPublishedId} from 'sanity'\n\n/** @internal */\nexport interface StructureBuilderOptions {\n  source: Source\n  defaultDocumentNode?: DefaultDocumentNodeResolver\n}\n\nfunction hasIcon(schemaType?: SchemaType | string): boolean {\n  if (!schemaType || typeof schemaType === 'string') {\n    return false\n  }\n\n  return Boolean(schemaType.icon)\n}\n\nfunction getDefaultStructure(context: StructureContext): ListBuilder {\n  const items = getDocumentTypeListItems(context)\n  return new ListBuilder(context)\n    .id('__root__')\n    .title('Content')\n    .items(items)\n    .showIcons(items.some((item) => hasIcon(item.getSchemaType())))\n}\n\n/** @internal */\nexport function createStructureBuilder({\n  defaultDocumentNode,\n  source,\n}: StructureBuilderOptions): StructureBuilder {\n  const configContext = getConfigContextFromSource(source)\n  const context: StructureContext = {\n    ...source,\n    getStructureBuilder: () => structureBuilder,\n    resolveDocumentNode: (options) => {\n      let builder =\n        defaultDocumentNode?.(structureBuilder, {...options, ...configContext}) ||\n        new DocumentBuilder(context)\n\n      if (!builder.getId()) {\n        builder = builder.id('documentEditor')\n      }\n\n      if (options.documentId) {\n        builder = builder.documentId(getPublishedId(options.documentId))\n      }\n\n      return builder.schemaType(options.schemaType)\n    },\n  }\n\n  const structureBuilder: StructureBuilder = {\n    defaults: () => getDefaultStructure(context),\n    documentTypeList: (...args) => getDocumentTypeList(context, ...args),\n    documentTypeListItem: (...args) => getDocumentTypeListItem(context, ...args),\n    documentTypeListItems: (...args) => getDocumentTypeListItems(context, ...args),\n    document: (...args) => new DocumentBuilder(context, ...args),\n    documentWithInitialValueTemplate: (...args) =>\n      documentFromEditorWithInitialValue(context, ...args),\n    defaultDocument: context.resolveDocumentNode,\n\n    list: (...args) => new ListBuilder(context, ...args),\n    listItem: (...args) => new ListItemBuilder(context, ...args),\n\n    menuItem: (...args) => new MenuItemBuilder(context, ...args),\n    menuItemGroup: (...args) => new MenuItemGroupBuilder(context, ...args),\n    menuItemsFromInitialValueTemplateItems: (...args) =>\n      menuItemsFromInitialValueTemplateItems(context, ...args),\n\n    documentList: (...args) => new DocumentListBuilder(context, ...args),\n    documentListItem: (...args) => new DocumentListItemBuilder(context, ...args),\n\n    orderingMenuItem: (...args) => getOrderingMenuItem(context, ...args),\n    orderingMenuItemsForType: (...args) => getOrderingMenuItemsForSchemaType(context, ...args),\n\n    editor: (...args) => documentFromEditor(context, ...args),\n\n    defaultInitialValueTemplateItems: (...args) =>\n      defaultInitialValueTemplateItems(context, ...args),\n\n    initialValueTemplateItem: (\n      templateId: string,\n      parameters?: Record<string, unknown>\n    ): InitialValueTemplateItemBuilder =>\n      new InitialValueTemplateItemBuilder(context, {\n        id: templateId,\n        parameters,\n        templateId,\n      }),\n\n    component: (spec?: ComponentInput | UserComponent) => {\n      return isValidElementType(spec)\n        ? new ComponentBuilder().component(spec as UserComponent)\n        : new ComponentBuilder(spec as ComponentInput)\n    },\n\n    divider: (): Divider => ({id: uniqueId('__divider__'), type: 'divider'}),\n\n    view: views,\n    context,\n  }\n\n  return structureBuilder\n}\n","import React, {useMemo, useState} from 'react'\nimport {DeskToolContext} from './DeskToolContext'\nimport {createStructureBuilder, DefaultDocumentNodeResolver} from './structureBuilder'\nimport {DeskToolContextValue, StructureResolver, UnresolvedPaneNode} from './types'\nimport {useConfigContextFromSource, useDocumentStore, useSource} from 'sanity'\n\n/** @internal */\nexport interface DeskToolProviderProps {\n  structure?: StructureResolver\n  defaultDocumentNode?: DefaultDocumentNodeResolver\n  children: React.ReactNode\n}\n\n/** @internal */\nexport function DeskToolProvider({\n  defaultDocumentNode,\n  structure: resolveStructure,\n  children,\n}: DeskToolProviderProps): React.ReactElement {\n  const [layoutCollapsed, setLayoutCollapsed] = useState(false)\n  const source = useSource()\n  const configContext = useConfigContextFromSource(source)\n  const documentStore = useDocumentStore()\n\n  const S = useMemo(() => {\n    return createStructureBuilder({\n      defaultDocumentNode,\n      source,\n    })\n  }, [defaultDocumentNode, source])\n\n  const rootPaneNode = useMemo(() => {\n    // TODO: unify types and remove cast\n    if (resolveStructure)\n      return resolveStructure(S, {\n        ...configContext,\n        documentStore,\n      }) as UnresolvedPaneNode\n    return S.defaults() as UnresolvedPaneNode\n  }, [S, resolveStructure, configContext, documentStore])\n\n  const features: DeskToolContextValue['features'] = useMemo(\n    () => ({\n      backButton: layoutCollapsed,\n      resizablePanes: !layoutCollapsed,\n      reviewChanges: !layoutCollapsed,\n      splitPanes: !layoutCollapsed,\n      splitViews: !layoutCollapsed,\n    }),\n    [layoutCollapsed]\n  )\n\n  const deskTool: DeskToolContextValue = useMemo(() => {\n    return {\n      features,\n      layoutCollapsed,\n      setLayoutCollapsed,\n      rootPaneNode,\n      structureContext: S.context,\n    }\n  }, [features, layoutCollapsed, rootPaneNode, S.context])\n\n  return <DeskToolContext.Provider value={deskTool}>{children}</DeskToolContext.Provider>\n}\n"],"names":["Delay","_ref","children","ms","ready","setReady","useState","useEffect","timeoutId","setTimeout","clearTimeout","jsx","Fragment","DocTitle","props","document","documentValue","schema","useSchema","schemaType","get","_type","error","value","useValuePreview","jsxs","message","title","style","color","TimeAgo","_ref2","time","timeAgo","useTimeAgo","isClientError","e","POLL_INTERVAL","visiblePoll$","getVisiblePoll$","fromEvent","pipe","startWith","map","visibilityState","distinctUntilChanged","switchMap","visible","timer","EMPTY","shareReplay","refCount","bufferSize","getDocumentExistence","documentId","_ref3","versionedClient","draftId","getDraftId","publishedId","getPublishedId","requestOptions","uri","getDataUrl","concat","json","query","excludeContent","tag","observable","request","_ref4","omitted","nonExistant","filter","doc","reason","length","some","id","fetchCrossDatasetReferences","context","checkDocumentId","of","totalCount","references","currentDataset","config","dataset","url","catchError","statusCode","useInternalReferences","createHookFromObservableFactory","_ref5","documentStore","referencesClause","totalClause","fetchQuery","listenQuery","fetch","listen","transitions","throttleTime","useCrossDatasetReferences","_ref6","useReferringDocuments","useClient","DEFAULT_STUDIO_CLIENT_OPTIONS","useDocumentStore","internalReferences","isInternalReferencesLoading","useMemo","crossDatasetReferences","isCrossDatasetReferencesLoading","projectIds","Array","from","Set","crossDatasetReference","projectId","Boolean","sort","datasetNames","datasetName","hasUnknownDatasetNames","isLoading","PublishedStatus","updatedAt","_updatedAt","statusLabel","Tooltip","portal","content","Box","padding","Text","size","TextWithTone","tone","dimmed","muted","PublishIcon","DraftStatus","EditIcon","PaneItemPreview","icon","layout","presence","isRecord","isValidElement","isString","isNumber","draft","published","useMemoObservable","getPreviewStateObservable","documentPreviewStore","_id","status","Inline","space","DocumentPreviewPresence","SanityDefaultPreview","getPreviewValueWithFallback","isPlaceholder","missingContext","Error","PaneRouterContext","createContext","index","groupIndex","siblingIndex","payload","params","hasGroupSiblings","groupLength","routerPanesState","BackLink","ChildLink","ReferenceChildLink","handleEditReference","ParameterizedLink","replaceCurrent","closeCurrent","duplicateCurrent","setView","setParams","setPayload","navigateIntent","forwardRef","ref","useContext","panes","slice","state","StateLink","childId","childPayload","childParameters","rest","documentType","parentRefPath","template","type","pathToString","currentPanes","nextParams","useUnique","nextPayload","nextState","currentGroup","currentSibling","nextSibling","nextGroup","nextPanes","usePaneRouter","EMPTY_ARRAY","ReferencePreviewLink","onClick","documentPresence","useDocumentPresence","useDocumentPreviewStore","Link","useCallback","LinkComponent","linkProps","name","PreviewCard","__unstable_focusRing","as","radius","_a","_b","_c","_d","_e","ChevronWrapper","styled","__template","CrossDatasetReferencesDetails","default","details","CrossDatasetReferencesSummary","summary","Table","table","_ref8","theme","rem","sanity","_ref9","_ref10","DocumentIdFlex","Flex","OtherReferenceCount","difference","placement","Container","width","InfoOutlineIcon","ConfirmDeleteDialogBody","_ref11","documentTitle","action","onReferenceLinkClick","toast","useToast","renderPreviewItem","item","UnknownIcon","subtitle","documentCount","toLocaleString","normalizedDatasetNames","datasetsCount","datasetNameList","join","Card","marginBottom","flex","WarningOutlineIcon","marginLeft","shadow","direction","Stack","borderTop","margin","paddingY","align","marginRight","DocumentsIcon","textOverflow","ChevronDownIcon","overflow","paddingBottom","paddingX","Label","minWidth","reference","_ref12","gap","justify","CopyToClipboard","text","onCopy","push","Button","mode","ClipboardIcon","fontSize","DialogBody","attrs","LoadingContainer","ConfirmDeleteDialog","_ref13","onCancel","onConfirm","dialogId","useId","capitalizedAction","substring","toUpperCase","showConfirmButton","Dialog","header","footer","Grid","columns","onClose","onClickOutside","Spinner","marginTop","ConfirmDeleteDialogContainer","setError","handleRetry","ErrorBoundary","onCatch","MENU_GROUP_POPOVER_PROPS","constrainSize","PaneMenuButtonItem","disabled","isAfterGroup","node","MenuDivider","expanded","child","childIndex","key","MenuGroup","popover","PaneContextMenuItemResolver","intent","PaneContextIntentMenuItem","PaneContextMenuItem","tooltipContent","TooltipOfDisabled","MenuItem","hotkeys","hotkey","split","iconRight","selected","CheckmarkIcon","onAction","pressed","intentLink","useIntentLink","handleClick","event","href","CONTEXT_MENU_POPOVER_PROPS","nodesHasTone","nodes","PaneContextMenuButton","hasCritical","hasCaution","MenuButton","button","StatusButton","EllipsisVerticalIcon","menu","Menu","nodeIndex","PANE_DEBUG","PANE_COLLAPSED_WIDTH","PANE_DEFAULT_MIN_WIDTH","PaneContext","PaneLayoutContext","usePaneLayout","pane","Root","Layer","PaneDivider","_ref14","element","resize","dragging","setDragging","handleMouseDown","preventDefault","startX","pageX","handleMouseMove","deltaX","handleMouseUp","window","removeEventListener","addEventListener","onMouseDown","Pane","currentMinWidth","currentMinWidthProp","currentMaxWidth","currentMaxWidthProp","flexProp","minWidthProp","maxWidth","maxWidthProp","restProps","rootElement","setRootElement","collapse","collapsed","layoutCollapsed","expand","expandedElement","mount","find","p","paneIndex","indexOf","nextPane","isLast","nextCollapsed","forwardedRef","useForwardedRef","setRef","refValue","current","handleCollapse","handleExpand","contextValue","hidden","divider","LegacyLayerProvider","zOffset","Infinity","Provider","BoundaryElementProvider","height","usePane","displayName","PaneContent","forwardedAs","RootCard","PaneFooter","_f","Layout","TitleCard","_ref15","fg","bg","card","enabled","css","TitleTextSkeleton","TextSkeleton","TitleText","TabsBox","_ref16","rgba","base","PaneHeader","actions","backButton","contentAfter","loading","subActions","tabs","tabIndex","paneElement","paneRect","useElementRect","layoutStyle","innerHeight","handleTitleClick","handleLayoutClick","showTabsOrSubActions","LayerProvider","sizing","paddingLeft","animated","weight","paddingTop","PaneHeaderActionButton","PaneHeaderMenuItemActionButton","PaneHeaderMenuGroupActionButton","console","warn","PaneHeaderActionIntentButton","disabledTooltipContent","label","idx","isMenuNodeButton","renderAsButton","isNotMenuNodeButton","negate","resolveMenuNodes","fieldActions","menuItems","menuItemGroups","keyOffset","i","a","mapFieldActionToPaneMenuNode","groups","itemGroup","group","g","ungroupedItems","shortcut","actionHandler","showAsAction","childIdx","IntentButton","Link2","linkRef","IntentLink","role","InsufficientPermissionsMessageTooltip","_ref17","reveal","currentUser","useCurrentUser","InsufficientPermissionsMessage","POPOVER_PROPS","getIntent","templates","typeName","t","templateId","baseParams","initialDocumentId","parameters","PaneHeaderCreateButton","_ref18","templateItems","useTemplates","templatePermissions","isTemplatePermissionsLoading","useTemplatePermissions","nothingGranted","every","permission","granted","permissionsById","reduce","acc","ComposeIcon","firstItem","permissions","itemIndex","isNonNullable","hashObject","sortObject","v","isArray","Object","entries","_ref19","_ref20","keyA","keyB","localeCompare","normalize","JSON","parse","stringify","PaneHeaderActions","memo","initialValueTemplateItems","initialValueTemplateItemsFromStructure","actionHandlers","EMPTY_OBJECT","handleAction","handler","menuNodes","actionNodes","contextMenuNodes","initialValueTemplateItemFromMenuItems","menuItemIndex","intentParams","templateParams","_ref21","initialValueTemplateItem","description","combinedInitialValueTemplates","uniqBy","DISABLED_REASON_TITLE","NOTHING_TO_DELETE","DeleteAction","_ref22","onComplete","delete","deleteOp","useDocumentOperation","isDeleting","setIsDeleting","isConfirmDialogOpen","setConfirmDialogOpen","handleCancel","handleConfirm","execute","handle","isPermissionsLoading","useDocumentPairPermissions","TrashIcon","operationLabel","onHandle","dialog","component","NO_CHANGES","NOT_PUBLISHED","DiscardChangesAction","_ref23","liveEdit","discardChanges","ResetIcon","NOTHING_TO_DUPLICATE","DuplicateAction","_ref24","duplicate","useRouter","isDuplicating","setDuplicating","dupeId","uuid","CopyIcon","HistoryRestoreAction","_ref25","revision","restore","isRevisionInitialVersion","isRevisionLatestVersion","RestoreIcon","DocumentPaneContext","useDocumentPane","documentPane","LIVE_EDIT_ENABLED","ALREADY_PUBLISHED","NOT_READY","getDisabledReason","publishedAt","PublishAction","publishState","setPublishState","publish","validationStatus","useValidationStatus","syncState","useSyncState","changesOpen","onHistoryOpen","editState","useEditState","_rev","hasValidationErrors","validation","isValidationErrorMarker","publishScheduled","setPublishScheduled","isSyncing","isValidating","hasDraft","doPublish","validationComplete","didPublish","delay","transactionSyncLock","UnpublishAction","_ref26","unpublish","UnpublishIcon","LiveEditBadge","_DEBUG","EMPTY_PARAMS","LOADING_PANE","Symbol","DOCUMENT_PANEL_PORTAL_ELEMENT","activePanes","setActivePanes","getIntentState","routerState","editDocumentId","isTemplate","canHandleIntent","call","schemaTypeName","options","paneParams","legacyEditParamsToState","decodeURIComponent","err","encodePanesSegment","encodeChunks","encodeURIComponent","legacyEditParamsToPath","toState","pathSegment","parsePanesSegment","toPath","router","route","create","intents","path","transform","panePattern","isParam","str","test","isPayload","exclusiveParams","isTruthy","parseChunks","chunks","initial","chunk","tryParseBase64Payload","firstSibling","paneIsFirstSibling","sameAsFirst","encodedPayload","btoa","encodedParams","entry","valueFromFirstSibling","includes","_ref27","flat","parseOldPanesSegment","restOfSiblings","segment","sibling","omit","buffer","match","payloadChunk","tryParsePayload","data","atob","DOCUMENT_PANEL_MIN_WIDTH","DOCUMENT_PANEL_INITIAL_MIN_WIDTH","DOCUMENT_INSPECTOR_MIN_WIDTH","DOCUMENT_INSPECTOR_MAX_WIDTH","INSPECT_ACTION_PREFIX","DEFAULT_MENU_ITEM_GROUPS","HISTORY_INSPECTOR_NAME","VALIDATION_INSPECTOR_NAME","position","zIndex","lineHeight","display","left","bottom","right","borderBottom","opacity","DocumentInspectorHeader","closeButtonLabel","CloseIcon","DeskToolContext","useDeskTool","deskTool","div","Resizer","onResize","onResizeStart","mouseXRef","useRef","Resizable","setElement","elementWidthRef","targetWidth","setTargetWidth","handleResizeStart","offsetWidth","handleResize","w","Math","min","max","getPathTypes","result","s","jsonType","field","fields","f","itemType","ofType","_key","values","MARKER_ICON","ErrorOutlineIcon","warning","info","MARKER_TONE","ValidationInspector","onFocus","onPathOpen","handleOpen","marker","ValidationCard","onOpen","errorInfo","setErrorInfo","level","createElement","DocumentNodePathBreadcrumbs","pathTypes","fontWeight","useMenuItem","validationMarkers","hasErrors","isValidationError","hasWarnings","isValidationWarning","CheckmarkCircleIcon","validationInspector","TIMELINE_LABELS","discardDraft","editDraft","editLive","TIMELINE_ICON_COMPONENTS","AddCircleIcon","formatTimelineEventLabel","getTimelineEventIconComponent","UserAvatarStack","_ref28","maxLength","userIds","AvatarStack","userId","UserAvatar","user","withTooltip","IconWrapper","_ref29","borderColor","skeleton","_ref30","$selected","IconBox","EventLabel","TimestampBox","_ref31","TIMELINE_ITEM_EVENT_TONE","withinSelection","TimelineItem","_ref32","isFirst","isLatest","isSelected","onSelect","timestamp","iconComponent","authorUserIds","authors","formattedTimestamp","parsedDate","Date","formattedDate","format","evt","stopPropagation","StackWrapper","ListWrapper","_ref33","$visible","Timeline","_ref34","disabledBeforeFirstChunk","hasMoreChunks","lastChunk","onLoadMore","firstChunk","mounted","setMounted","filteredChunks","c","selectedIndex","findIndex","renderItem","_ref35","activeIndex","endTimestamp","CommandList","activeItemDataAttr","ariaLabel","autoFocus","initialIndex","initialScrollAlign","itemHeight","items","onEndReached","onEndReachedIndexOffset","overscan","wrapAround","TimelineError","Popover","TimelineMenu","_ref36","setTimelineRange","setTimelineMode","timelineError","timelineStore","open","setOpen","setButton","setPopover","useTimelineSelector","realRevChunk","sinceTime","handleClose","handleClickOutside","handleGlobalKeyDown","focus","useClickOutside","useGlobalKeyDown","selectRev","revChunk","sinceId","revId","findRangeForRev","closable","selectSince","sinceChunk","findRangeForSince","handleLoadMore","loadMore","timeLabel","useFormattedTimestamp","revLabel","upperFirst","sinceLabel","buttonLabel","SelectIcon","formatted","LoadingContent","collectLatestAuthorAnnotations","diff","authorMap","Map","visitDiff","annotation","author","previous","set","b","Scroller","ScrollContainer","ChangesInspector","scrollRef","onOlderRevision","selectionState","isComparingCurrent","documentContext","React","FieldWrapper","ChangeFieldWrapper","rootDiff","changeAnnotations","DiffTooltip","annotations","_ref37","Content","_ref38","NoChanges","DocumentChangeContext","ChangeList","changesInspector","features","reviewChanges","_ref39","since","_ref40","documentActions","documentBadges","definePlugin","prevActions","badges","prevBadges","badge","inspectors","tools","MasterDetailIcon","lazy","Promise","resolve","then","require","getInspectorItems","_ref41","currentInspector","hasValue","inspectorMenuItems","inspector","menuItem","isDisabled","getInspectItem","_ref42","BinaryDocumentIcon","getProductionPreviewItem","_ref43","previewUrl","EarthAmericasIcon","getMenuItems","inspectorItems","isSanityDocument","usePreviewUrl","setPreviewUrl","resolveProductionUrl","useSource","value$","useAsObservable","debounceTime","subscribe","next","getInitialValueTemplateOpts","opts","panePayload","structureNodeTemplate","templateName","urlTemplate","typeTemplates","InspectorMenuItem","setMenuItem","DocumentInspectorMenuItemsResolver","onMenuItems","len","lenRef","setMenuItems","menuItemsRef","newFieldActions","prev","inspectorIndex","DocumentPaneProvider","paneKey","unstable_fieldActions","fieldActionsResolver","unstable_languageFilter","languageFilterResolver","inspectorsResolver","presenceStore","usePresenceStore","paneRouter","setPaneParams","pushToast","views","viewsProp","paneOptions","documentIdRaw","templateParameters","initialValueRaw","useInitialValue","initialValue","patch","validationRaw","connectionState","useConnectionState","setInspectorMenuItems","languageFilter","focusPath","setFocusPath","pathFromString","activeViewId","view","timelineMode","setTimelineError","useTimelineStore","onError","rev","revTime","sinceAttributes","timelineDisplayed","timelineReady","setPresence","subscription","nextPresence","unsubscribe","inspectorName","setInspectorName","inspect","inspectParamRef","resolvedChangesInspector","inspectOpen","compareValue","displayed","newSince","newRev","handleFocus","nextFocusPath","setLocation","lastActiveAt","toISOString","handleBlur","blurredPath","patchRef","toMutationPatches","patches","handleChange","closeInspector","closeInspectorName","openInspector","nextInspectorName","nextInspector","currentParams","closeResult","handleHistoryClose","handleHistoryOpen","handlePaneClose","handlePaneSplit","toggleLegacyInspect","toggle","arguments","undefined","handleMenuAction","startsWith","handleKeyUp","isHotkey","handleLegacyInspectClose","openPath","onSetOpenPath","fieldGroupState","onSetFieldGroupState","collapsedPaths","onSetCollapsedPath","collapsedFieldSets","onSetCollapsedFieldSets","handleOnSetCollapsedPath","prevState","setAtPath","handleOnSetCollapsedFieldSet","handleSetActiveFieldGroup","groupName","requiredPermission","_createdAt","docId","docPermissionsInput","useDocumentValuePermissions","isNonExistent","readOnly","hasNoPermission","updateActionDisabled","isActionEnabled","createActionDisabled","reconnecting","isLocked","formState","useFormState","comparisonValue","formStateRef","setOpenPath","ops","getExpandOperations","forEach","op","onBlur","onChange","onHistoryClose","onInspectClose","onKeyUp","onMenuAction","onPaneClose","onPaneSplit","onSetActiveFieldGroup","onSetCollapsedFieldSet","restParams","pathFromUrl","resolveKeyedPath","rootFieldActionNodes","setRootFieldActionNodes","FieldActionsResolver","onActions","FieldActionsProvider","SerializeError","constructor","parentPath","hint","__publicField","withHelpUrl","helpId","HELP_URL","IMPLICIT_FIELDS","joinReferences","head","tail","schemaField","refTypes","to","refType","tailFields","tailWrapper","getExtendedProjection","orderBy","ordering","ORDER_BY_UPDATED_AT","by","ORDER_BY_CREATED_AT","DEFAULT_SELECTED_ORDERING_OPTION","DEFAULT_ORDERING_OPTIONS","maybeSerializeMenuItem","MenuItemBuilder","serialize","_context","spec","clone","getAction","getTitle","getGroup","getIcon","getParams","getShowAsAction","TITLE_REQUIRED","ACTION_OR_INTENT_REQUIRED","ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE","withSpec","builder","getOrderingMenuItem","extendedProjection","SortIcon","getOrderingMenuItemsForSchemaType","orderings","maybeSerializeMenuItemGroup","MenuItemGroupBuilder","_title","getId","ID_REQUIRED","disallowedPattern","validateId","disallowedChar","getStructureNodeId","camelCased","camelCase","getSlug","ComponentBuilder","getChild","getComponent","getOptions","getMenuItemGroups","componentOptions","resolveTypeForDocument","getClient","types","GenericViewBuilder","kebabCase","isSerializable","maybeSerializeView","isComponentSpec","ComponentViewBuilder","componentOrSpec","userComponent","COMPONENT_REQUIRED","FormViewBuilder","form","createDocumentChildResolver","_ref44","resolveDocumentNode","itemId","_ref45","currentSegment","DocumentBuilder","paneId","getDocumentId","getSchemaType","initialValueTemplate","getInitialValueTemplate","getInitialValueTemplateParameters","getViews","urlId","DOCUMENT_ID_REQUIRED","viewIds","dupes","uniq","viewId","getDocumentOptions","documentFromEditor","documentFromEditorWithInitialValue","_ref46","layoutOptions","DEFAULT_INTENT_HANDLER","defaultIntentChecker","intentName","_ref47","isEdit","isCreate","typedSpec","paneFilter","typeNames","getTypeNamesFromFilter","initialValueTemplates","tpl","identity","InitialValueTemplateItemBuilder","getDescription","getTemplateId","getParameters","defaultInitialValueTemplateItems","getStructureBuilder","getTypeNames","ordered","maybeSerializeInitialValueTemplateItem","menuItemsFromInitialValueTemplateItems","pickBy","noChildResolver","shallowIntentChecker","_ref48","GenericListBuilder","defaultLayout","getDefaultLayout","getCanHandleIntent","showIcons","displayOptions","getShowIcons","initialValueTemplatesSpecified","getInitialValueTemplates","validateFilter","trim","QUERY_PROVIDED_FOR_FILTER","createDocumentChildResolverForItem","parentItem","parent","DocumentListBuilder","apiVersion","getApiVersion","getFilter","defaultOrdering","getDefaultOrdering","FILTER_REQUIRED","inferInitialValueTemplates","inferTypeName","getSpec","flatMap","resolveNewDocumentOptions","option","getTypeNamesFromEqualityFilter","getTypeNamesFromInTypesFilter","pattern","matches","exec","candidate","normalized","replace","getArgType","thing","ListBuilder","isPromise","isListItem","defaultCanHandleIntent","isDocumentListItem","resolveChildForItem","target","maybeSerializeListItem","ListItemBuilder","listItem","gotWhat","helpText","INVALID_LIST_ITEM","getItems","LIST_ITEMS_MUST_BE_ARRAY","serializedItems","val","dupeIds","dupeDesc","LIST_ITEM_IDS_MUST_BE_UNIQUE","showIcon","getShowIcon","titleIsOptional","SCHEMA_TYPE_NOT_FOUND","serializeOptions","listChild","originalChild","childOptions","createDefaultChildResolver","DocumentListItemBuilder","SCHEMA_TYPE_REQUIRED","DocumentTypeListBuilder","cloneWithoutDefaultIntentHandler","shouldOverride","override","shouldShowIcon","preview","prepare","select","media","BUNDLED_DOC_TYPES","isBundledDocType","isDocumentType","isList","collection","getDocumentTypes","_ref49","n","getDocumentTypeListItems","getDocumentTypeListItem","startCase","childContext","list","getDocumentTypeList","typeNameOrSpec","StackCompactIcon","StackIcon","hasIcon","getDefaultStructure","createStructureBuilder","_ref50","defaultDocumentNode","source","configContext","getConfigContextFromSource","structureBuilder","defaults","documentTypeList","_len","args","documentTypeListItem","_len2","_key2","documentTypeListItems","_len3","_key3","_len4","_key4","documentWithInitialValueTemplate","_len5","_key5","defaultDocument","_len6","_key6","_len7","_key7","_len8","_key8","menuItemGroup","_len9","_key9","_len10","_key10","documentList","_len11","_key11","documentListItem","_len12","_key12","orderingMenuItem","_len13","_key13","orderingMenuItemsForType","_len14","_key14","editor","_len15","_key15","_len16","_key16","isValidElementType","uniqueId","DeskToolProvider","_ref51","structure","resolveStructure","setLayoutCollapsed","useConfigContextFromSource","S","rootPaneNode","resizablePanes","splitPanes","splitViews","structureContext"],"mappings":"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"}